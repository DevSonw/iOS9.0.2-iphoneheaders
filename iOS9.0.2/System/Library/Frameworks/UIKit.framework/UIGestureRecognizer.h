/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 6, 2015 at 2:31:22 PM Japan Standard Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /System/Library/Frameworks/UIKit.framework/UIKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <UIKit/UIKit-Structs.h>
#import <UIKit/_UIGestureRecognizerFailureRequirementDelegate.h>
#import <UIKit/_UIForceLevelClassifierDelegate.h>
#import <UIKit/_UITouchable.h>

@protocol UIGestureRecognizerDelegate;
@class NSMutableArray, UIView, UITouchesEvent, UIPressesEvent, NSMutableSet, _UIForceLevelClassifier, _UIGestureRecognizerFailureRequirement, _UITouchForceObservable, NSObservation, NSObservationSource, NSArray, NSString;

@interface UIGestureRecognizer : NSObject <_UIGestureRecognizerFailureRequirementDelegate, _UIForceLevelClassifierDelegate, _UITouchable> {

	NSMutableArray* _targets;
	NSMutableArray* _delayedTouches;
	UIView* _view;
	UITouchesEvent* _updateEvent;
	UIPressesEvent* _updateButtonEvent;
	double _lastTouchTimestamp;
	id<UIGestureRecognizerDelegate> _delegate;
	NSMutableSet* _friends;
	int _state;
	int _allowedTouchTypes;
	_UIForceLevelClassifier* _forceClassifier;
	int _requiredPreviewForceState;
	_UIGestureRecognizerFailureRequirement* _forceFailureRequirement;
	_UITouchForceObservable* _touchForceObservable;
	NSObservation* _touchForceObservableAndClassifierObservation;
	NSMutableArray* _forceTargets;
	unsigned _forcePressCount;
	NSObservationSource* _beganObservable;
	struct {
		unsigned delegateShouldBegin : 1;
		unsigned delegateCanPrevent : 1;
		unsigned delegateCanBePrevented : 1;
		unsigned delegateShouldRecognizeSimultaneously : 1;
		unsigned delegateShouldReceiveTouch : 1;
		unsigned delegateShouldRequireFailure : 1;
		unsigned delegateShouldBeRequiredToFail : 1;
		unsigned delegateFailed : 1;
		unsigned privateDelegateShouldBegin : 1;
		unsigned privateDelegateCanPrevent : 1;
		unsigned privateDelegateCanBePrevented : 1;
		unsigned privateDelegateShouldRecognizeSimultaneously : 1;
		unsigned privateDelegateShouldReceiveTouch : 1;
		unsigned privateDelegateShouldReceivePress : 1;
		unsigned privateDelegateShouldRequireFailure : 1;
		unsigned privateDelegateShouldBeRequiredToFail : 1;
		unsigned subclassShouldRequireFailure : 1;
		unsigned subclassShouldBeRequiredToFail : 1;
		unsigned privateSubclassShouldRequireFailure : 1;
		unsigned privateSubclassShouldBeRequiredToFail : 1;
		unsigned hasSubclassDynamicFailureRequirements : 1;
		unsigned hasDelegateDynamicFailureRequirements : 1;
		unsigned queriedFailureRequirements : 1;
		unsigned cancelsTouchesInView : 1;
		unsigned delaysTouchesBegan : 1;
		unsigned delaysTouchesEnded : 1;
		unsigned disabled : 1;
		unsigned dirty : 1;
		unsigned delivered : 1;
		unsigned deliveredEndedOrCancelled : 1;
		unsigned continuous : 1;
		unsigned requiresDelayedBegan : 1;
		unsigned willBeginAfterSatisfyingFailureRequirements : 1;
		unsigned requiresSystemGesturesToFail : 1;
		unsigned acceptsFailureRequirements : 1;
	}  _gestureFlags;
	NSMutableSet* _failureRequirements;
	NSMutableSet* _failureDependents;
	NSMutableSet* _dynamicFailureRequirements;
	NSMutableSet* _dynamicFailureDependents;
	_UIGestureRecognizerFailureRequirement* _relationshipFailureRequirement;
	NSArray* _allowedPressTypes;

}

@property (nonatomic,readonly) int state; 
@property (assign,nonatomic,__weak) id<UIGestureRecognizerDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (assign,getter=isEnabled,nonatomic) char enabled; 
@property (nonatomic,readonly) UIView * view; 
@property (assign,nonatomic) char cancelsTouchesInView; 
@property (assign,nonatomic) char delaysTouchesBegan; 
@property (assign,nonatomic) char delaysTouchesEnded; 
@property (nonatomic,copy) NSArray * allowedTouchTypes; 
@property (nonatomic,copy) NSArray * allowedPressTypes;                                    //@synthesize allowedPressTypes=_allowedPressTypes - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(char)_shouldDefaultToTouches;
+(char)_shouldUseLinearForceLevelClassifier;
+(char)_touchesBeganWasDelayedForTouch:(id)arg1 ;
-(void)pu_cancel;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(void)setDelegate:(id<UIGestureRecognizerDelegate>)arg1 ;
-(void)dealloc;
-(id)init;
-(NSString *)description;
-(id<UIGestureRecognizerDelegate>)delegate;
-(UIView *)view;
-(void)setDelaysTouchesBegan:(char)arg1 ;
-(int)state;
-(id)initWithTarget:(id)arg1 action:(SEL)arg2 ;
-(void)_setRequiresSystemGesturesToFail:(char)arg1 ;
-(CGPoint)locationInView:(id)arg1 ;
-(void)setState:(int)arg1 ;
-(void)touchesBegan:(id)arg1 withEvent:(id)arg2 ;
-(void)touchesMoved:(id)arg1 withEvent:(id)arg2 ;
-(void)touchesEnded:(id)arg1 withEvent:(id)arg2 ;
-(void)touchesCancelled:(id)arg1 withEvent:(id)arg2 ;
-(void)pressesBegan:(id)arg1 withEvent:(id)arg2 ;
-(void)pressesEnded:(id)arg1 withEvent:(id)arg2 ;
-(void)pressesCancelled:(id)arg1 withEvent:(id)arg2 ;
-(char)_isDirty;
-(void)ignoreTouch:(id)arg1 forEvent:(id)arg2 ;
-(void)ignorePress:(id)arg1 forEvent:(id)arg2 ;
-(void)_updateGestureStateWithEvent:(id)arg1 buttonEvent:(id)arg2 afterDelay:(char)arg3 ;
-(void)_queueForResetIfFinished;
-(void)reset;
-(void)setView:(UIView *)arg1 ;
-(void)setEnabled:(char)arg1 ;
-(void)setCancelsTouchesInView:(char)arg1 ;
-(void)setAllowedPressTypes:(NSArray *)arg1 ;
-(void)setAllowedTouchTypes:(NSArray *)arg1 ;
-(char)isEnabled;
-(void)requireGestureRecognizerToFail:(id)arg1 ;
-(void)_touchesBegan:(id)arg1 withEvent:(id)arg2 ;
-(void)_touchesMoved:(id)arg1 withEvent:(id)arg2 ;
-(void)_touchesEnded:(id)arg1 withEvent:(id)arg2 ;
-(void)_touchesCancelled:(id)arg1 withEvent:(id)arg2 ;
-(void)_setDirty;
-(void)pressesChanged:(id)arg1 withEvent:(id)arg2 ;
-(char)_requiresSystemGesturesToFail;
-(void)removeTarget:(id)arg1 action:(SEL)arg2 ;
-(void)setDelaysTouchesEnded:(char)arg1 ;
-(unsigned)numberOfTouches;
-(id)_activeTouchesForEvent:(id)arg1 ;
-(char)_isRecognized;
-(unsigned)_forcePressCount;
-(char)_shouldDelayUntilForceLevelRequirementIsMet;
-(char)canBePreventedByGestureRecognizer:(id)arg1 ;
-(char)canPreventGestureRecognizer:(id)arg1 ;
-(void)addTarget:(id)arg1 action:(SEL)arg2 ;
-(char)_shouldReceiveTouch:(id)arg1 recognizerView:(id)arg2 touchView:(id)arg3 ;
-(id)_touchForceObservable;
-(void)_physicalButtonsBegan:(id)arg1 withEvent:(id)arg2 ;
-(void)_physicalButtonsEnded:(id)arg1 withEvent:(id)arg2 ;
-(void)_physicalButtonsCancelled:(id)arg1 withEvent:(id)arg2 ;
-(void)touchesEstimatedPropertiesUpdated:(id)arg1 ;
-(CGPoint)locationOfTouch:(unsigned)arg1 inView:(id)arg2 ;
-(void)requireOtherGestureToFail:(id)arg1 ;
-(void)_forceLevelClassifier:(id)arg1 currentForceLevelDidChange:(int)arg2 ;
-(int)_currentForceLevel;
-(void)_connectInterfaceBuilderEventConnection:(id)arg1 ;
-(char)_delegateShouldReceivePress:(id)arg1 ;
-(int)requiredPreviewForceState;
-(int)currentPreviewForceState;
-(void)_setForceLevelClassifier:(id)arg1 ;
-(void)_addForceTarget:(id)arg1 action:(SEL)arg2 ;
-(void)setRequiredPreviewForceState:(int)arg1 ;
-(void)_setAcceptsFailureRequiments:(char)arg1 ;
-(void)_resetGestureRecognizer;
-(char)delaysTouchesBegan;
-(id)_briefDescription;
-(char)_shouldBeRequiredToFailByGestureRecognizer:(id)arg1 ;
-(void)_clearReferencesToRelatedGesture:(id)arg1 ;
-(void)_enqueueDelayedTouchesToSend;
-(void)_clearUpdateTimer;
-(id)_installedFailureRequirements;
-(char)_wantsPartialTouchSequences;
-(char)_shouldBegin;
-(NSArray *)allowedPressTypes;
-(void)_updateForceClassifierWithEvent:(id)arg1 ;
-(char)_isFriendWithGesture:(id)arg1 ;
-(void)_enqueueDelayedTouchToSend:(id)arg1 ;
-(void)_delayTouch:(id)arg1 forEvent:(id)arg2 ;
-(void)_delayTouchesForEvent:(id)arg1 inPhase:(int)arg2 ;
-(void)_clearDelayedTouches;
-(void)_willBeginAfterSatisfyingFailureRequirements;
-(void)_delayTouchesForEventIfNeeded:(id)arg1 ;
-(void)_updateGestureWithEvent:(id)arg1 buttonEvent:(id)arg2 ;
-(char)_touchTypeIsAllowed:(id)arg1 ;
-(char)_delegateShouldReceiveTouch:(id)arg1 ;
-(char)_shouldReceivePress:(id)arg1 ;
-(char)_affectedByGesture:(id)arg1 ;
-(char)_forceRequirementSatisfied;
-(char)_delegateCanPreventGestureRecognizer:(id)arg1 ;
-(void)_addFailureDependent:(id)arg1 ;
-(void)_removeFailureDependent:(id)arg1 ;
-(id)_relationshipFailureRequirement;
-(char)_requiredPreviewForceStateSatisfiedByForceLevel:(int)arg1 ;
-(void)_appendDescriptionToString:(id)arg1 atLevel:(int)arg2 includingDependencies:(char)arg3 ;
-(char)cancelsTouchesInView;
-(char)delaysTouchesEnded;
-(void)_appendSubclassDescription:(id)arg1 ;
-(void)_appendDescription:(id)arg1 forDependencies:(id)arg2 toString:(id)arg3 atLevel:(int)arg4 ;
-(id)_requiredFailureRequirementsForFailureRequirement:(id)arg1 ;
-(id)_dependentFailureRequirementsForFailureRequirement:(id)arg1 ;
-(char)_isFailureRequirementEnabled:(id)arg1 ;
-(char)_shouldDependentFailureRequirementsOfFailureRequirementFail:(id)arg1 ;
-(void)_failureRequirement:(id)arg1 requiredFailureRequirement:(id)arg2 completedWithEvent:(id)arg3 ;
-(void)_allFailureRequirementsCompletedRelatedToFailureRequirement:(id)arg1 ;
-(id)_delegateDescriptionForFailureRequirement:(id)arg1 ;
-(id)_gestureRecognizerForFailureRequirement:(id)arg1 ;
-(double)lastTouchTimestamp;
-(id)_delayedTouches;
-(char)_hasTargets;
-(int)_exclusiveDirectionalPressAxis;
-(char)_shouldRequireFailureOfGestureRecognizer:(id)arg1 ;
-(char)shouldRequireFailureOfGestureRecognizer:(id)arg1 ;
-(char)shouldBeRequiredToFailByGestureRecognizer:(id)arg1 ;
-(CGPoint)_centroidOfTouches:(id)arg1 excludingEnded:(char)arg2 ;
-(float)_distanceBetweenTouches:(id)arg1 ;
-(void)_touchWasCancelled:(id)arg1 ;
-(char)_requiresGestureRecognizerToFail:(id)arg1 ;
-(void)_delayedUpdateGesture;
-(void)_resetIfFinished;
-(int)_depthFirstViewCompare:(id)arg1 ;
-(id)_beganObservable;
-(void)_addFriendGesture:(id)arg1 ;
-(char)_isExcludedByGesture:(id)arg1 ;
-(void)_cancelRecognition;
-(void)_exclude;
-(void)_addDynamicFailureDependent:(id)arg1 ;
-(void)_addDynamicFailureRequirement:(id)arg1 ;
-(void)removeFailureRequirement:(id)arg1 ;
-(char)_acceptsFailureRequirements;
-(int)_requiredForceLevel;
-(void)_setRequiredForceLevel:(int)arg1 ;
-(id)_forceLevelClassifier;
-(void)_removeForceTarget:(id)arg1 action:(SEL)arg2 ;
-(void)_invalidate;
-(NSArray *)allowedTouchTypes;
-(void)_detach;
@end

