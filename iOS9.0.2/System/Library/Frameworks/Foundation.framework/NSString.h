/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 6, 2015 at 2:30:36 PM Japan Standard Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /System/Library/Frameworks/Foundation.framework/Foundation
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <Foundation/Foundation-Structs.h>
#import <libobjc.A.dylib/ASParsingLeafNode.h>
#import <libobjc.A.dylib/CKShortDescription.h>
#import <libobjc.A.dylib/CKRecordValue.h>
#import <libobjc.A.dylib/CNKeyDescriptor_Private.h>
#import <libobjc.A.dylib/CSCoderEncoder.h>
#import <libobjc.A.dylib/NSCopying.h>
#import <libobjc.A.dylib/NSMutableCopying.h>
#import <libobjc.A.dylib/NSSecureCoding.h>

@class NSData;

@interface NSString : NSObject <ASParsingLeafNode, CKShortDescription, CKRecordValue, CNKeyDescriptor_Private, CSCoderEncoder, NSCopying, NSMutableCopying, NSSecureCoding>

@property (nonatomic,readonly) char sf_isFeedScheme; 
@property (nonatomic,readonly) NSString * sf_URLScheme; 
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) NSData * _FTDataFromBase64String; 
@property (nonatomic,readonly) NSData * _FTDataFromHexString; 
@property (nonatomic,readonly) NSString * mobileMeDomain; 
@property (nonatomic,readonly) char hasMobileMeSuffix; 
@property (nonatomic,readonly) NSString * stripMobileMSuffixIfPresent; 
@property (copy,readonly) NSString * stringByRemovingPercentEncoding; 
@property (readonly) unsigned length; 
+(id)brc_pathWithFileSystemRepresentation:(const char*)arg1 ;
+(id)brc_pathWithDeviceID:(int)arg1 fileID:(unsigned long long)arg2 ;
+(id)brc_representableHFSFileNameWithBase:(id)arg1 suffix:(id)arg2 extension:(id)arg3 makeDotFile:(char)arg4 ;
+(char)expectsContent;
+(char)acceptsTopLevelLeaves;
+(char)parsingLeafNode;
+(char)parsingWithSubItems;
+(char)frontingBasicTypes;
+(char)notifyOfUnknownTokens;
+(id)stringWithFileSystemRepresentation:(const char*)arg1 ;
+(id)stringWithContentsOfFile:(id)arg1 usingEncoding:(unsigned)arg2 ;
+(id)ellipsisString;
+(id)stringWithFormat:(id)arg1 andArguments:(id)arg2 ;
+(id)mf_commaSeparatedRecipientListWithRecipientCount:(unsigned)arg1 prefixForRecipientAtIndex:(/*^block*/id)arg2 stringForRecipientAtIndex:(/*^block*/id)arg3 lengthValidationBlock:(/*^block*/id)arg4 ;
+(id)_attendeeNameExtensions;
+(id)_attendeePartialSurnames;
+(id)safari_stringWithJSValue:(OpaqueJSValueRef)arg1 context:(OpaqueJSContextRef)arg2 nullStringPolicy:(long)arg3 ;
+(void)_safari_reverseEnumerateComponents:(id)arg1 usingBlock:(/*^block*/id)arg2 ;
+(id)safari_stringAsHexWithBuffer:(const char*)arg1 length:(unsigned long)arg2 ;
+(id)safari_stringWithJSValue:(OpaqueJSValueRef)arg1 context:(OpaqueJSContextRef)arg2 ;
+(id)safari_stringWithUTF8Bytes:(const void*)arg1 length:(unsigned)arg2 ;
+(id)safari_stringByBase64EncodingData:(id)arg1 ;
+(id)safari_stringAsHexWithData:(id)arg1 ;
+(id)stringWithFileSystemRepresentation:(const char*)arg1 ;
+(id)stringWithFileSystemRepresentation:(const char*)arg1 length:(unsigned)arg2 ;
+(id)gs_stringWithFileSystemRepresentation:(const char*)arg1 ;
+(id)mf_stringRepresentationForBytes:(long long)arg1 ;
+(id)mf_UUID;
+(id)mf_messageIDStringWithDomainHint:(id)arg1 ;
+(id)mf_stringWithAttachmentCharacter;
+(id)mf_stringForMimeTypeFromFileName:(id)arg1 ;
+(id)mf_stringFromMimeRichTextString:(id)arg1 asHTML:(char)arg2 ;
+(id)mf_stringFromMimeEnrichedString:(id)arg1 asHTML:(char)arg2 ;
+(id)da_new64ByteGUID;
+(id)da_newGUID;
+(id)queryStringForRadioRequestParameters:(id)arg1 protocolVersion:(int)arg2 error:(id*)arg3 ;
+(id)ellipsisString;
+(id)stringWithContentsOfFile:(id)arg1 usingEncoding:(unsigned)arg2 ;
+(id)stringWithFileSystemRepresentation:(const char*)arg1 ;
+(id)_phoneURLScheme;
+(id)CDVStringWithNameSpace:(id)arg1 andName:(id)arg2 ;
+(id)CDVPreconditionHeaderValueWithCTag:(id)arg1 pathTag:(id)arg2 ;
+(id)CDVStringWithNumberOfSpaces:(unsigned)arg1 ;
+(id)CDVPreconditionHeaderValueWithCTag:(id)arg1 ;
+(id)MSMSUserDirectory;
+(id)MSMakeUUID;
+(id)MSTempFilePath;
+(id)MSStringWithBool:(char)arg1 ;
+(id)mf_stringWithData:(id)arg1 encoding:(unsigned)arg2 ;
+(id)mf_formattedAddressWithName:(id)arg1 email:(id)arg2 useQuotes:(char)arg3 ;
+(id)mf_nameExtensions;
+(id)mf_partialSurnames;
+(id)apsStringGUID;
+(int)editDistance:(id)arg1 string:(id)arg2 ;
+(int)editDistance:(id)arg1 string:(id)arg2 ;
+(int)ik_valueForBooleanAttribute:(id)arg1 ;
+(float)widthFittingMaximumInteger:(int)arg1 withFont:(id)arg2 ;
+(id)_mapkit_formattedStringForHourRanges:(id)arg1 timeZone:(id)arg2 ;
+(id)_maps_formatFloatForDistanceSign:(float)arg1 ;
+(id)_maps_formattedStringForFloat:(float)arg1 useIncreasedPrecision:(char)arg2 ;
+(id)_maps_formattedStringForFloat:(float)arg1 ;
+(id)_mapkit_stringForExpectedTravelTime:(double)arg1 ;
+(id)_mapkit_formattedStringForFloat:(float)arg1 ;
+(id)_mapkit_localizedDistanceStringWithMeters:(unsigned)arg1 includeTrip:(char)arg2 abbreviated:(char)arg3 ;
+(id)_mapkit_commaListDelimiter;
+(id)_mapkit_voiceOverLocalizedDistanceStringWithMeters:(unsigned)arg1 includeTrip:(char)arg2 ;
+(id)_mapkit_formattedStringForFloatingPointNumber:(id)arg1 ;
+(id)_mapkit_formattedStringForCoordinate:(SCD_Struct_NS55)arg1 ;
+(id)_mapkit_formattedStringForInteger:(int)arg1 ;
+(char)_cn_isBlank:(id)arg1 ;
+(id)_webkit_localCacheDirectoryWithBundleIdentifier:(id)arg1 ;
+(id)_web_stringWithData:(id)arg1 textEncodingName:(id)arg2 ;
+(void)setUsesFontLeading:(char)arg1 ;
+(float)defaultLineHeightForFont:(id)arg1 ;
+(void)setHyphenationFactor:(float)arg1 ;
+(float)defaultBaselineOffsetForFont:(id)arg1 ;
+(int)typesetterBehavior;
+(void)setTypesetterBehavior:(int)arg1 ;
+(float)hyphenationFactor;
+(char)usesFontLeading;
+(char)usesScreenFonts;
+(void)setUsesScreenFonts:(char)arg1 ;
+(void)setShowsInvisibleCharacters:(char)arg1 ;
+(char)showsInvisibleCharacters;
+(void)setShowsControlCharacters:(char)arg1 ;
+(char)showsControlCharacters;
+(id)_stringWithUnichar:(unsigned long)arg1 ;
+(id)stringWithUnichar:(unsigned long)arg1 ;
+(USetRef)_characterSetWithPattern:(id)arg1 ;
+(USetRef)_ideographSet;
+(USetRef)_japaneseLetterSet;
+(USetRef)_hiraganaSet;
+(USetRef)_bopomofoSet;
+(USetRef)_bopomofoToneSet;
+(USetRef)_fullwidthLettersAndNumbersSet;
+(USetRef)_nonHiraganaOrKatakanaSet;
+(USetRef)_nonFullwidthLettersAndNumbersSet;
+(USetRef)_nonKatakanaOrKanjiSet;
+(USetRef)_nonHiraganaKatakanaOrBopomofoSet;
+(USetRef)_nonJapaneseLetterSet;
+(USetRef)_nonIdeographicCharacterSet;
+(char)_string:(id)arg1 matchesString:(id)arg2 ;
+(id)stringGUID;
+(id)stringGUIDForObject:(id)arg1 ;
+(id)copyStringGUIDForObject:(id)arg1 ;
+(id)generatedRoomNameForGroupChat;
+(id)copyStringGUID;
+(id)randomString;
+(USetRef)_characterSetWithPattern:(id)arg1 ;
+(USetRef)_ideographSet;
+(USetRef)_japaneseLetterSet;
+(id)stringWithDollarCode:(id)arg1 ;
+(id)MCMakeUUID;
+(id)sbs_stringFromCGRect:(CGRect)arg1 ;
+(id)cutStringGUID;
+(unsigned)defaultCStringEncoding;
+(id)localizedNameOfStringEncoding:(unsigned)arg1 ;
+(id)stringWithBytes:(const void*)arg1 length:(unsigned)arg2 encoding:(unsigned)arg3 ;
+(id)stringWithCString:(const char*)arg1 ;
+(id)stringWithCString:(const char*)arg1 length:(unsigned)arg2 ;
+(id)stringWithFormat:(id)arg1 locale:(id)arg2 ;
+(id)stringWithContentsOfFile:(id)arg1 ;
+(id)stringWithContentsOfURL:(id)arg1 ;
+(id)stringWithContentsOfURL:(id)arg1 usedEncoding:(unsigned*)arg2 error:(id*)arg3 ;
+(id)stringWithContentsOfFile:(id)arg1 usedEncoding:(unsigned*)arg2 error:(id*)arg3 ;
+(id)_web_stringRepresentationForBytes:(long long)arg1 ;
+(id)stringWithUTF8String:(const char*)arg1 ;
+(id)stringWithFormat:(id)arg1 ;
+(id)localizedStringWithFormat:(id)arg1 ;
+(id)stringWithCString:(const char*)arg1 encoding:(unsigned)arg2 ;
+(id)allocWithZone:(NSZone*)arg1 ;
+(id)string;
+(id)stringWithString:(id)arg1 ;
+(char)supportsSecureCoding;
+(void)initialize;
+(id)stringWithCharacters:(const unsigned short*)arg1 length:(unsigned)arg2 ;
+(id)pathWithComponents:(id)arg1 ;
+(unsigned)stringEncodingForData:(id)arg1 encodingOptions:(id)arg2 convertedString:(id*)arg3 usedLossyConversion:(char*)arg4 ;
+(const unsigned*)availableStringEncodings;
+(id)stringWithContentsOfFile:(id)arg1 encoding:(unsigned)arg2 error:(id*)arg3 ;
+(id)stringWithContentsOfURL:(id)arg1 encoding:(unsigned)arg2 error:(id*)arg3 ;
-(id)brc_libnotifyPerUserNotificationName;
-(id)brc_stringByBackslashEscapingCharactersInString:(id)arg1 ;
-(id)brc_realpathKeepingLastSymlink;
-(int)brc_compareToStringForHFS:(id)arg1 isCaseSensitive:(char)arg2 ;
-(char)brc_isSideFaultName;
-(id)brc_sideFaultName;
-(id)brc_pathExtension;
-(id)brc_displayFilenameWithExtensionHidden:(char)arg1 ;
-(char)brc_isAbsolutePath;
-(id)brc_pathRelativeToPath:(id)arg1 ;
-(char)brc_isInPackage;
-(id)brc_pathOfPackageRoot;
-(id)brc_pathRelativeToPackageRoot;
-(char)brc_isExcludedWithMaximumDepth:(unsigned)arg1 ;
-(const char*)brc_fileSystemRepresentation;
-(char)brc_isPackageRoot;
-(char)brc_isEqualToStringForHFS:(id)arg1 isCaseSensitive:(char)arg2 ;
-(id)brc_realpath;
-(id)brc_representableHFSFileNameWithSuffix:(id)arg1 addedExtension:(id)arg2 makeDotFile:(char)arg3 ;
-(id)brc_stringByDeletingPathBounceNo:(unsigned*)arg1 ;
-(char)brc_nameIsRepresentableOnHFS;
-(id)brc_representableDirectoryExtension;
-(id)brc_stringByDeletingPathBounceNo:(unsigned*)arg1 andPathExtension:(id*)arg2 ;
-(id)brc_stringByDeletingPathExtension;
-(id)brc_representableHFSFileNameWithNumber:(id)arg1 addedExtension:(id)arg2 makeDotFile:(char)arg3 ;
-(id)sg_initWithDataNoCopy:(id)arg1 encoding:(unsigned)arg2 ;
-(id)sg_deepCopy;
-(char)resemblesEmailAddress;
-(char)hasMailto;
-(id)stringAddingMailto;
-(id)stringRemovingMailto;
-(id)modTagForSubCal;
-(char)isSubCalURLString;
-(id)ldapHumanReadableStringFromSearchBase;
-(id)ldapSanitizedAddress;
-(id)stringByTrimmingNotesJunk;
-(id)stringByConvertingLineEndingsTo:(id)arg1 ;
-(id)stringFormattedForMSVersioning;
-(id)initWithASParseContext:(id)arg1 root:(id)arg2 parent:(id)arg3 callbackDict:(id)arg4 streamCallbackDict:(id)arg5 lengthUntilEndOfTerminator:(int)arg6 ;
-(int)parsingState;
-(id)stringByXMLUnquoting;
-(id)stringByURLQuotingPaths;
-(id)stringByURLQuoting;
-(id)stringByURLUnquoting;
-(id)appendSlashIfNeeded;
-(id)trimFirstComma;
-(id)trimFinalComma;
-(id)trimFirstChar:(unsigned short)arg1 ;
-(id)trimFinalChar:(unsigned short)arg1 ;
-(id)quote;
-(id)trimWhiteSpace;
-(id)trimCommas;
-(id)trimChar:(unsigned short)arg1 ;
-(id)unquote;
-(id)searchAndReplaceString:(id)arg1 withString:(id)arg2 ;
-(id)safeFilename;
-(id)removeSlashIfNeeded;
-(id)stringByEncodingSlashes;
-(id)stringByDecodingSlashes;
-(id)_stocksTrimmedString;
-(void)drawAtPoint:(CGPoint)arg1 forWidth:(float)arg2 withFont:(id)arg3 fontColor:(id)arg4 shadowColor:(id)arg5 ;
-(void)drawWithDegreeAtPoint:(CGPoint)arg1 font:(id)arg2 degreeFont:(id)arg3 degreeOffset:(CGSize)arg4 ;
-(CGSize)sizeWithDegreeWithFont:(id)arg1 degreeFont:(id)arg2 degreeOffset:(CGSize)arg3 ;
-(char)naui_containsCJKScripts;
-(NSRange)__ck_rangeOfSequenceOfCharactersFromSet:(id)arg1 options:(unsigned)arg2 range:(NSRange)arg3 ;
-(char)__ck_containsOnlyCharactersFromSet:(id)arg1 ;
-(id)unformattedPhoneNumber;
-(id)mf_substringTruncatedInRange:(NSRange)arg1 ;
-(id)mf_substringTruncatedToIndex:(unsigned)arg1 ;
-(id)mf_copyDisplayableAddressComment;
-(char)mf_isAttribution;
-(char)mf_isForwardSeparator;
-(char)mf_isWhitespace;
-(char)mf_isAttributionPrefix;
-(char)mf_isSignature;
-(char)mf_isHorizontalSeparator;
-(id)mf_copyAttributionRegularExpressionForType:(int)arg1 ;
-(id)mf_attributionRegularExpression;
-(id)mf_attributionPrefixRegularExpression;
-(id)mf_forwardSeparatorRegularExpression;
-(id)mf_signatureRegularExpression;
-(id)mf_horizontalSeparatorRegularExpression;
-(id)FU_uppercaseString;
-(id)localizedTerminalOrGateID;
-(NSString *)sf_URLScheme;
-(id)sf_stringByReplacingMarkupCharactersWithHTMLEntities;
-(id)sf_stringByReplacingLastOccurrenceOfWhitespaceWithANonBreakingSpace;
-(char)sf_isFeedScheme;
-(void)attendeeFirstName:(id*)arg1 middleName:(id*)arg2 lastName:(id*)arg3 extension:(id*)arg4 ;
-(id)_attendeeTrimCommasSpacesQuotes;
-(char)_attendeeAppearsToBeAnInitial;
-(char)webui_isConfigProfileMIMEType;
-(id)safari_normalizedParsecInputString;
-(char)safari_hasLocalizedCaseInsensitivePrefix:(id)arg1 ;
-(id)safari_stringByTrimmingWhitespace;
-(id)safari_stringByRemovingWwwDotPrefix;
-(id)safari_bestURLStringForUserTypedString;
-(char)safari_isCaseInsensitiveEqualToString:(id)arg1 ;
-(id)safari_highLevelDomainFromHost;
-(id)safari_canonicalURLStringForFrequentlyVisitedSites;
-(char)safari_hasCaseInsensitivePrefix:(id)arg1 ;
-(id)safari_userVisibleURL;
-(id)safari_stringByFoldingWideCharactersAndNormalizing;
-(id)safari_simplifiedUserVisibleURLString;
-(char)safari_hasCaseInsensitiveSuffix:(id)arg1 ;
-(char)safari_hasPrefix:(id)arg1 ;
-(id)_safari_topLevelDomainUsingCFFromComponents:(id)arg1 ;
-(id)safari_bestURLForUserTypedString;
-(id)safari_simplifiedUserVisibleURLStringWithSimplifications:(unsigned)arg1 forDisplayOnly:(char)arg2 simplifiedStringOffset:(unsigned*)arg3 ;
-(unsigned)safari_countOfString:(id)arg1 ;
-(char)safari_isJavaScriptURLString;
-(id)safari_stringByRemovingCharactersInSet:(id)arg1 ;
-(id)safari_possibleTopLevelDomainCorrectionForUserTypedString;
-(id)safari_stringByRemovingTopLevelDomainFromHost;
-(id)safari_stringByRemovingUnnecessaryCharactersFromUserTypedURLString;
-(id)safari_fixedStringByExpandingTildeInPath;
-(id)safari_bestLanguageTag;
-(id)safari_stringEncodedAsURLQueryParameter;
-(id)safari_stringBySubstitutingAmpersandAndAngleBracketsForHTMLEntities;
-(id)safari_stringBySubstitutingHTMLEntitiesForAmpersandAndAngleBrackets;
-(id)safari_domainFromHost;
-(id)safari_scriptIfJavaScriptURLString;
-(void)safari_enumerateSubdomainRangesInHostUsingBlock:(/*^block*/id)arg1 ;
-(id)safari_base64DecodedData;
-(id)safari_md5Hash;
-(void)splitIntoBase:(int*)arg1 andRelativePath:(const char**)arg2 ;
-(const char*)FSR;
-(id)stringByAppendingSlash;
-(char)pathComponentExistsInSet:(id)arg1 ;
-(id)MBAppendGreenteaSuffix;
-(id)backupIDByAddingCKPrefix;
-(id)backupIDByRemovingCKPrefix;
-(id)idsFormat;
-(NSRange)cr_rangeOfAddressDomain;
-(id)cr_copyStringByDecodingIDNAInRange:(NSRange)arg1 ;
-(id)cr_copyStringByEncodingIDNAInRange:(NSRange)arg1 ;
-(id)cr_copyIDNADecodedEmailAddress;
-(id)cr_copyIDNAEncodedEmailAddress;
-(id)cr_uniqueFilenameWithRespectToFilenames:(id)arg1 ;
-(id)cr_lowercaseStringWithStandardLocale;
-(void)chmod:(unsigned short)arg1 ;
-(char)validateGSName:(out id*)arg1 ;
-(id)gs_stringByUpdatingPathExtensionWithPathOrURL:(id)arg1 ;
-(char)validateGSNameAllowingDot:(char)arg1 error:(id*)arg2 ;
-(id)gs_issueExtension:(const char*)arg1 error:(id*)arg2 ;
-(id)gs_issueReadExtensionIfNeededForPid:(int)arg1 ;
-(char)hasCaseInsensitiveSuffix:(id)arg1 ;
-(id)urlEncodedString;
-(unsigned)SLTencentWeiboCharacterCountWithShortenedURLLength:(unsigned)arg1 ;
-(char)isTencentWeiboDuplicatePostError;
-(unsigned)SLTwitterCharacterCountWithShortenedURLLength:(unsigned)arg1 ;
-(char)isTwitterDuplicatePostError;
-(unsigned)SLWeiboCharacterCountWithShortenedURLLength:(unsigned)arg1 ;
-(char)isWeiboDuplicatePostError;
-(id)mf_encodedIMAPMailboxName;
-(id)mf_decodedIMAPMailboxName;
-(id)mf_stringForQuotingWithCharacter:(char)arg1 ;
-(id)mf_stringByExpandingTildeWithSharedResourcesDirectoryInPath;
-(id)mf_betterStringByResolvingSymlinksInPath;
-(id)mf_stringByReallyAbbreviatingSharedResourcesDirectoryWithTildeInPath;
-(id)mf_stringByAbbreviatingSharedResourcesDirectoryWithTildeInPath;
-(char)mf_isSubdirectoryOfPath:(id)arg1 ;
-(char)mf_makeDirectoryWithMode:(int)arg1 ;
-(id)mf_stringByEscapingHTMLCodes;
-(unsigned)mf_subjectPrefixLength;
-(id)mf_stringByReplacingPercentEscapesUsingEncoding:(unsigned)arg1 ;
-(id)mf_stringWithNoExtraSpaces;
-(id)mf_stringByLocalizingReOrFwdPrefix;
-(id)mf_fileSystemString;
-(id)mf_uniqueFilenameWithRespectToFilenames:(id)arg1 ;
-(id)mf_stringByEscapingForXML;
-(id)mf_stringByAddingPercentEscapesUsingEncoding:(unsigned)arg1 ;
-(char)mf_caseInsensitiveIsEqualToString:(id)arg1 ;
-(char)mf_containsSubstring:(id)arg1 options:(unsigned)arg2 ;
-(id)mf_convertFromFlowedText:(unsigned)arg1 ;
-(unsigned)mf_lineBreakBeforeIndex:(unsigned)arg1 withinRange:(NSRange)arg2 ;
-(unsigned)mf_nextWordFromIndex:(unsigned)arg1 forward:(char)arg2 ;
-(id)da_absoluteURLForChildLeastInfoRepresentationRelativeToParentURL:(id)arg1 ;
-(id)da_appendSlashIfNeeded;
-(id)da_stringByAddingPercentEscapesForUsername;
-(id)da_stringByRemovingPercentEscapesForUsername;
-(id)da_removeSlashIfNeeded;
-(id)da_stringByURLEscapingPathComponent;
-(char)da_hasPrefixCaseInsensitive:(id)arg1 ;
-(id)da_trimWhiteSpace;
-(id)stringByURLQuoting;
-(id)ckShortDescription;
-(id)CKSafeStringForURLWithCharsToBeEscaped:(id)arg1 ;
-(id)CKMangledDocumentNameForURLFragment;
-(id)CKSHA256;
-(id)CKSanitizedPath;
-(id)CKSafeStringForPathComponent;
-(id)CKSafeHashStringForPathComponent;
-(id)CKUnmangledDocumentNameFromURLFragment;
-(id)CKSafeStringForURLPathComponent;
-(char)_webBookmarks_hasCaseInsensitivePrefix:(id)arg1 ;
-(unsigned)numberOfLines;
-(id)ic_substringFromIndex:(unsigned)arg1 ;
-(id)ic_substringWithRange:(NSRange)arg1 ;
-(void)enumerateContentLineRangesInRange:(NSRange)arg1 usingBlock:(/*^block*/id)arg2 ;
-(void)enumerateParagraphsInRange:(NSRange)arg1 usingBlock:(/*^block*/id)arg2 ;
-(id)ic_substringToIndex:(unsigned)arg1 ;
-(id)md5;
-(id)stringByExpandingTildeToNonSandboxHome;
-(id)appendSlashIfNeeded;
-(id)stringByEncodingSlashes;
-(id)stringByDecodingSlashes;
-(id)trimFirstComma;
-(id)trimFinalComma;
-(id)trimFirstChar:(unsigned short)arg1 ;
-(id)trimFinalChar:(unsigned short)arg1 ;
-(id)quote;
-(id)trimWhiteSpace;
-(id)trimCommas;
-(id)trimChar:(unsigned short)arg1 ;
-(id)unquote;
-(id)searchAndReplaceString:(id)arg1 withString:(id)arg2 ;
-(id)safeFilename;
-(id)removeSlashIfNeeded;
-(id)stringByURLQuotingPaths;
-(id)stringByURLQuoting;
-(id)stringByURLUnquoting;
-(char)hasPrefixCaseInsensitive:(id)arg1 ;
-(char)resemblesEmailAddress;
-(char)hasMailto;
-(id)_phoneNumberDetector;
-(id)stringByReplacingCharactersInSet:(id)arg1 withString:(id)arg2 ;
-(id)stringByURLEscapingAllReservedCharacters;
-(id)stringByURLUnescapingAllReservedCharacters;
-(id)stringByRemovingLastPathComponent;
-(char)hasPrefixCaseAndDiacriticInsensitive:(id)arg1 ;
-(char)hasSuffixCaseInsensitive:(id)arg1 ;
-(char)containsCaseInsensitive:(id)arg1 ;
-(char)containsCaseAndDiacriticInsensitive:(id)arg1 ;
-(char)isEqualToStringCaseInsensitive:(id)arg1 ;
-(id)userFromEmail;
-(id)hostFromEmail;
-(id)stringAddingMailto;
-(id)stringRemovingMailto;
-(char)isMailURL;
-(char)isAddressBookURL;
-(id)radarLink;
-(id)phoneURL;
-(id)CalUncommentedAddress;
-(id)CalAddressComment;
-(char)isEqualAsURL:(id)arg1 ;
-(char)isPathToAppleScript;
-(char)isPathToVCalData;
-(char)isPathToICalData;
-(char)isPathToBackupFile;
-(char)isPathToICalBookmark;
-(char)isPathToICalTruthFile;
-(id)CalSafeHFSPathComponentName;
-(id)stringByTrimmingWhitespaceAndRemovingNewlines;
-(id)stringByRemovingCharactersInSet:(id)arg1 ;
-(id)stringByRemovingPrefixCaseInsensitive:(id)arg1 ;
-(char)isPhoneNumber;
-(id)CDVStringByAppendingSlashIfNeeded;
-(id)CDVStringByRemovingTerminatingSlashIfNeeded;
-(char)CDVIsHTTPStatusLineWithStatusCode:(int)arg1 ;
-(id)initWithCDVNameSpace:(id)arg1 andName:(id)arg2 ;
-(id)CDVStringByRemovingPercentEscapesForHREF;
-(id)CDVStringByAddingPercentEscapesForHREF;
-(id)CDVStringByAddingPercentEscapesForUserOrPassword;
-(id)CDVStringByXMLQuoting;
-(id)CDVStringByXMLUnquoting;
-(void)_ICSStringWithOptions:(unsigned)arg1 appendingToString:(id)arg2 ;
-(id)_ICSStringForProperyValue;
-(id)_ICSStringForParameterValue;
-(id)_ICSStringForParameterQuotedValue;
-(id)plistArchiveWithCPLArchiver:(id)arg1 ;
-(id)initWithCPLArchiver:(id)arg1 ;
-(id)MSHexData;
-(unsigned long long)MSUniqueID;
-(id)mf_copyStringByDecodingIDNAInRange:(NSRange)arg1 ;
-(id)mf_copyStringByEncodingIDNAInRange:(NSRange)arg1 ;
-(id)mf_dataUsingEncoding:(unsigned)arg1 allowLossyConversion:(char)arg2 ;
-(int)mf_caseInsensitiveCompareExcludingXDash:(id)arg1 ;
-(id)mf_messageIDSubstring;
-(id)mf_copyStringByDecodingIDNA;
-(const void*)mf_lossyDefaultCStringBytes;
-(id)mf_MD5Digest;
-(id)mf_copyStringByEncodingIDNA;
-(id)mf_dataUsingEncoding:(unsigned)arg1 ;
-(id)mf_decodeMimeHeaderValueWithCharsetHint:(id)arg1 ;
-(id)mf_decodeMimeHeaderValueWithEncodingHint:(unsigned long)arg1 ;
-(id)mf_encodedHeaderDataWithEncodingHint:(unsigned long)arg1 ;
-(id)mf_bestMimeCharsetForMessageDeliveryUsingSubtype:(id)arg1 ;
-(id)_mf_bestMimeCharset:(id)arg1 ;
-(id)mf_bestMimeCharset;
-(id)mf_bestMimeCharsetUsingHint:(unsigned long)arg1 ;
-(char)mf_isLegalCommentedEmailAddress;
-(id)mf_uncommentedAddress;
-(id)mf_addressComment;
-(id)mf_copyAddressComment;
-(void)mf_firstName:(id*)arg1 middleName:(id*)arg2 lastName:(id*)arg3 extension:(id*)arg4 ;
-(NSRange)mf_rangeOfAddressDomain;
-(char)mf_isEqualToAddress:(id)arg1 ;
-(id)mf_copyUncommentedAddress;
-(void)mf_addressCommentFirstName:(id*)arg1 middleName:(id*)arg2 lastName:(id*)arg3 extension:(id*)arg4 ;
-(id)mf_copyIDNADecodedEmailAddress;
-(id)mf_addressDomain;
-(id)mf_uncommentedAddressRespectingGroups;
-(id)mf_trimCommasSpacesQuotes;
-(char)mf_appearsToBeAnInitial;
-(char)mf_hasSameNamesAs:(id)arg1 ;
-(id)mf_copyIDNAEncodedEmailAddress;
-(char)mf_isLegalEmailAddress;
-(int)editDistanceFromString:(id)arg1 ;
-(int)editDistanceFromStringIgnoringSpaces:(id)arg1 ;
-(int)editDistanceFromString:(id)arg1 ;
-(char)ik_attributeBoolValue;
-(id)ik_stringByTrimmingControlChars;
-(id)MP_attributedStringWithEmphasizedTextSeparator:(id)arg1 regularTextAttributes:(id)arg2 emphasizedTextAttributes:(id)arg3 ;
-(id)displayableStringByTrimmingPrefixString:(id)arg1 ;
-(id)displayableStringByStrippingOffCommonPrefixWithString:(id)arg1 ;
-(id)commonNonWordBreakingPrefixWithString:(id)arg1 options:(unsigned)arg2 ;
-(id)MPMediaLibraryDataProviderSystemML3CoercedString;
-(id)ml_stringValueForSQL;
-(void)ml_bindToSQLiteStatement:(sqlite3_stmtRef)arg1 atPosition:(int)arg2 ;
-(char)ml_matchesValue:(id)arg1 usingComparison:(int)arg2 ;
-(id)sanitizedString;
-(NSRange)_rangeWithoutInsignificantPrefix:(char)arg1 andCharacters:(char)arg2 ;
-(id)_copyWithoutInsignificantPrefix:(char)arg1 andCharacters:(char)arg2 ;
-(id)copyWithoutInsignificantPrefixAndCharacters;
-(id)copyWithoutInsignificantCharacters;
-(id)MLSortString;
-(id)MLSortStringWithPrefix;
-(id)copyUTF8StringOfLength:(unsigned)arg1 ;
-(id)_mapkit_sanitizedStringForDisplayInHTML;
-(id)_mapkit_stringByReplacingNewLinesWithString:(id)arg1 ;
-(id)_mapkit_stringByEscapingHTML;
-(float)_mapkit_cgFloatValue;
-(char)_mapkit_isCJK;
-(id)_mapkit_componentsSeparatedFromCommaDelimitedList;
-(VKRasterTileKey)rasterTileKeyValue;
-(id)_vk_internedString;
-(void)cl_json_serializeValue:(value_ostream*)arg1 ;
-(id)cl_json_serializeKey;
-(int)abCompare:(id)arg1 ;
-(id)cnui_stringByTransliteratingToPhoneticCharactersAsFamilyName:(char)arg1 ;
-(char)cnui_containsNonLatinCharacters;
-(char)cnui_containsEmojiCharacters;
-(unsigned long)cnui_firstUTF32Character;
-(char)cnui_shouldUseJapaneseTransliteration;
-(id)cnui_stringByTransliteratingToKana;
-(char)cnui_shouldUseZhuyinTransliteration;
-(char)cnui_shouldTransliterateToLatin;
-(void)_cn_executeGetterForRepresentedKeys:(/*^block*/id)arg1 ;
-(id)_cn_requiredKeys;
-(void)encodeWithCSCoder:(id)arg1 ;
-(int)compareVersionString:(id)arg1 ;
-(id)serverFormattedString;
-(id)_cn_tokens;
-(char)_cn_hasPrefix:(id)arg1 ;
-(id)_cn_nameComponentTokens;
-(char)_cn_containsCharacterInSet:(id)arg1 ;
-(char)_cn_caseInsensitiveIsEqual:(id)arg1 ;
-(char)_cn_containsSubstring:(id)arg1 ;
-(char)_cn_isBlank;
-(char)_cn_hasPrefix:(id)arg1 options:(unsigned)arg2 ;
-(char)_cn_containsSubstring:(id)arg1 options:(unsigned)arg2 ;
-(id)_cn_stringByAddingPercentEscapesToEntireURL;
-(id)_cn_nameComponentTokensUsingLocale:(id)arg1 inferredNameOrder:(int*)arg2 ;
-(char)_cn_hasCaseAndDiacriticInsensitivePrefix:(id)arg1 ;
-(id)_cn_stringByDeletingCharactersInSet:(id)arg1 ;
-(id)_cn_stringByDeletingNumberOfPathComponents:(unsigned)arg1 ;
-(id)_cn_stringByNormalizingCase;
-(id)_cn_trimmedString;
-(id)_cn_stringByAddingPercentEscapesIfNecessary;
-(id)_cn_stringByReplacingStrings:(id)arg1 ;
-(int)traditionalChineseZhuyinCompare:(id)arg1 ;
-(id)firstCharacter;
-(id)componentsByLanguage:(int)arg1 ;
-(id)pinyinStringFromPinyinWithToneNumber;
-(id)zhuyinSyllableFromPinyinSyllable;
-(id)stringByStrippingDiacritics;
-(id)toneFromPinyinSyllableWithNumber;
-(id)strokeStringFromNumberString;
-(id)stringByApplyingPinyinToneMarkToFirstSyllableWithToneNumber:(unsigned)arg1 ;
-(int)simplifiedChineseCompare:(id)arg1 ;
-(int)traditionalChinesePinyinCompare:(id)arg1 ;
-(NSRange)_ax_rangeOfNextUnitWithStartPosition:(int)arg1 direction:(unsigned)arg2 withCharacterSet:(id)arg3 ;
-(NSRange)ax_lineFromPosition:(int)arg1 inDirection:(unsigned)arg2 ;
-(NSRange)ax_wordFromPosition:(int)arg1 inDirection:(unsigned)arg2 ;
-(char)isSingleCharacterAndMemberOfSet:(id)arg1 ;
-(char)isNewline;
-(id)_ui_secureString;
-(id)_uikit_stringByTrimmingWhitespaceAndNewlines;
-(id)_uikit_stringWithWritingDirection:(int)arg1 asOverride:(char)arg2 ;
-(id)queryKeysAndValues;
-(id)_uikit_unescapedQueryValue;
-(CGSize)_optimizedSizeWithFont:(id)arg1 ;
-(id)_adjustedFontFromFont:(id)arg1 withinFrame:(CGRect)arg2 minimumSize:(float)arg3 textSize:(CGSize*)arg4 ;
-(id)stringByStandardizingWhitespace;
-(CGSize)_legacy_sizeWithFont:(id)arg1 forWidth:(float)arg2 lineBreakMode:(int)arg3 ;
-(CGSize)_legacy_drawAtPoint:(CGPoint)arg1 withFont:(id)arg2 ;
-(CGSize)_legacy_drawAtPoint:(CGPoint)arg1 forWidth:(float)arg2 withFont:(id)arg3 lineBreakMode:(int)arg4 ;
-(CGSize)_legacy_sizeWithFont:(id)arg1 constrainedToSize:(CGSize)arg2 ;
-(CGSize)_legacy_sizeWithFont:(id)arg1 constrainedToSize:(CGSize)arg2 lineBreakMode:(int)arg3 ;
-(CGSize)_legacy_drawInRect:(CGRect)arg1 withFont:(id)arg2 ;
-(CGSize)_legacy_drawInRect:(CGRect)arg1 withFont:(id)arg2 lineBreakMode:(int)arg3 ;
-(CGSize)_legacy_drawInRect:(CGRect)arg1 withFont:(id)arg2 lineBreakMode:(int)arg3 alignment:(int)arg4 ;
-(CGSize)_legacy_sizeWithFont:(id)arg1 minFontSize:(float)arg2 actualFontSize:(float*)arg3 forWidth:(float)arg4 lineBreakMode:(int)arg5 ;
-(CGSize)_legacy_drawAtPoint:(CGPoint)arg1 forWidth:(float)arg2 withFont:(id)arg3 fontSize:(float)arg4 lineBreakMode:(int)arg5 baselineAdjustment:(int)arg6 ;
-(CGSize)_legacy_drawAtPoint:(CGPoint)arg1 forWidth:(float)arg2 withFont:(id)arg3 minFontSize:(float)arg4 actualFontSize:(float*)arg5 lineBreakMode:(int)arg6 baselineAdjustment:(int)arg7 ;
-(CGSize)_legacy_sizeWithFont:(id)arg1 forWidth:(float)arg2 lineBreakMode:(int)arg3 letterSpacing:(float)arg4 ;
-(CGSize)_legacy_drawAtPoint:(CGPoint)arg1 forWidth:(float)arg2 withFont:(id)arg3 lineBreakMode:(int)arg4 letterSpacing:(float)arg5 ;
-(CGSize)_legacy_drawAtPoint:(CGPoint)arg1 forWidth:(float)arg2 withFont:(id)arg3 lineBreakMode:(int)arg4 letterSpacing:(float)arg5 includeEmoji:(char)arg6 ;
-(CGSize)_legacy_sizeWithFont:(id)arg1 constrainedToSize:(CGSize)arg2 lineBreakMode:(int)arg3 lineSpacing:(int)arg4 ;
-(CGSize)_legacy_drawInRect:(CGRect)arg1 withFont:(id)arg2 lineBreakMode:(int)arg3 alignment:(int)arg4 lineSpacing:(int)arg5 ;
-(CGSize)_legacy_drawInRect:(CGRect)arg1 withFont:(id)arg2 lineBreakMode:(int)arg3 alignment:(int)arg4 lineSpacing:(int)arg5 includeEmoji:(char)arg6 ;
-(CGSize)_legacy_drawInRect:(CGRect)arg1 withFont:(id)arg2 lineBreakMode:(int)arg3 alignment:(int)arg4 lineSpacing:(int)arg5 includeEmoji:(char)arg6 truncationRect:(CGRect*)arg7 ;
-(CGSize)_legacy_drawAtPoint:(CGPoint)arg1 forWidth:(float)arg2 withFont:(id)arg3 fontSize:(float)arg4 lineBreakMode:(int)arg5 baselineAdjustment:(int)arg6 includeEmoji:(char)arg7 ;
-(CGSize)_legacy_drawAtPoint:(CGPoint)arg1 forWidth:(float)arg2 withFont:(id)arg3 minFontSize:(float)arg4 actualFontSize:(float*)arg5 lineBreakMode:(int)arg6 baselineAdjustment:(int)arg7 includeEmoji:(char)arg8 ;
-(CGSize)_legacy_sizeWithFont:(id)arg1 ;
-(CGSize)sizeWithFont:(id)arg1 forWidth:(float)arg2 lineBreakMode:(int)arg3 letterSpacing:(float)arg4 ;
-(CGSize)drawAtPoint:(CGPoint)arg1 forWidth:(float)arg2 withFont:(id)arg3 lineBreakMode:(int)arg4 letterSpacing:(float)arg5 ;
-(CGSize)drawAtPoint:(CGPoint)arg1 forWidth:(float)arg2 withFont:(id)arg3 lineBreakMode:(int)arg4 letterSpacing:(float)arg5 includeEmoji:(char)arg6 ;
-(CGSize)sizeWithFont:(id)arg1 constrainedToSize:(CGSize)arg2 lineBreakMode:(int)arg3 lineSpacing:(int)arg4 ;
-(CGSize)drawInRect:(CGRect)arg1 withFont:(id)arg2 lineBreakMode:(int)arg3 alignment:(int)arg4 lineSpacing:(int)arg5 ;
-(CGSize)drawInRect:(CGRect)arg1 withFont:(id)arg2 lineBreakMode:(int)arg3 alignment:(int)arg4 lineSpacing:(int)arg5 includeEmoji:(char)arg6 ;
-(CGSize)_drawInRect:(CGRect)arg1 withFont:(id)arg2 lineBreakMode:(int)arg3 alignment:(int)arg4 lineSpacing:(int)arg5 includeEmoji:(char)arg6 truncationRect:(CGRect*)arg7 ;
-(CGSize)drawAtPoint:(CGPoint)arg1 forWidth:(float)arg2 withFont:(id)arg3 fontSize:(float)arg4 lineBreakMode:(int)arg5 baselineAdjustment:(int)arg6 includeEmoji:(char)arg7 ;
-(CGSize)drawAtPoint:(CGPoint)arg1 forWidth:(float)arg2 withFont:(id)arg3 minFontSize:(float)arg4 actualFontSize:(float*)arg5 lineBreakMode:(int)arg6 baselineAdjustment:(int)arg7 includeEmoji:(char)arg8 ;
-(CGSize)sizeWithFont:(id)arg1 ;
-(CGSize)sizeWithFont:(id)arg1 forWidth:(float)arg2 lineBreakMode:(int)arg3 ;
-(CGSize)drawAtPoint:(CGPoint)arg1 withFont:(id)arg2 ;
-(CGSize)drawAtPoint:(CGPoint)arg1 forWidth:(float)arg2 withFont:(id)arg3 lineBreakMode:(int)arg4 ;
-(CGSize)sizeWithFont:(id)arg1 constrainedToSize:(CGSize)arg2 ;
-(CGSize)sizeWithFont:(id)arg1 constrainedToSize:(CGSize)arg2 lineBreakMode:(int)arg3 ;
-(CGSize)drawInRect:(CGRect)arg1 withFont:(id)arg2 ;
-(CGSize)drawInRect:(CGRect)arg1 withFont:(id)arg2 lineBreakMode:(int)arg3 ;
-(CGSize)drawInRect:(CGRect)arg1 withFont:(id)arg2 lineBreakMode:(int)arg3 alignment:(int)arg4 ;
-(CGSize)sizeWithFont:(id)arg1 minFontSize:(float)arg2 actualFontSize:(float*)arg3 forWidth:(float)arg4 lineBreakMode:(int)arg5 ;
-(CGSize)drawAtPoint:(CGPoint)arg1 forWidth:(float)arg2 withFont:(id)arg3 fontSize:(float)arg4 lineBreakMode:(int)arg5 baselineAdjustment:(int)arg6 ;
-(CGSize)drawAtPoint:(CGPoint)arg1 forWidth:(float)arg2 withFont:(id)arg3 minFontSize:(float)arg4 actualFontSize:(float*)arg5 lineBreakMode:(int)arg6 baselineAdjustment:(int)arg7 ;
-(id)_initWithUTF8String:(const char*)arg1 maxLength:(unsigned)arg2 ;
-(id)_web_possibleURLsForUserTypedString;
-(id)_web_possibleURLsForForUserTypedString:(char)arg1 ;
-(id)_web_possibleURLPrefixesForUserTypedString;
-(id)_web_bestURLForUserTypedString;
-(id)_webkit_scriptIfJavaScriptURL;
-(id)_web_decodeHostName;
-(char)_web_isUserVisibleURL;
-(char)_webkit_looksLikeAbsoluteURL;
-(char)_webkit_isJavaScriptURL;
-(char)_webkit_isFileURL;
-(id)_webkit_stringByReplacingValidPercentEscapes;
-(NSRange)_webkit_rangeOfURLScheme;
-(id)_webkit_unescapedQueryValue;
-(id)_web_encodeHostName;
-(id)_webkit_queryKeysAndValues;
-(id)_web_capitalizeRFC822HeaderFieldName;
-(char)_webkit_hasCaseInsensitivePrefix:(id)arg1 ;
-(char)_webkit_isCaseInsensitiveEqualToString:(id)arg1 ;
-(id)_web_stringByAbbreviatingWithTildeInPath;
-(id)_web_stringByStrippingReturnCharacters;
-(char)_webkit_hasCaseInsensitiveSuffix:(id)arg1 ;
-(char)_webkit_hasCaseInsensitiveSubstring:(id)arg1 ;
-(id)_webkit_filenameByFixingIllegalCharacters;
-(id)_webkit_stringByTrimmingWhitespace;
-(id)_webkit_stringByCollapsingNonPrintingCharacters;
-(id)_webkit_stringByCollapsingWhitespaceCharacters;
-(char)destinationIdIsPhoneNumber;
-(char)destinationIdIsEmailAddress;
-(id)LTRString;
-(id)RTLString;
-(char)destinationIdIsCallControlCode;
-(id)IDSFormattedDestinationID;
-(id)abStringByRemovingCharactersFromSet:(id)arg1 ;
-(id)abEscapeStringForUnichar:(unsigned short)arg1 and:(unsigned short)arg2 advance:(int*)arg3 ;
-(id)copyABVCardDataRepresentation;
-(id)abStringByStrippingControlCharacters;
-(id)abVCardKoshify;
-(NSData *)_FTDataFromHexString;
-(NSData *)_FTDataFromBase64String;
-(id)stringByStrippingLeadingAndTrailingWhitespace;
-(CGRect)boundingRectWithSize:(CGSize)arg1 options:(int)arg2 attributes:(id)arg3 context:(id)arg4 ;
-(void)drawWithRect:(CGRect)arg1 options:(int)arg2 attributes:(id)arg3 context:(id)arg4 ;
-(void)drawWithRect:(CGRect)arg1 options:(int)arg2 attributes:(id)arg3 ;
-(CGRect)boundingRectWithSize:(CGSize)arg1 options:(int)arg2 attributes:(id)arg3 ;
-(CGSize)_sizeWithSize:(CGSize)arg1 attributes:(id)arg2 ;
-(void)drawAtPoint:(CGPoint)arg1 withAttributes:(id)arg2 ;
-(CGSize)sizeWithAttributes:(id)arg1 ;
-(void)drawInRect:(CGRect)arg1 withAttributes:(id)arg2 ;
-(id)_stringByTrimmingSuccedingLines;
-(id)_stringByDeletingInteriorSentences;
-(id)_stringByTrimmingPrecedingLines;
-(char)_isOnlyIdeographs;
-(id)_stringByTransliteratingToZhuyinAsFamilyName;
-(id)_stringByTransliteratingToPinyinAsFamilyName;
-(id)_stringByTransliteratingToPinyin;
-(id)stringByReplacingCharactersInSet:(CFCharacterSetRef)arg1 withCharacter:(unsigned long)arg2 ;
-(unsigned long)_firstLongCharacter;
-(id)_stringByTrimmingLastCharacter;
-(id)_stringByTrimmingCharactersInCFCharacterSet:(CFCharacterSetRef)arg1 ;
-(char)_isNaturallyRTL;
-(char)_isPlainSpace;
-(id)_lastGrapheme;
-(char)_containsBopomofoOnly;
-(char)_containsBopomofoToneOnly;
-(char)_isNewlineOrReturn;
-(char)_isDelete;
-(char)_isIdeographicGlyphs;
-(unsigned)_graphemeCount;
-(char)_containsCJScripts;
-(id)_stringByReplacingCharacter:(unsigned long)arg1 withCharacter:(unsigned long)arg2 ;
-(unsigned short)_firstChar;
-(char)containsSubstring:(id)arg1 ;
-(char)_containsSubstring:(id)arg1 ;
-(char)_containsEmoji;
-(char)_isSpaceOrReturn;
-(id)_firstGrapheme;
-(char)_containsJapaneseOnly;
-(id)_stringByTranscribingUsingTokenizer:(CFStringTokenizerRef)arg1 ;
-(id)_stringByApplyingTransform:(id)arg1 ;
-(NSRange)_rangeOfBackwardDeletionClusterAtIndex:(unsigned)arg1 ;
-(id)stringByReplacingCharacter:(unsigned long)arg1 withCharacter:(unsigned long)arg2 ;
-(char)_containsCJScriptsOnly;
-(unsigned)_editDistanceFrom:(id)arg1 ;
-(char)_containsIdeographicCharacters;
-(id)_stringByTranscribingFromLanguage:(id)arg1 ;
-(id)_stringByTransliteratingToZhuyin;
-(char)_containsJapanese;
-(id)_stringByReplacingCharactersInSet:(CFCharacterSetRef)arg1 withCharacter:(unsigned long)arg2 ;
-(char)_isSpace;
-(char)_contentsExclusivelyInCharacterSet:(USetRef)arg1 ;
-(char)isNaturallyRTL;
-(char)isDelete;
-(char)isSpace;
-(char)_looksLikeEmailAddress;
-(char)isPlainSpace;
-(char)_endsSentence;
-(char)isSpaceOrReturn;
-(char)_looksLikeURL;
-(char)_isTripledPunctuation;
-(unsigned)editDistanceFrom:(id)arg1 ;
-(char)endsSentence;
-(id)_stringByTransliteratingToPinyin:(char)arg1 ;
-(char)_containsCJKScriptsOnly;
-(char)_containsHiraganaOnly;
-(id)_stringByConvertingFromHalfWidthToFullWidth;
-(char)looksLikeNumberInput;
-(char)_isLeftAssociative;
-(char)looksLikeEmailAddress;
-(id)stringByTrimmingCharactersInCFCharacterSet:(CFCharacterSetRef)arg1 ;
-(id)_stringByConvertingFromFullWidthToHalfWidth;
-(char)isLeftAssociative;
-(id)stringByTrimmingLastCharacter;
-(char)looksLikeURL;
-(id)_stringByTransliteratingToZhuyin:(char)arg1 ;
-(char)_looksLikeNumberInput;
-(char)isNewlineOrReturn;
-(char)_containsKatakanaOrKanji;
-(char)_containsFullwidthLettersAndNumbers;
-(char)isTripledPunctuation;
-(char)_shouldBePaddedWithSpaces;
-(NSRange)_rangeOfCharacterClusterAtIndex:(unsigned)arg1 withClusterOffset:(int)arg2 ;
-(char)_isModifierSymbol;
-(char)_containsFullwidthLettersAndNumbersOnly;
-(char)_containsHiraganaKatakanaOrBopomofo;
-(char)_containsCJKSymbolsAndPunctuation;
-(NSRange)_rangeOfString:(id)arg1 fromLocation:(unsigned)arg2 ;
-(unsigned)_UTF8SizeOfRange:(NSRange)arg1 ;
-(void)_enumerateLongCharactersInRange:(NSRange)arg1 usingBlock:(/*^block*/id)arg2 ;
-(char)_containsHiraganaOrKatakana;
-(char)hasMobileMeSuffix;
-(NSString *)stripMobileMSuffixIfPresent;
-(NSString *)mobileMeDomain;
-(id)_imInitWithFormat:(id)arg1 arguments:(void*)arg2 ;
-(char)isDirectory;
-(unsigned)unsignedIntValue;
-(char)isEqualToIgnoringCase:(id)arg1 ;
-(char)_appearsToBeEmail;
-(char)_appearsToBePhoneNumber;
-(id)trimmedString;
-(id)pathStringForDisplay;
-(id)stringByRemovingCharactersFromSet:(id)arg1 ;
-(int)localizedCompareToString:(id)arg1 ;
-(id)_stripFZIDPrefix;
-(char)_appearsToBeDSID;
-(id)stringByRemovingWhitespace;
-(id)__stringByStrippingAttachmentAndControlCharacters;
-(id)_bestGuessURIFromCanicalizedID;
-(id)_bestGuessURI;
-(id)stringByRemovingURLEscapes;
-(int)_FZBestGuessFZIDType;
-(id)_URIFromFZIDType:(int)arg1 ;
-(id)_URIFromCanonicalizedFZIDType:(int)arg1 ;
-(id)_URIFromCanonicalizedPhoneNumber;
-(id)_URIFromCanonicalizedEmail;
-(id)_URIFromCanonicalizedDSID;
-(id)_URIFromPhoneNumber;
-(id)_URIFromEmail;
-(id)_URIFromDSID;
-(id)_FZIDFromPhoneNumber;
-(id)_FZIDFromEmail;
-(unsigned)hexValue;
-(id)stringByAddingURLEscapes;
-(id)urlFromString;
-(int)_FZIDType;
-(id)_IDFromFZIDType:(int)arg1 ;
-(id)_stripPotentialTokenURIWithToken:(id*)arg1 ;
-(id)_md5Hash;
-(id)stringByResolvingAndStandardizingPath;
-(NSRange)__rangeOfNewlineInRange:(NSRange)arg1 ;
-(id)uniqueSavePath;
-(id)__stringByStrippingControlCharacters;
-(id)stringWithLTREmbedding;
-(char)roomNameIsProbablyAutomaticallyGenerated;
-(char)_isOnlyIdeographs;
-(char)_isJapanesePhrase;
-(id)_af_stringByRemovingPrefixWithLength:(unsigned)arg1 ;
-(id)_af_stringByRemovingSuffix:(id)arg1 ;
-(id)stringWrappedInMathMLTag:(id)arg1 ;
-(id)stringWrappedInMathMLTag:(id)arg1 withAttributes:(id)arg2 ;
-(id)stringWithMathIndicators;
-(id)threadDescription;
-(char)hasSuffixInsensitive:(id)arg1 ;
-(void)cl_json_serializeValue:(value_ostream*)arg1 ;
-(id)cl_json_serializeKey;
-(id)MCAppendGreenteaSuffix;
-(id)MCAppendDeviceName;
-(id)MCHashedFilenameWithPrefix:(id)arg1 extension:(id)arg2 ;
-(id)MCSHA256DigestWithSalt:(id)arg1 ;
-(id)MCOldStyleSafeFilenameHashWithExtension:(id)arg1 ;
-(unsigned)MCHash;
-(id)MCHashedFilenameWithExtension:(id)arg1 ;
-(id)MCOldStyleSafeFilenameHash;
-(id)MCSHA256DigestWithPasscodeSalt;
-(CGRect)sbs_cgRectValue;
-(void)encodeWithCAMLWriter:(id)arg1 ;
-(id)CAMLType;
-(id)_initWithUTF8String:(const char*)arg1 maxLength:(unsigned)arg2 ;
-(id)stringByEscapingXMLSpecialCharacters;
-(id)urlEncodedString;
-(id)cutStringByResolvingAndStandardizingPath;
-(int)_caseInsensitiveNumericCompare:(id)arg1 ;
-(char)LS_hasCaseInsensitivePrefix:(id)arg1 ;
-(id)queryToDict;
-(id)LS_unescapedQueryValue;
-(char)_isCString;
-(id)_createSubstringWithRange:(NSRange)arg1 ;
-(id)_newSubstringWithRange:(NSRange)arg1 zone:(NSZone*)arg2 ;
-(id)__escapeString5991;
-(id)formatConfiguration;
-(id)_stringByResolvingSymlinksInPathUsingCache:(char)arg1 ;
-(unsigned long)_cfTypeID;
-(unsigned)fastestEncoding;
-(unsigned)smallestEncoding;
-(char)getBytes:(char*)arg1 maxLength:(unsigned)arg2 filledLength:(unsigned*)arg3 encoding:(unsigned)arg4 allowLossyConversion:(char)arg5 range:(NSRange)arg6 remainingRange:(NSRange*)arg7 ;
-(unsigned char)_encodingCantBeStoredInEightBitCFString;
-(unsigned long)_smallestEncodingInCFStringEncoding;
-(unsigned long)_fastestEncodingInCFStringEncoding;
-(char)_getCString:(char*)arg1 maxLength:(unsigned)arg2 encoding:(unsigned long)arg3 ;
-(id)decomposedStringWithCanonicalMapping;
-(id)precomposedStringWithCanonicalMapping;
-(id)decomposedStringWithCompatibilityMapping;
-(id)precomposedStringWithCompatibilityMapping;
-(char)canBeConvertedToEncoding:(unsigned)arg1 ;
-(const char*)_fastCStringContents:(char)arg1 ;
-(unsigned)cStringLength;
-(const char*)lossyCString;
-(char)_allowsDirectEncoding;
-(id)quotedStringRepresentation;
-(id)initWithCString:(const char*)arg1 length:(unsigned)arg2 ;
-(id)initWithFormat:(id)arg1 locale:(id)arg2 arguments:(void*)arg3 ;
-(id)initWithCStringNoCopy:(char*)arg1 length:(unsigned)arg2 freeWhenDone:(char)arg3 ;
-(id)_stringByStandardizingPathUsingCache:(char)arg1 ;
-(id)stringByAbbreviatingWithTildeInPath;
-(id)stringsByAppendingPaths:(id)arg1 ;
-(unsigned)completePathIntoString:(id*)arg1 caseSensitive:(char)arg2 matchesIntoArray:(id*)arg3 filterTypes:(id)arg4 ;
-(id)stringByConvertingPathToURL;
-(id)stringByConvertingURLToPath;
-(id)initWithContentsOfURL:(id)arg1 encoding:(unsigned)arg2 error:(id*)arg3 ;
-(id)initWithContentsOfFile:(id)arg1 usedEncoding:(unsigned*)arg2 error:(id*)arg3 ;
-(NSRange)_rangeOfRegularExpressionPattern:(id)arg1 options:(unsigned)arg2 range:(NSRange)arg3 locale:(id)arg4 ;
-(NSRange)rangeOfString:(id)arg1 options:(unsigned)arg2 range:(NSRange)arg3 locale:(id)arg4 ;
-(const unsigned short*)_fastCharacterContents;
-(id)_stringByReplacingOccurrencesOfRegularExpressionPattern:(id)arg1 withTemplate:(id)arg2 options:(unsigned)arg3 range:(NSRange)arg4 ;
-(id)capitalizedStringWithLocale:(id)arg1 ;
-(void)_getBlockStart:(unsigned*)arg1 end:(unsigned*)arg2 contentsEnd:(unsigned*)arg3 forRange:(NSRange)arg4 stopAtLineSeparators:(char)arg5 ;
-(void)getLineStart:(unsigned*)arg1 end:(unsigned*)arg2 contentsEnd:(unsigned*)arg3 forRange:(NSRange)arg4 ;
-(void)getParagraphStart:(unsigned*)arg1 end:(unsigned*)arg2 contentsEnd:(unsigned*)arg3 forRange:(NSRange)arg4 ;
-(id)_initWithDataOfUnknownEncoding:(id)arg1 ;
-(id)_initWithBytesOfUnknownEncoding:(char*)arg1 length:(unsigned)arg2 copy:(char)arg3 usedEncoding:(unsigned*)arg4 ;
-(id)_stringRepresentation;
-(char)localizedHasPrefix:(id)arg1 ;
-(char)localizedHasSuffix:(id)arg1 ;
-(char)localizedCaseInsensitiveContainsString:(id)arg1 ;
-(char)localizedStandardContainsString:(id)arg1 ;
-(NSRange)localizedStandardRangeOfString:(id)arg1 ;
-(id)localizedUppercaseString;
-(id)localizedLowercaseString;
-(id)localizedCapitalizedString;
-(id)stringByFoldingWithOptions:(unsigned)arg1 locale:(id)arg2 ;
-(id)stringByApplyingTransform:(id)arg1 reverse:(char)arg2 ;
-(NSRange)lineRangeForRange:(NSRange)arg1 ;
-(id)displayableString;
-(char)getExternalRepresentation:(id*)arg1 extendedAttributes:(id*)arg2 forWritingToURLOrPath:(id)arg3 usingEncoding:(unsigned)arg4 error:(id*)arg5 ;
-(id)propertyListFromStringsFileFormat;
-(id)_copyFormatStringWithConfiguration:(id)arg1 ;
-(void)getCString:(char*)arg1 maxLength:(unsigned)arg2 range:(NSRange)arg3 remainingRange:(NSRange*)arg4 ;
-(void)getCString:(char*)arg1 maxLength:(unsigned)arg2 ;
-(void)getCString:(char*)arg1 ;
-(unsigned)maximumLengthOfBytesUsingEncoding:(unsigned)arg1 ;
-(id)stringByAddingPercentEscapes;
-(id)standardizedURLPath;
-(id)stringByRemovingPercentEscapes;
-(id)urlPathRelativeToPath:(id)arg1 ;
-(id)_web_HTTPStyleLanguageCode;
-(id)_web_HTTPStyleLanguageCodeWithoutRegion;
-(id)_web_filenameByFixingIllegalCharacters;
-(char)_web_looksLikeIPAddress;
-(char)_web_hasCountryCodeTLD;
-(int)_web_countOfString:(id)arg1 ;
-(NSRange)_web_rangeOfURLResourceSpecifier_nowarn;
-(NSRange)_web_rangeOfURLScheme_nowarn;
-(char)_web_domainMatches:(id)arg1 ;
-(id)_web_domainFromHost;
-(id)_web_stringByExpandingTildeInPath;
-(id)_web_fixedCarbonPOSIXPath;
-(NSRange)_web_rangeOfURLUserPasswordHostPort;
-(NSRange)_web_rangeOfURLHost;
-(char)_web_looksLikeAbsoluteURL;
-(char)_web_isFileURL;
-(id)_web_URLFragment;
-(id)_web_stringByCollapsingNonPrintingCharacters;
-(unsigned long)_web_extractFourCharCode;
-(id)_web_parseAsKeyValuePairHandleQuotes_nowarn:(char)arg1 ;
-(id)_web_splitAtNonDateCommas_nowarn;
-(id)_web_parseAsKeyValuePair_nowarn;
-(id)_web_mimeTypeFromContentTypeHeader_nowarn;
-(id)_web_characterSetFromContentTypeHeader_nowarn;
-(id)_web_fileNameFromContentDispositionHeader_nowarn;
-(id)_web_stringByReplacingValidPercentEscapes_nowarn;
-(char)_web_isJavaScriptURL;
-(id)replacementObjectForPortCoder:(id)arg1 ;
-(void)_flushRegularExpressionCaches;
-(NSRange)significantText;
-(id)linguisticTagsInRange:(NSRange)arg1 scheme:(id)arg2 options:(unsigned)arg3 orthography:(id)arg4 tokenRanges:(id*)arg5 ;
-(void)enumerateLinguisticTagsInRange:(NSRange)arg1 scheme:(id)arg2 options:(unsigned)arg3 orthography:(id)arg4 usingBlock:(/*^block*/id)arg5 ;
-(char)isNSString__;
-(id)propertyList;
-(const char*)UTF8String;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(char)isEqualToString:(id)arg1 ;
-(id)init;
-(char)isEqual:(id)arg1 ;
-(unsigned)hash;
-(NSString *)description;
-(id)componentsSeparatedByString:(id)arg1 ;
-(char)hasPrefix:(id)arg1 ;
-(id)substringFromIndex:(unsigned)arg1 ;
-(int)integerValue;
-(double)doubleValue;
-(int)compare:(id)arg1 ;
-(char)boolValue;
-(unsigned)length;
-(int)caseInsensitiveCompare:(id)arg1 ;
-(int)compare:(id)arg1 options:(unsigned)arg2 ;
-(id)lastPathComponent;
-(int)intValue;
-(char)writeToFile:(id)arg1 atomically:(char)arg2 ;
-(id)stringByAppendingPathComponent:(id)arg1 ;
-(id)variantFittingPresentationWidth:(int)arg1 ;
-(char)writeToURL:(id)arg1 atomically:(char)arg2 ;
-(id)stringByResolvingSymlinksInPath;
-(id)pathComponents;
-(char)isAbsolutePath;
-(const char*)fileSystemRepresentation;
-(id)stringByAppendingFormat:(id)arg1 ;
-(id)stringByStandardizingPath;
-(id)copyWithZone:(NSZone*)arg1 ;
-(char)hasSuffix:(id)arg1 ;
-(id)stringByAppendingString:(id)arg1 ;
-(Class)classForCoder;
-(id)initWithContentsOfFile:(id)arg1 ;
-(id)pathExtension;
-(id)stringByDeletingPathExtension;
-(id)stringByAppendingPathExtension:(id)arg1 ;
-(NSRange)rangeOfString:(id)arg1 options:(unsigned)arg2 ;
-(id)substringWithRange:(NSRange)arg1 ;
-(NSRange)rangeOfString:(id)arg1 ;
-(float)floatValue;
-(id)initWithFormat:(id)arg1 ;
-(id)stringByReplacingOccurrencesOfString:(id)arg1 withString:(id)arg2 ;
-(NSRange)rangeOfComposedCharacterSequencesForRange:(NSRange)arg1 ;
-(int)compare:(id)arg1 options:(unsigned)arg2 range:(NSRange)arg3 ;
-(id)stringByTrimmingCharactersInSet:(id)arg1 ;
-(id)uppercaseStringWithLocale:(id)arg1 ;
-(long long)longLongValue;
-(id)initWithString:(id)arg1 ;
-(unsigned short)characterAtIndex:(unsigned)arg1 ;
-(id)substringToIndex:(unsigned)arg1 ;
-(int)localizedCaseInsensitiveCompare:(id)arg1 ;
-(int)localizedStandardCompare:(id)arg1 ;
-(NSString *)stringByRemovingPercentEncoding;
-(id)initWithData:(id)arg1 encoding:(unsigned)arg2 ;
-(char)writeToFile:(id)arg1 atomically:(char)arg2 encoding:(unsigned)arg3 error:(id*)arg4 ;
-(char)containsString:(id)arg1 ;
-(id)uppercaseString;
-(char)getCString:(char*)arg1 maxLength:(unsigned)arg2 encoding:(unsigned)arg3 ;
-(NSRange)rangeOfCharacterFromSet:(id)arg1 ;
-(id)stringByDeletingLastPathComponent;
-(NSRange)rangeOfCharacterFromSet:(id)arg1 options:(unsigned)arg2 range:(NSRange)arg3 ;
-(id)lowercaseString;
-(NSRange)rangeOfComposedCharacterSequenceAtIndex:(unsigned)arg1 ;
-(NSRange)rangeOfString:(id)arg1 options:(unsigned)arg2 range:(NSRange)arg3 ;
-(id)componentsSeparatedByCharactersInSet:(id)arg1 ;
-(id)stringByAddingPercentEncodingWithAllowedCharacters:(id)arg1 ;
-(char)_web_isCaseInsensitiveEqualToString:(id)arg1 ;
-(char)_web_hasCaseInsensitivePrefix:(id)arg1 ;
-(id)initWithUTF8String:(const char*)arg1 ;
-(id)mutableCopyWithZone:(NSZone*)arg1 ;
-(id)_web_stringByTrimmingWhitespace;
-(void)getCharacters:(unsigned short*)arg1 ;
-(id)commonPrefixWithString:(id)arg1 options:(unsigned)arg2 ;
-(id)initWithFormat:(id)arg1 arguments:(void*)arg2 ;
-(id)initWithData:(id)arg1 usedEncoding:(unsigned*)arg2 ;
-(id)dataUsingEncoding:(unsigned)arg1 ;
-(void)getCharacters:(unsigned short*)arg1 range:(NSRange)arg2 ;
-(id)lowercaseStringWithLocale:(id)arg1 ;
-(int)compare:(id)arg1 options:(unsigned)arg2 range:(NSRange)arg3 locale:(id)arg4 ;
-(NSRange)rangeOfCharacterFromSet:(id)arg1 options:(unsigned)arg2 ;
-(const char*)cStringUsingEncoding:(unsigned)arg1 ;
-(id)initWithCString:(const char*)arg1 encoding:(unsigned)arg2 ;
-(NSRange)paragraphRangeForRange:(NSRange)arg1 ;
-(char)getFileSystemRepresentation:(char*)arg1 maxLength:(unsigned)arg2 ;
-(int)localizedCompare:(id)arg1 ;
-(id)capitalizedString;
-(id)stringByReplacingCharactersInRange:(NSRange)arg1 withString:(id)arg2 ;
-(id)initWithFormat:(id)arg1 locale:(id)arg2 ;
-(id)initWithContentsOfURL:(id)arg1 ;
-(char)getBytes:(void*)arg1 maxLength:(unsigned)arg2 usedLength:(unsigned*)arg3 encoding:(unsigned)arg4 options:(unsigned)arg5 range:(NSRange)arg6 remainingRange:(NSRange*)arg7 ;
-(id)initWithBytesNoCopy:(void*)arg1 length:(unsigned)arg2 encoding:(unsigned)arg3 freeWhenDone:(char)arg4 ;
-(void)enumerateSubstringsInRange:(NSRange)arg1 options:(unsigned)arg2 usingBlock:(/*^block*/id)arg3 ;
-(id)initWithCharactersNoCopy:(unsigned short*)arg1 length:(unsigned)arg2 freeWhenDone:(char)arg3 ;
-(id)stringByPaddingToLength:(unsigned)arg1 withString:(id)arg2 startingAtIndex:(unsigned)arg3 ;
-(id)stringByReplacingPercentEscapesUsingEncoding:(unsigned)arg1 ;
-(id)stringByExpandingTildeInPath;
-(id)stringByReplacingOccurrencesOfString:(id)arg1 withString:(id)arg2 options:(unsigned)arg3 range:(NSRange)arg4 ;
-(id)initWithContentsOfFile:(id)arg1 encoding:(unsigned)arg2 error:(id*)arg3 ;
-(id)initWithContentsOfURL:(id)arg1 usedEncoding:(unsigned*)arg2 error:(id*)arg3 ;
-(const char*)cString;
-(id)initWithCString:(const char*)arg1 ;
-(id)initWithCharacters:(const unsigned short*)arg1 length:(unsigned)arg2 ;
-(SCD_Struct_NS51)decimalValue;
-(unsigned)lengthOfBytesUsingEncoding:(unsigned)arg1 ;
-(id)dataUsingEncoding:(unsigned)arg1 allowLossyConversion:(char)arg2 ;
-(id)stringByAddingPercentEscapesUsingEncoding:(unsigned)arg1 ;
-(char)writeToURL:(id)arg1 atomically:(char)arg2 encoding:(unsigned)arg3 error:(id*)arg4 ;
-(void)enumerateLinesUsingBlock:(/*^block*/id)arg1 ;
@end

