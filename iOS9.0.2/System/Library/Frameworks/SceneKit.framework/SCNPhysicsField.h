/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 6, 2015 at 2:31:02 PM Japan Standard Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /System/Library/Frameworks/SceneKit.framework/SceneKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <SceneKit/SceneKit-Structs.h>
#import <libobjc.A.dylib/NSCopying.h>
#import <libobjc.A.dylib/NSSecureCoding.h>

@class SCNPhysicsWorld, SCNNode;

@interface SCNPhysicsField : NSObject <NSCopying, NSSecureCoding> {

	SCNVector3 _halfExtent;
	float _strength;
	float _falloffExponent;
	float _minimumDistance;
	char _active;
	int _scope;
	char _usesEllipsoidalExtent;
	char _exclusive;
	SCNVector3 _offset;
	SCNVector3 _direction;
	unsigned _categoryBitMask;
	SCNPhysicsWorld* _world;
	SCNNode* _node;
	c3dPhysicsField* _field;

}

@property (assign,nonatomic) float strength; 
@property (assign,nonatomic) float falloffExponent; 
@property (assign,nonatomic) float minimumDistance; 
@property (assign,getter=isActive,nonatomic) char active; 
@property (assign,getter=isExclusive,nonatomic) char exclusive; 
@property (assign,nonatomic) SCNVector3 halfExtent; 
@property (assign,nonatomic) char usesEllipsoidalExtent; 
@property (assign,nonatomic) int scope; 
@property (assign,nonatomic) SCNVector3 offset; 
@property (assign,nonatomic) SCNVector3 direction; 
@property (assign,nonatomic) unsigned categoryBitMask; 
+(void)_setDisplayScaleFactor:(float)arg1 ;
+(float)_displayScaleFactor;
+(char)supportsSecureCoding;
+(id)field;
+(id)dragField;
+(id)vortexField;
+(id)noiseFieldWithSmoothness:(float)arg1 animationSpeed:(float)arg2 ;
+(id)turbulenceFieldWithSmoothness:(float)arg1 animationSpeed:(float)arg2 ;
+(id)springField;
+(id)electricField;
+(id)magneticField;
+(id)linearGravityField;
+(id)radialGravityField;
+(id)customFieldWithEvaluationBlock:(/*^block*/id)arg1 ;
-(c3dPhysicsField*)_handle;
-(void)_removeOwner;
-(c3dPhysicsField*)_createField;
-(void)_setupCommonProperties;
-(SCNVector3)halfExtent;
-(char)supportsDirection;
-(char)supportsOffset;
-(void)_setWorld:(id)arg1 ;
-(SCNVector3)evalAtLocation:(SCNVector3)arg1 ;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(void)dealloc;
-(id)init;
-(id)copy;
-(char)isActive;
-(id)copyWithZone:(NSZone*)arg1 ;
-(void)_commonInit;
-(void)setDirection:(SCNVector3)arg1 ;
-(SCNVector3)direction;
-(void)setActive:(char)arg1 ;
-(void)setOffset:(SCNVector3)arg1 ;
-(SCNVector3)offset;
-(void)setScope:(int)arg1 ;
-(int)scope;
-(void)setMinimumDistance:(float)arg1 ;
-(float)minimumDistance;
-(id)_owner;
-(void)_setOwner:(id)arg1 ;
-(float)strength;
-(void)setStrength:(float)arg1 ;
-(unsigned)categoryBitMask;
-(void)setCategoryBitMask:(unsigned)arg1 ;
-(void)setFalloffExponent:(float)arg1 ;
-(float)falloffExponent;
-(void)setExclusive:(char)arg1 ;
-(char)isExclusive;
-(void)setHalfExtent:(SCNVector3)arg1 ;
-(void)setUsesEllipsoidalExtent:(char)arg1 ;
-(char)usesEllipsoidalExtent;
@end

