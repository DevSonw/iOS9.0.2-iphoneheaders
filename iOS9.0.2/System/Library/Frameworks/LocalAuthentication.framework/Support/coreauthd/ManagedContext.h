/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 6, 2015 at 2:37:01 PM Japan Standard Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /System/Library/Frameworks/LocalAuthentication.framework/Support/coreauthd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <coreauthd/coreauthd-Structs.h>
#import <libobjc.A.dylib/LAContextXPC.h>
#import <libobjc.A.dylib/LAUIDelegate.h>

@protocol LAUIDelegate;
@class NSDictionary, NSMutableArray, NSMutableDictionary, AuthenticationInProgress, NSData;

@interface ManagedContext : NSObject <LAContextXPC, LAUIDelegate> {

	ACMHandleRef _acmContext;
	NSDictionary* _eventProcessing;
	NSMutableArray* _callerInfoRecords;
	NSDictionary* _resultInfo;
	NSMutableDictionary* _serverProperties;
	id<LAUIDelegate> _uiDelegate;
	AuthenticationInProgress* _authenticationInProgress;
	char _applicationPasswordWasSet;
	int _applicationPasswordCounter;
	char _hasCreatedACMContext;
	NSDictionary* _constInfo;
	NSData* _externalizedACMContext;

}

@property (readonly) NSDictionary * constInfo;                     //@synthesize constInfo=_constInfo - In the implementation block
@property (readonly) NSData * externalizedACMContext;              //@synthesize externalizedACMContext=_externalizedACMContext - In the implementation block
+(int)policyFromString:(id)arg1 error:(id*)arg2 ;
+(int)_getPolicy:(id)arg1 withError:(id*)arg2 ;
-(void)evaluatePolicy:(int)arg1 options:(id)arg2 hasBgndEntitlement:(char)arg3 cApiOrigin:(char)arg4 reply:(/*^block*/id)arg5 ;
-(void)evaluateACL:(id)arg1 operation:(void*)arg2 options:(id)arg3 hasBgndEntitlement:(char)arg4 reply:(/*^block*/id)arg5 ;
-(NSData *)externalizedACMContext;
-(id)callerInfoRecords;
-(void)addCallerInfoRecord:(id)arg1 ;
-(id)initWithExternalizedContext:(id)arg1 uiDelegate:(id)arg2 callerInfoRecord:(id)arg3 error:(id*)arg4 ;
-(NSDictionary *)constInfo;
-(char)_createACMContextWithExternalizedContext:(id)arg1 error:(id*)arg2 ;
-(id)_createConstInfo;
-(void)_createACMContextWithExternalizedContext:(id)arg1 reply:(/*^block*/id)arg2 ;
-(id)_createInternalInfo:(id)arg1 skipCallerIdentification:(char)arg2 callerBundleId:(id)arg3 hasBgndEntitlement:(char)arg4 cApiOrigin:(char)arg5 ;
-(char*)_acmPolicyForPolicy:(int)arg1 ;
-(id)_updateServerPropertiesWithOptions:(id)arg1 ;
-(id)_createInternalInfoWithPolicy:(int)arg1 policyOptions:(id)arg2 hasBgndEntitlement:(char)arg3 cApiOrigin:(char)arg4 ;
-(void)_handleAcmRequirement:(const ACMRequirementRef)arg1 policy:(int)arg2 constraintData:(id)arg3 internalInfo:(id)arg4 reply:(/*^block*/id)arg5 ;
-(void)_authenticateForPolicy:(int)arg1 constraintData:(id)arg2 internalInfo:(id)arg3 mechanism:(id)arg4 error:(id)arg5 reply:(/*^block*/id)arg6 ;
-(void)evaluateACL:(id)arg1 operation:(void*)arg2 options:(id)arg3 hasBgndEntitlement:(char)arg4 cApiOrigin:(char)arg5 callerName:(id)arg6 callerBundleId:(id)arg7 reply:(/*^block*/id)arg8 ;
-(void)_validateACL:(id)arg1 evaluateOperation:(void*)arg2 options:(id)arg3 hasBgndEntitlement:(char)arg4 cApiOrigin:(char)arg5 callerName:(id)arg6 callerBundleId:(id)arg7 reply:(/*^block*/id)arg8 ;
-(void)_evaluateACL:(id)arg1 operation:(void*)arg2 options:(id)arg3 hasBgndEntitlement:(char)arg4 cApiOrigin:(char)arg5 callerName:(id)arg6 callerBundleId:(id)arg7 reply:(/*^block*/id)arg8 ;
-(char)_validatePassword:(int)arg1 options:(id)arg2 hasBgndEntitlement:(char)arg3 cApiOrigin:(char)arg4 callerName:(id)arg5 callerBundleId:(id)arg6 reply:(/*^block*/id)arg7 ;
-(void)_evaluateOperation:(void*)arg1 aclRef:(id)arg2 options:(id)arg3 validate:(char)arg4 hasBgndEntitlement:(char)arg5 cApiOrigin:(char)arg6 callerName:(id)arg7 callerBundleId:(id)arg8 reply:(/*^block*/id)arg9 ;
-(id)_fillConstraint:(id)arg1 options:(id)arg2 error:(id*)arg3 ;
-(char)_isSimpleACLConstraint:(id)arg1 ;
-(void)_finishedAuthenticationMechanism:(id)arg1 policy:(int)arg2 constraintData:(id)arg3 internalInfo:(id)arg4 result:(id)arg5 error:(id)arg6 reply:(/*^block*/id)arg7 ;
-(void)_validateOperations:(id)arg1 aclRef:(id)arg2 evaluateOperation:(void*)arg3 options:(id)arg4 currentResult:(id)arg5 reply:(/*^block*/id)arg6 ;
-(void)_validateOperation:(void*)arg1 aclRef:(id)arg2 evaluateOperation:(void*)arg3 options:(id)arg4 reply:(/*^block*/id)arg5 ;
-(id)_serverPropertyOrExceptionForOption:(int)arg1 ;
-(id)_serverPropertyForOption:(int)arg1 error:(id*)arg2 ;
-(void)_evaluateConstraint:(SecAccessControlRef)arg1 constraint:(void*)arg2 operation:(void*)arg3 options:(id)arg4 hasBgndEntitlement:(char)arg5 cApiOrigin:(char)arg6 evaluateForValidate:(char)arg7 reply:(/*^block*/id)arg8 ;
-(void)evaluateACL:(id)arg1 operation:(int)arg2 options:(id)arg3 reply:(/*^block*/id)arg4 ;
-(void)enterPassword:(id)arg1 reply:(/*^block*/id)arg2 ;
-(void)setCredential:(id)arg1 type:(int)arg2 onlyGet:(char)arg3 reply:(/*^block*/id)arg4 ;
-(void)serverPropertyForOption:(int)arg1 reply:(/*^block*/id)arg2 ;
-(void)setServerPropertyForOption:(int)arg1 value:(id)arg2 reply:(/*^block*/id)arg3 ;
-(void)event:(int)arg1 params:(id)arg2 reply:(/*^block*/id)arg3 ;
-(void)evaluatePolicy:(int)arg1 options:(id)arg2 reply:(/*^block*/id)arg3 ;
-(void)failProcessedEvent:(int)arg1 failureError:(id)arg2 reply:(/*^block*/id)arg3 ;
-(void)dealloc;
-(void)invalidate;
@end

