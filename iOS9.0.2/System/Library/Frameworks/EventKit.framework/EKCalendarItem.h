/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 6, 2015 at 2:30:30 PM Japan Standard Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /System/Library/Frameworks/EventKit.framework/EventKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <EventKit/EKObject.h>

@class NSString, EKCalendar, NSURL, NSDate, NSTimeZone, NSArray, EKStructuredLocation, EKAttendee, EKOrganizer, NSUserActivity;

@interface EKCalendarItem : EKObject {

	char _haveCachedActionsState;
	unsigned _actionsStateCachedValue;

}

@property (nonatomic,readonly) NSString * UUID; 
@property (nonatomic,retain) EKCalendar * calendar; 
@property (nonatomic,readonly) NSString * calendarItemIdentifier; 
@property (nonatomic,readonly) NSString * calendarItemExternalIdentifier; 
@property (nonatomic,copy) NSString * title; 
@property (nonatomic,copy) NSString * location; 
@property (nonatomic,copy) NSString * notes; 
@property (nonatomic,copy) NSURL * URL; 
@property (nonatomic,readonly) NSDate * lastModifiedDate; 
@property (nonatomic,readonly) NSDate * creationDate; 
@property (nonatomic,copy) NSTimeZone * timeZone; 
@property (nonatomic,readonly) char hasAlarms; 
@property (nonatomic,readonly) char hasRecurrenceRules; 
@property (nonatomic,readonly) char hasAttendees; 
@property (nonatomic,readonly) char hasNotes; 
@property (nonatomic,readonly) NSArray * attendees; 
@property (nonatomic,copy) NSArray * alarms; 
@property (nonatomic,copy) NSArray * recurrenceRules; 
@property (nonatomic,readonly) EKStructuredLocation * preferredLocation; 
@property (nonatomic,copy) EKStructuredLocation * structuredLocation; 
@property (nonatomic,copy) EKStructuredLocation * clientLocation; 
@property (nonatomic,copy) EKStructuredLocation * startLocation; 
@property (nonatomic,readonly) char isFloating; 
@property (assign,getter=isAllDay,nonatomic) char allDay; 
@property (nonatomic,copy) NSTimeZone * startTimeZone; 
@property (nonatomic,copy) NSTimeZone * endTimeZone; 
@property (assign,nonatomic) NSString * calendarScale; 
@property (nonatomic,readonly) char isEditable; 
@property (nonatomic,readonly) char isSelfOrganized; 
@property (nonatomic,readonly) char isExternallyOrganizedInvitation; 
@property (nonatomic,readonly) char isSelfOrganizedInvitation; 
@property (nonatomic,readonly) char isOrganizedBySharedCalendarOwner; 
@property (nonatomic,readonly) int selfParticipantStatus; 
@property (nonatomic,retain) EKAttendee * selfAttendee; 
@property (nonatomic,retain) EKOrganizer * organizer; 
@property (nonatomic,copy) NSURL * action; 
@property (nonatomic,retain) NSUserActivity * appLink; 
@property (assign,nonatomic) unsigned priority; 
@property (nonatomic,readonly) NSArray * attachments; 
@property (nonatomic,copy) NSString * sharedItemCreatedByDisplayName; 
@property (nonatomic,copy) NSString * sharedItemCreatedByEmailAddress; 
@property (nonatomic,copy) NSString * sharedItemCreatedByFirstName; 
@property (nonatomic,copy) NSString * sharedItemCreatedByLastName; 
@property (nonatomic,copy) NSDate * sharedItemCreatedDate; 
@property (nonatomic,copy) NSTimeZone * sharedItemCreatedTimeZone; 
@property (nonatomic,copy) NSString * sharedItemModifiedByDisplayName; 
@property (nonatomic,copy) NSString * sharedItemModifiedByEmailAddress; 
@property (nonatomic,copy) NSString * sharedItemModifiedByFirstName; 
@property (nonatomic,copy) NSString * sharedItemModifiedByLastName; 
@property (nonatomic,copy) NSDate * sharedItemModifiedDate; 
@property (nonatomic,copy) NSTimeZone * sharedItemModifiedTimeZone; 
@property (nonatomic,readonly) char allowsCalendarModifications; 
@property (nonatomic,readonly) char allowsRecurrenceModifications; 
@property (nonatomic,readonly) char allowsAlarmModifications; 
@property (nonatomic,readonly) char allowsAttendeeModifications; 
@property (nonatomic,copy) NSArray * allAlarms; 
@property (nonatomic,readonly) unsigned actionsState; 
@property (nonatomic,retain,readonly) EKCalendarItem * originalItem; 
@property (nonatomic,readonly) char requiresDetach; 
@property (assign,getter=isDefaultAlarmRemoved,nonatomic) char defaultAlarmRemoved; 
@property (nonatomic,copy) NSString * externalID; 
@property (nonatomic,copy) NSString * externalModificationTag; 
@property (nonatomic,readonly) NSURL * externalURI; 
-(id)lazyLoadRelationForKey:(id)arg1 ;
-(NSString *)externalModificationTag;
-(void)setExternalModificationTag:(NSString *)arg1 ;
-(char)hasAlarms;
-(NSURL *)externalURI;
-(void)updatePersistentObject;
-(char)rebase;
-(id)_persistentItem;
-(char)hasNotes;
-(id)_locationRelation;
-(id)_clientLocationRelation;
-(id)_startLocationRelation;
-(NSString *)calendarScale;
-(void)setCalendarScale:(NSString *)arg1 ;
-(char)isOrganizedBySharedCalendarOwner;
-(id)_alarmsRelation;
-(char)_excludeAlarmDueToConnectionTrigger:(id)arg1 ;
-(id)findOriginalAlarmStartingWith:(id)arg1 ;
-(NSArray *)allAlarms;
-(id)_recurrencesRelation;
-(id)_attendeesRelation;
-(id)_selfAttendeeRelation;
-(id)_organizerRelation;
-(NSString *)sharedItemCreatedByFirstName;
-(NSString *)sharedItemCreatedByLastName;
-(NSString *)sharedItemModifiedByFirstName;
-(NSString *)sharedItemModifiedByLastName;
-(id)_attachmentsRelation;
-(char)canMoveToCalendar:(id)arg1 fromCalendar:(id)arg2 error:(id*)arg3 ;
-(void)updatePersistentObjectSkippingProperties:(id)arg1 ;
-(EKCalendarItem *)originalItem;
-(void)moveToCalendar:(id)arg1 ;
-(void)_moveToCalendarInternal:(id)arg1 ;
-(char)isDefaultAlarmRemoved;
-(void)setDefaultAlarmRemoved:(char)arg1 ;
-(char)isSelfOrganizedInvitation;
-(char)allowsCalendarModifications;
-(char)allowsAlarmModifications;
-(void)setAllAlarms:(NSArray *)arg1 ;
-(void)snoozeAlarm:(id)arg1 withTimeIntervalFromNow:(double)arg2 ;
-(void)snoozeAlarm:(id)arg1 withLocation:(id)arg2 proximity:(int)arg3 ;
-(char)isAlarmAcknowledgedPropertyDirty;
-(void)removeAcknowledgedSnoozedAlarms;
-(void)removeAllSnoozedAlarms;
-(void)removeRecurrenceRule:(id)arg1 ;
-(void)setSharedItemCreatedByDisplayName:(NSString *)arg1 ;
-(void)setSharedItemCreatedByAddress:(id)arg1 ;
-(void)setSharedItemCreatedByFirstName:(NSString *)arg1 ;
-(void)setSharedItemCreatedByLastName:(NSString *)arg1 ;
-(void)setSharedItemCreatedDate:(NSDate *)arg1 ;
-(NSTimeZone *)sharedItemCreatedTimeZone;
-(void)setSharedItemCreatedTimeZone:(NSTimeZone *)arg1 ;
-(void)setSharedItemModifiedByDisplayName:(NSString *)arg1 ;
-(void)setSharedItemModifiedByEmailAddress:(NSString *)arg1 ;
-(void)setSharedItemModifiedByFirstName:(NSString *)arg1 ;
-(void)setSharedItemModifiedByLastName:(NSString *)arg1 ;
-(void)setSharedItemModifiedDate:(NSDate *)arg1 ;
-(NSTimeZone *)sharedItemModifiedTimeZone;
-(void)setSharedItemModifiedTimeZone:(NSTimeZone *)arg1 ;
-(void)updateWithAppLink:(id)arg1 usedSelectedText:(char*)arg2 ;
-(NSString *)notes;
-(void)setNotes:(NSString *)arg1 ;
-(NSArray *)attendees;
-(EKStructuredLocation *)structuredLocation;
-(void)setStructuredLocation:(EKStructuredLocation *)arg1 ;
-(char)hasAttendees;
-(void)removeAttendee:(id)arg1 ;
-(void)addAttendee:(id)arg1 ;
-(void)setClientLocation:(EKStructuredLocation *)arg1 ;
-(NSTimeZone *)startTimeZone;
-(NSTimeZone *)endTimeZone;
-(char)isAllDay;
-(void)setStartTimeZone:(NSTimeZone *)arg1 ;
-(void)setEndTimeZone:(NSTimeZone *)arg1 ;
-(id)startDateForRecurrence;
-(EKOrganizer *)organizer;
-(void)setAttendees:(NSArray *)arg1 ;
-(NSString *)externalID;
-(char)hasRecurrenceRules;
-(NSArray *)alarms;
-(char)isExternallyOrganizedInvitation;
-(unsigned)actionsState;
-(void)setAlarms:(NSArray *)arg1 ;
-(void)addAlarm:(id)arg1 ;
-(NSString *)calendarItemIdentifier;
-(NSString *)sharedItemModifiedByDisplayName;
-(NSDate *)sharedItemModifiedDate;
-(NSString *)sharedItemCreatedByDisplayName;
-(NSDate *)sharedItemCreatedDate;
-(NSString *)sharedItemModifiedByEmailAddress;
-(NSString *)sharedItemCreatedByEmailAddress;
-(char)isSelfOrganized;
-(NSArray *)recurrenceRules;
-(int)selfParticipantStatus;
-(void)removeAlarm:(id)arg1 ;
-(char)allowsAttendeeModifications;
-(EKStructuredLocation *)preferredLocation;
-(char)requiresDetach;
-(char)allowsSpansOtherThanThisEvent;
-(id)suggestionInfo;
-(EKAttendee *)selfAttendee;
-(char)allowsRecurrenceModifications;
-(void)setRecurrenceRules:(NSArray *)arg1 ;
-(void)addRecurrenceRule:(id)arg1 ;
-(EKStructuredLocation *)clientLocation;
-(NSDate *)lastModifiedDate;
-(NSString *)calendarItemExternalIdentifier;
-(NSDate *)creationDate;
-(void)setCreationDate:(NSDate *)arg1 ;
-(void)setTitle:(NSString *)arg1 ;
-(id)description;
-(NSURL *)action;
-(NSString *)title;
-(void)setTimeZone:(NSTimeZone *)arg1 ;
-(char)isEditable;
-(unsigned)priority;
-(void)setPriority:(unsigned)arg1 ;
-(NSString *)UUID;
-(void)setAction:(NSURL *)arg1 ;
-(NSURL *)URL;
-(void)setStartLocation:(EKStructuredLocation *)arg1 ;
-(NSString *)location;
-(void)setURL:(NSURL *)arg1 ;
-(void)setCalendar:(EKCalendar *)arg1 ;
-(NSTimeZone *)timeZone;
-(EKCalendar *)calendar;
-(void)setLocation:(NSString *)arg1 ;
-(NSArray *)attachments;
-(void)setAppLink:(NSUserActivity *)arg1 ;
-(NSUserActivity *)appLink;
-(EKStructuredLocation *)startLocation;
-(char)validate:(id*)arg1 ;
-(void)setOrganizer:(EKOrganizer *)arg1 ;
-(int)sequenceNumber;
-(void)setAllDay:(char)arg1 ;
-(void)setExternalID:(NSString *)arg1 ;
-(char)isFloating;
-(void)setLastModifiedDate:(NSDate *)arg1 ;
@end

