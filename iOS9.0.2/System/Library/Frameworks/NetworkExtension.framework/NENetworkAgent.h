/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 6, 2015 at 2:30:55 PM Japan Standard Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /System/Library/Frameworks/NetworkExtension.framework/NetworkExtension
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <libobjc.A.dylib/NWNetworkAgent.h>

@class NSString, NSUUID;

@interface NENetworkAgent : NSObject <NWNetworkAgent> {

	char active;
	char kernelActivated;
	char userActivated;
	char voluntary;
	NSUUID* agentUUID;
	NSString* agentDescription;
	NSString* _configurationName;
	NSUUID* _internalUUID;
	int _internalSessionType;
	/*^block*/id _internalStartHandler;

}

@property (copy,readonly) NSUUID * configurationUUID; 
@property (copy) NSString * configurationName;                          //@synthesize configurationName=_configurationName - In the implementation block
@property (readonly) int sessionType; 
@property (copy) NSUUID * internalUUID;                                 //@synthesize internalUUID=_internalUUID - In the implementation block
@property (assign) int internalSessionType;                             //@synthesize internalSessionType=_internalSessionType - In the implementation block
@property (copy) id internalStartHandler;                               //@synthesize internalStartHandler=_internalStartHandler - In the implementation block
@property (copy) NSString * agentDescription; 
@property (copy) NSUUID * agentUUID; 
@property (getter=isActive) char active; 
@property (getter=isKernelActivated) char kernelActivated; 
@property (getter=isUserActivated) char userActivated; 
@property (getter=isVoluntary) char voluntary; 
@property (getter=isSpecificUseOnly) char specificUseOnly; 
@property (getter=isNetworkProvider) char networkProvider; 
+(id)agentDomain;
+(id)agentType;
+(id)agentFromData:(id)arg1 ;
-(NSString *)configurationName;
-(id)initWithConfigUUID:(id)arg1 sessionType:(int)arg2 ;
-(NSUUID *)internalUUID;
-(int)internalSessionType;
-(void)setInternalStartHandler:(id)arg1 ;
-(id)internalStartHandler;
-(NSUUID *)configurationUUID;
-(void)setConfigurationName:(NSString *)arg1 ;
-(void)setInternalUUID:(NSUUID *)arg1 ;
-(void)setInternalSessionType:(int)arg1 ;
-(char)isActive;
-(void)setActive:(char)arg1 ;
-(void)setStartHandler:(/*^block*/id)arg1 ;
-(id)copyAgentData;
-(char)startAgentWithOptions:(id)arg1 ;
-(NSString *)agentDescription;
-(void)setAgentDescription:(NSString *)arg1 ;
-(NSUUID *)agentUUID;
-(void)setAgentUUID:(NSUUID *)arg1 ;
-(char)isKernelActivated;
-(void)setKernelActivated:(char)arg1 ;
-(char)isUserActivated;
-(void)setUserActivated:(char)arg1 ;
-(char)isVoluntary;
-(void)setVoluntary:(char)arg1 ;
-(int)sessionType;
@end

