/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 6, 2015 at 2:30:08 PM Japan Standard Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /System/Library/Frameworks/AVFoundation.framework/libAVFAudio.dylib
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


#import <libAVFAudio.dylib/libAVFAudio.dylib-Structs.h>
@class NSURL, NSDictionary, NSArray;

@interface AVAudioRecorder : NSObject {

	void* _impl;

}

@property (getter=isRecording,readonly) char recording; 
@property (readonly) NSURL * url; 
@property (readonly) NSDictionary * settings; 
@property (assign) id<AVAudioRecorderDelegate> delegate; 
@property (readonly) double currentTime; 
@property (readonly) double deviceCurrentTime; 
@property (getter=isMeteringEnabled) char meteringEnabled; 
@property (nonatomic,copy) NSArray * channelAssignments; 
@property (assign,nonatomic) int processToTap; 
@property (assign,nonatomic) char instantaneousMetering; 
-(AudioRecorderImpl*)impl;
-(void)finishedRecording;
-(char)isMeteringEnabled;
-(float)peakPowerForChannel:(unsigned)arg1 ;
-(NSArray *)channelAssignments;
-(void)setChannelAssignments:(NSArray *)arg1 ;
-(void)privCommonCleanup;
-(id)initWithURL:(id)arg1 settings:(id)arg2 error:(id*)arg3 ;
-(char)prepareToRecord;
-(char)recordAtTime:(double)arg1 ;
-(char)recordForDuration:(double)arg1 ;
-(char)recordAtTime:(double)arg1 forDuration:(double)arg2 ;
-(char)deleteRecording;
-(void)endInterruptionWithFlags;
-(void)setProcessToTap:(int)arg1 ;
-(int)processToTap;
-(char)instantaneousMetering;
-(void)setInstantaneousMetering:(char)arg1 ;
-(void)beginInterruption;
-(void)endInterruption;
-(double)currentTime;
-(char)record;
-(void)setDelegate:(id<AVAudioRecorderDelegate>)arg1 ;
-(void)dealloc;
-(id<AVAudioRecorderDelegate>)delegate;
-(NSDictionary *)settings;
-(NSURL *)url;
-(void)stop;
-(void)pause;
-(id)baseInit;
-(char)isRecording;
-(void)setMeteringEnabled:(char)arg1 ;
-(void)updateMeters;
-(float)averagePowerForChannel:(unsigned)arg1 ;
-(double)deviceCurrentTime;
-(void)finalize;
@end

