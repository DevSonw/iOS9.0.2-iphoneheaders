/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 6, 2015 at 2:30:17 PM Japan Standard Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /System/Library/Frameworks/Contacts.framework/Contacts
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <Contacts/Contacts-Structs.h>
#import <libobjc.A.dylib/NSSecureCoding.h>
#import <libobjc.A.dylib/NSCopying.h>

@class NSString, NSArray;

@interface CNPropertyDescription : NSObject <NSSecureCoding, NSCopying> {

	NSString* _key;
	SEL _readSelector;
	SEL _writeSelector;
	/*^block*/id _valueForKeyTransform;
	char _isNonnull;

}

@property (nonatomic,copy,readonly) NSString * key;                        //@synthesize key=_key - In the implementation block
@property (nonatomic,readonly) char isWritable; 
@property (nonatomic,readonly) Class valueClass; 
@property (nonatomic,readonly) char isSingleValue; 
@property (nonatomic,readonly) char isMultiValue; 
@property (nonatomic,readonly) char isNonnull;                             //@synthesize isNonnull=_isNonnull - In the implementation block
@property (nonatomic,copy,readonly) id valueForKeyTransform;               //@synthesize valueForKeyTransform=_valueForKeyTransform - In the implementation block
@property (nonatomic,readonly) NSArray * equivalentLabelSets; 
@property (nonatomic,readonly) SEL readSelector;                           //@synthesize readSelector=_readSelector - In the implementation block
@property (nonatomic,readonly) SEL writeSelector;                          //@synthesize writeSelector=_writeSelector - In the implementation block
+(char)supportsSecureCoding;
-(Class)valueClass;
-(char)isValidValue:(id)arg1 error:(id*)arg2 ;
-(char)isNonnull;
-(id)initWithKey:(id)arg1 readSelector:(SEL)arg2 writeSelector:(SEL)arg3 ;
-(void)encodeUsingCoder:(id)arg1 contact:(id)arg2 ;
-(void)decodeUsingCoder:(id)arg1 contact:(id)arg2 ;
-(char)isEqualIgnoringIdentifiersForContact:(id)arg1 other:(id)arg2 ;
-(id)CNValueForContact:(id)arg1 ;
-(void)setCNValue:(id)arg1 onContact:(id)arg2 ;
-(char)isValue:(id)arg1 equivalentToValue:(id)arg2 ;
-(char)isValue:(id)arg1 preferredToEquivalentValue:(id)arg2 ;
-(NSArray *)equivalentLabelSets;
-(id)stringForIndexingForContact:(id)arg1 ;
-(void*)ABValueFromCNValue:(id)arg1 ;
-(id)CNValueFromABValue:(void*)arg1 ;
-(id)equivalentLabelsForLabel:(id)arg1 ;
-(id)valueForKeyTransform;
-(char)abPropertyID:(int*)arg1 ;
-(void)assertValueType:(id)arg1 ;
-(void)copyFromABPerson:(void*)arg1 toContact:(id)arg2 ;
-(char)setABValue:(void*)arg1 onABPerson:(void*)arg2 error:(_CFError*)arg3 ;
-(void*)ABValueForABPerson:(void*)arg1 ;
-(char)setCNValue:(id)arg1 onABPerson:(void*)arg2 withSaveContext:(id)arg3 error:(id*)arg4 ;
-(char)isSingleValue;
-(id)valueWithResetIdentifiers:(id)arg1 ;
-(SEL)readSelector;
-(SEL)writeSelector;
-(char)isMultiValue;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(void)dealloc;
-(NSString *)key;
-(id)copyWithZone:(NSZone*)arg1 ;
-(char)isWritable;
@end

