/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 6, 2015 at 2:31:36 PM Japan Standard Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /System/Library/Frameworks/WebKit.framework/WebKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <WebKit/WebKit-Structs.h>
#import <UIKit/UIView.h>
#import <UIKit/UIGestureRecognizerDelegate.h>
#import <UIKit/UIWebTouchEventsGestureRecognizerDelegate.h>
#import <UIKit/UITextInputPrivate.h>
#import <UIKit/UIWebFormAccessoryDelegate.h>
#import <UIKit/UIWKInteractionViewProtocol.h>
#import <libobjc.A.dylib/WKFileUploadPanelDelegate.h>
#import <libobjc.A.dylib/WKActionSheetAssistantDelegate.h>
#import <UIKit/UIPreviewItemDelegate.h>

@protocol UITextInputDelegate;
@class UITextInteractionAssistant, WKWebView, UIWebFormAccessory, NSString, UITextRange, NSDictionary, UITextPosition, UIView, UIColor, UIImage, WKBrowsingContextController;

@interface WKContentView : UIView <UIGestureRecognizerDelegate, UIWebTouchEventsGestureRecognizerDelegate, UITextInputPrivate, UIWebFormAccessoryDelegate, UIWKInteractionViewProtocol, WKFileUploadPanelDelegate, WKActionSheetAssistantDelegate, UIPreviewItemDelegate> {

	RefPtr<WebKit::WebPageProxy>* _page;
	WKWebView* _webView;
	RetainPtr<UIWebTouchEventsGestureRecognizer>* _touchEventGestureRecognizer;
	char _canSendTouchEventsAsynchronously;
	RetainPtr<WKSyntheticClickTapGestureRecognizer>* _singleTapGestureRecognizer;
	RetainPtr<_UIWebHighlightLongPressGestureRecognizer>* _highlightLongPressGestureRecognizer;
	RetainPtr<UILongPressGestureRecognizer>* _longPressGestureRecognizer;
	RetainPtr<UITapGestureRecognizer>* _doubleTapGestureRecognizer;
	RetainPtr<UITapGestureRecognizer>* _twoFingerDoubleTapGestureRecognizer;
	RetainPtr<WKInspectorNodeSearchGestureRecognizer>* _inspectorNodeSearchGestureRecognizer;
	RetainPtr<UIWKTextInteractionAssistant>* _textSelectionAssistant;
	RetainPtr<UIWKSelectionAssistant>* _webSelectionAssistant;
	RetainPtr<UITextInputTraits>* _traits;
	RetainPtr<UIWebFormAccessory>* _formAccessoryView;
	RetainPtr<_UIHighlightView>* _highlightView;
	RetainPtr<UIView>* _interactionViewsContainerView;
	RetainPtr<NSString>* _markedText;
	RetainPtr<WKActionSheetAssistant>* _actionSheetAssistant;
	RetainPtr<WKAirPlayRoutePicker>* _airPlayRoutePicker;
	RetainPtr<WKFormInputSession>* _formInputSession;
	RetainPtr<WKFileUploadPanel>* _fileUploadPanel;
	RetainPtr<UIGestureRecognizer>* _previewGestureRecognizer;
	RetainPtr<UIGestureRecognizer>* _previewSecondaryGestureRecognizer;
	RetainPtr<UIPreviewItemController>* _previewItemController;
	unique_ptr<WebKit::SmartMagnificationController, std::__1::default_delete<WebKit::SmartMagnificationController> >* _smartMagnificationController;
	id<UITextInputDelegate> _inputDelegate;
	unsigned long long _latestTapHighlightID;
	TapHighlightInformation* _tapHighlightInformation;
	WKAutoCorrectionData* _autocorrectionData;
	InteractionInformationAtPosition* _positionInformation;
	AssistedNodeInformation* _assistedNodeInformation;
	RetainPtr<NSObject<WKFormPeripheral> >* _inputPeripheral;
	CGPoint _lastInteractionLocation;
	WKSelectionDrawingInfo* _lastSelectionDrawingInfo;
	char _isEditable;
	char _showingTextStyleOptions;
	char _hasValidPositionInformation;
	char _isTapHighlightIDValid;
	char _potentialTapInProgress;
	char _highlightLongPressCanClick;
	char _hasTapHighlightForPotentialTap;
	char _selectionNeedsUpdate;
	char _shouldRestoreSelection;
	char _usingGestureForSelection;
	char _inspectorNodeSearchEnabled;
	char _didAccessoryTabInitiateFocus;
	unique_ptr<WebKit::PageClientImpl, std::__1::default_delete<WebKit::PageClientImpl> >* _pageClient;
	RetainPtr<WKBrowsingContextController>* _browsingContextController;
	RetainPtr<UIView>* _rootContentView;
	RetainPtr<UIView>* _fixedClippingView;
	RetainPtr<WKInspectorIndicationView>* _inspectorIndicationView;
	RetainPtr<WKInspectorHighlightView>* _inspectorHighlightView;
	HistoricalVelocityData _historicalKinematicData;
	RetainPtr<NSUndoManager>* _undoManager;
	unique_ptr<WebKit::ApplicationStateTracker, std::__1::default_delete<WebKit::ApplicationStateTracker> >* _applicationStateTracker;

}

@property (nonatomic,readonly) CGPoint lastInteractionLocation; 
@property (nonatomic,readonly) char isEditable; 
@property (nonatomic,readonly) const InteractionInformationAtPosition* positionInformation; 
@property (nonatomic,readonly) const WKAutoCorrectionData* autocorrectionData; 
@property (nonatomic,readonly) const AssistedNodeInformation* assistedNodeInformation; 
@property (nonatomic,readonly) UIWebFormAccessory * formAccessoryView; 
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (assign,nonatomic) int autocapitalizationType; 
@property (assign,nonatomic) int autocorrectionType; 
@property (assign,nonatomic) int spellCheckingType; 
@property (assign,nonatomic) int keyboardType; 
@property (assign,nonatomic) int keyboardAppearance; 
@property (assign,nonatomic) int returnKeyType; 
@property (assign,nonatomic) char enablesReturnKeyAutomatically; 
@property (assign,getter=isSecureTextEntry,nonatomic) char secureTextEntry; 
@property (copy) UITextRange * selectedTextRange; 
@property (nonatomic,readonly) UITextRange * markedTextRange; 
@property (nonatomic,copy) NSDictionary * markedTextStyle; 
@property (nonatomic,readonly) UITextPosition * beginningOfDocument; 
@property (nonatomic,readonly) UITextPosition * endOfDocument; 
@property (assign,nonatomic,__weak) id<UITextInputDelegate> inputDelegate; 
@property (nonatomic,readonly) id<UITextInputTokenizer> tokenizer; 
@property (nonatomic,readonly) UIView * textInputView; 
@property (assign,nonatomic) int selectionAffinity; 
@property (nonatomic,copy) NSString * recentInputIdentifier; 
@property (assign,nonatomic) CFCharacterSetRef textTrimmingSet; 
@property (nonatomic,retain) UIColor * insertionPointColor; 
@property (nonatomic,retain) UIColor * selectionBarColor; 
@property (nonatomic,retain) UIColor * selectionHighlightColor; 
@property (nonatomic,retain) UIImage * selectionDragDotImage; 
@property (assign,nonatomic) unsigned insertionPointWidth; 
@property (assign,nonatomic) int textLoupeVisibility; 
@property (assign,nonatomic) int textSelectionBehavior; 
@property (assign,nonatomic) id textSuggestionDelegate; 
@property (assign,nonatomic) char isSingleLineDocument; 
@property (assign,nonatomic) char contentsIsSingleValue; 
@property (assign,nonatomic) char acceptsEmoji; 
@property (assign,nonatomic) char forceEnableDictation; 
@property (assign,nonatomic) int emptyContentReturnKeyType; 
@property (assign,nonatomic) char returnKeyGoesToNextResponder; 
@property (assign,nonatomic) char acceptsFloatingKeyboard; 
@property (assign,nonatomic) char acceptsSplitKeyboard; 
@property (assign,nonatomic) char displaySecureTextUsingPlainText; 
@property (assign,nonatomic) char learnsCorrections; 
@property (assign,nonatomic) int shortcutConversionType; 
@property (assign,nonatomic) char suppressReturnKeyStyling; 
@property (assign,nonatomic) char useInterfaceLanguageForLocalization; 
@property (assign,nonatomic) char deferBecomingResponder; 
@property (assign,nonatomic) char enablesReturnKeyOnNonWhiteSpaceContent; 
@property (nonatomic,copy) NSString * autocorrectionContext; 
@property (nonatomic,copy) NSString * responseContext; 
@property (assign,nonatomic) char disablePrediction; 
@property (assign,nonatomic) char isCarPlayIdiom; 
@property (nonatomic,readonly) UITextInteractionAssistant * interactionAssistant; 
@property (assign,nonatomic) int selectionGranularity; 
@property (nonatomic,readonly) WKBrowsingContextController * browsingContextController; 
@property (nonatomic,readonly) WebPageProxy* page; 
@property (nonatomic,readonly) char isAssistingNode; 
@property (assign,getter=isShowingInspectorIndication,nonatomic) char showingInspectorIndication; 
@property (nonatomic,readonly) char isBackground; 
-(void)dealloc;
-(id)hitTest:(CGPoint)arg1 withEvent:(id)arg2 ;
-(void)didMoveToWindow;
-(char)gestureRecognizerShouldBegin:(id)arg1 ;
-(char)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2 ;
-(char)canPerformAction:(SEL)arg1 withSender:(id)arg2 ;
-(void)_applicationDidEnterBackground;
-(id)undoManager;
-(char)resignFirstResponder;
-(void)handleKeyEvent:(id)arg1 ;
-(void)_handleKeyUIEvent:(id)arg1 ;
-(char)becomeFirstResponder;
-(id)keyCommands;
-(char)isEditable;
-(id)_scroller;
-(char)canBecomeFirstResponder;
-(void)willMoveToWindow:(id)arg1 ;
-(char)_requiresKeyboardWhenFirstResponder;
-(void)_didScroll;
-(char)gestureRecognizer:(id)arg1 canPreventGestureRecognizer:(id)arg2 ;
-(UITextInteractionAssistant *)interactionAssistant;
-(id)textInputTraits;
-(CGRect)_selectionClipRect;
-(void)takeTraitsFrom:(id)arg1 ;
-(UITextPosition *)beginningOfDocument;
-(UITextPosition *)endOfDocument;
-(id)textRangeFromPosition:(id)arg1 toPosition:(id)arg2 ;
-(id)textInRange:(id)arg1 ;
-(id<UITextInputDelegate>)inputDelegate;
-(void)setSelectedTextRange:(UITextRange *)arg1 ;
-(CGRect)caretRectForPosition:(id)arg1 ;
-(char)hasText;
-(void)insertText:(id)arg1 ;
-(void)deleteBackward;
-(void)replaceRange:(id)arg1 withText:(id)arg2 ;
-(void)replaceRangeWithTextWithoutClosingTyping:(id)arg1 replacementText:(id)arg2 ;
-(UITextRange *)selectedTextRange;
-(UITextRange *)markedTextRange;
-(NSDictionary *)markedTextStyle;
-(void)setMarkedTextStyle:(NSDictionary *)arg1 ;
-(void)setMarkedText:(id)arg1 selectedRange:(NSRange)arg2 ;
-(void)unmarkText;
-(id)positionFromPosition:(id)arg1 offset:(int)arg2 ;
-(id)positionFromPosition:(id)arg1 inDirection:(int)arg2 offset:(int)arg3 ;
-(int)comparePosition:(id)arg1 toPosition:(id)arg2 ;
-(int)offsetFromPosition:(id)arg1 toPosition:(id)arg2 ;
-(id)positionWithinRange:(id)arg1 farthestInDirection:(int)arg2 ;
-(id)characterRangeByExtendingPosition:(id)arg1 inDirection:(int)arg2 ;
-(void)setInputDelegate:(id<UITextInputDelegate>)arg1 ;
-(id<UITextInputTokenizer>)tokenizer;
-(int)baseWritingDirectionForPosition:(id)arg1 inDirection:(int)arg2 ;
-(void)setBaseWritingDirection:(int)arg1 forRange:(id)arg2 ;
-(CGRect)firstRectForRange:(id)arg1 ;
-(id)selectionRectsForRange:(id)arg1 ;
-(id)closestPositionToPoint:(CGPoint)arg1 ;
-(id)closestPositionToPoint:(CGPoint)arg1 withinRange:(id)arg2 ;
-(id)characterRangeAtPoint:(CGPoint)arg1 ;
-(id)metadataDictionariesForDictationResults;
-(void)beginSelectionChange;
-(void)endSelectionChange;
-(id)textStylingAtPosition:(id)arg1 inDirection:(int)arg2 ;
-(void)selectAll;
-(id)textColorForCaretSelection;
-(NSRange)selectionRange;
-(char)hasMarkedText;
-(id)inputAccessoryView;
-(char)_requiresKeyboardResetOnReload;
-(id)inputView;
-(id)selectedDOMRange;
-(void)selectAll:(id)arg1 ;
-(void)replace:(id)arg1 ;
-(void)cut:(id)arg1 ;
-(void)copy:(id)arg1 ;
-(void)paste:(id)arg1 ;
-(void)_define:(id)arg1 ;
-(void)_share:(id)arg1 ;
-(void)_lookup:(CGPoint)arg1 ;
-(void)_addShortcut:(id)arg1 ;
-(void)toggleBoldface:(id)arg1 ;
-(void)toggleItalics:(id)arg1 ;
-(void)toggleUnderline:(id)arg1 ;
-(void)_showTextStyleOptions:(id)arg1 ;
-(char)hasSelection;
-(char)hasContent;
-(char)_interactionShouldBeginFromPreviewItemController:(id)arg1 forPosition:(CGPoint)arg2 ;
-(id)_dataForPreviewItemController:(id)arg1 atPosition:(CGPoint)arg2 type:(int*)arg3 ;
-(id)_presentationRectsForPreviewItemController:(id)arg1 ;
-(id)_presentationSnapshotForPreviewItemController:(id)arg1 ;
-(int)selectionGranularity;
-(void)_interactionStartedFromPreviewItemController:(id)arg1 ;
-(void)_interactionStoppedFromPreviewItemController:(id)arg1 ;
-(id)_presentedViewControllerForPreviewItemController:(id)arg1 ;
-(void)_previewItemController:(id)arg1 didDismissPreview:(id)arg2 committing:(char)arg3 ;
-(void)_previewItemController:(id)arg1 commitPreview:(id)arg2 ;
-(void)_previewItemControllerDidCancelPreview:(id)arg1 ;
-(CGRect)_presentationRectForPreviewItemController:(id)arg1 ;
-(id)selectedText;
-(void)select:(id)arg1 ;
-(void)_promptForReplace:(id)arg1 ;
-(void)_transliterateChinese:(id)arg1 ;
-(id)supportedPasteboardTypesForCurrentSelection;
-(id)automaticallySelectedOverlay;
-(void)setBottomBufferHeight:(float)arg1 ;
-(char)requiresKeyEvents;
-(void)handleKeyWebEvent:(id)arg1 ;
-(id)selectionInteractionAssistant;
-(id)fontForCaretSelection;
-(id)rangeEnclosingPosition:(id)arg1 withGranularity:(int)arg2 inDirection:(int)arg3 ;
-(char)isPosition:(id)arg1 atBoundary:(int)arg2 inDirection:(int)arg3 ;
-(id)positionFromPosition:(id)arg1 toBoundary:(int)arg2 inDirection:(int)arg3 ;
-(char)isPosition:(id)arg1 withinTextUnit:(int)arg2 inDirection:(int)arg3 ;
-(void)changeSelectionWithGestureAt:(CGPoint)arg1 withGesture:(int)arg2 withState:(int)arg3 ;
-(void)changeSelectionWithTouchAt:(CGPoint)arg1 withSelectionTouch:(int)arg2 baseIsStart:(char)arg3 ;
-(void)changeSelectionWithTouchesFrom:(CGPoint)arg1 to:(CGPoint)arg2 withGesture:(int)arg3 withState:(int)arg4 ;
-(CGRect)textFirstRect;
-(CGRect)textLastRect;
-(void)requestAutocorrectionContextWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)requestAutocorrectionRectsForString:(id)arg1 withCompletionHandler:(/*^block*/id)arg2 ;
-(void)applyAutocorrection:(id)arg1 toString:(id)arg2 withCompletionHandler:(/*^block*/id)arg3 ;
-(id)markedText;
-(char)hasSelectablePositionAtPoint:(CGPoint)arg1 ;
-(char)pointIsInAssistedNode:(CGPoint)arg1 ;
-(id)webSelectionRects;
-(void)_cancelLongPressGestureRecognizer;
-(void)changeBlockSelectionWithTouchAt:(CGPoint)arg1 withSelectionTouch:(int)arg2 forHandle:(int)arg3 ;
-(void)clearSelection;
-(void)replaceDictatedText:(id)arg1 withText:(id)arg2 ;
-(void)requestDictationContext:(/*^block*/id)arg1 ;
-(char)pointIsNearMarkedText:(CGPoint)arg1 ;
-(void)replaceText:(id)arg1 withText:(id)arg2 ;
-(void)selectWordForReplacement;
-(char)isReplaceAllowed;
-(void)selectWordBackward;
-(id)unscaledView;
-(float)inverseScale;
-(CGRect)unobscuredContentRect;
-(void)moveByOffset:(int)arg1 ;
-(void)selectPositionAtPoint:(CGPoint)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)selectTextWithGranularity:(int)arg1 atPoint:(CGPoint)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)selectPositionAtBoundary:(int)arg1 inDirection:(int)arg2 fromPoint:(CGPoint)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)beginSelectionInDirection:(int)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)updateSelectionWithExtentPoint:(CGPoint)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)updateSelectionWithExtentPoint:(CGPoint)arg1 withBoundary:(int)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)moveSelectionAtBoundary:(int)arg1 inDirection:(int)arg2 completionHandler:(/*^block*/id)arg3 ;
-(id)_moveToEndOfWord:(char)arg1 withHistory:(id)arg2 ;
-(id)_moveToEndOfLine:(char)arg1 withHistory:(id)arg2 ;
-(id)_moveRight:(char)arg1 withHistory:(id)arg2 ;
-(id)_moveToStartOfWord:(char)arg1 withHistory:(id)arg2 ;
-(id)_moveToStartOfLine:(char)arg1 withHistory:(id)arg2 ;
-(id)_moveLeft:(char)arg1 withHistory:(id)arg2 ;
-(id)_moveToEndOfParagraph:(char)arg1 withHistory:(id)arg2 ;
-(id)_moveToEndOfDocument:(char)arg1 withHistory:(id)arg2 ;
-(id)_moveDown:(char)arg1 withHistory:(id)arg2 ;
-(id)_moveToStartOfParagraph:(char)arg1 withHistory:(id)arg2 ;
-(id)_moveToStartOfDocument:(char)arg1 withHistory:(id)arg2 ;
-(id)_moveUp:(char)arg1 withHistory:(id)arg2 ;
-(unsigned long)_characterBeforeCaretSelection;
-(unsigned long)_characterInRelationToCaretSelection:(int)arg1 ;
-(char)_selectionAtDocumentStart;
-(unsigned short)characterBeforeCaretSelection;
-(id)nextUnperturbedDictationResultBoundaryFromPosition:(id)arg1 ;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(void)_resetShowingTextStyle:(id)arg1 ;
-(void)_unregisterPreview;
-(void)_registerPreview;
-(void)setSelectedDOMRange:(id)arg1 affinityDownstream:(char)arg2 ;
-(void)fileUploadPanelDidDismiss:(id)arg1 ;
-(id)webSelectionAssistant;
-(void)useSelectionAssistantWithMode:(int)arg1 ;
-(void)_showDataDetectorsSheet;
-(void)_showLinkSheet;
-(void)_singleTapRecognized:(id)arg1 ;
-(void)_doubleTapRecognized:(id)arg1 ;
-(void)_twoFingerDoubleTapRecognized:(id)arg1 ;
-(void)_highlightLongPressRecognized:(id)arg1 ;
-(void)_longPressRecognized:(id)arg1 ;
-(void)_showImageSheet;
-(char)gestureRecognizer:(id)arg1 canBePreventedByGestureRecognizer:(id)arg2 ;
-(char)shouldIgnoreWebTouch;
-(char)isAnyTouchOverActiveArea:(id)arg1 ;
-(void)accessoryDone;
-(id)wordContainingCaretSelection;
-(void)_updateForScreen:(id)arg1 ;
-(WebPageProxy*)page;
-(void)accessoryTab:(char)arg1 ;
-(void)accessoryAutoFill;
-(void)accessoryClear;
-(void)_startAssistingKeyboard;
-(void)_stopAssistingKeyboard;
-(void)_webTouchEventsRecognized:(id)arg1 ;
-(void)_nextAccessoryTab:(id)arg1 ;
-(void)_prevAccessoryTab:(id)arg1 ;
-(void)_displayFormNodeInputView;
-(void)_updateAccessory;
-(void)_applicationWillResignActive:(id)arg1 ;
-(void)_applicationDidBecomeActive:(id)arg1 ;
-(void)setMarkedText:(id)arg1 ;
-(void)actionSheetAssistant:(id)arg1 performAction:(int)arg2 ;
-(void)actionSheetAssistant:(id)arg1 openElementAtLocation:(CGPoint)arg2 ;
-(unique_ptr<WebKit::DrawingAreaProxy, std::__1::default_delete<WebKit::DrawingAreaProxy> >*)_createDrawingAreaProxy;
-(char)isBackground;
-(void)_processDidExit;
-(void)_didRelaunchProcess;
-(void)_didCommitLoadForMainFrame;
-(void)_setAccessibilityWebProcessToken:(id)arg1 ;
-(char)_interpretKeyEvent:(id)arg1 isCharEvent:(char)arg2 ;
-(void)_positionInformationDidChange:(const InteractionInformationAtPosition*)arg1 ;
-(void)_didHandleKeyEvent:(id)arg1 ;
-(void)_webTouchEvent:(const NativeWebTouchEvent*)arg1 preventsNativeGestures:(char)arg2 ;
-(void)_setAcceleratedCompositingRootView:(id)arg1 ;
-(void)_commitPotentialTapFailed;
-(void)_didGetTapHighlightForRequest:(unsigned long long)arg1 color:(const Color*)arg2 quads:(const Vector<WebCore::FloatQuad, 0, WTF::CrashOnOverflow, 16>*)arg3 topLeftRadius:(const IntSize*)arg4 topRightRadius:(const IntSize*)arg5 bottomLeftRadius:(const IntSize*)arg6 bottomRightRadius:(const IntSize*)arg7 ;
-(void)_didCommitLayerTree:(const RemoteLayerTreeTransaction*)arg1 ;
-(void)_startAssistingNode:(const AssistedNodeInformation*)arg1 userIsInteracting:(char)arg2 blurPreviousNode:(char)arg3 userObject:(id)arg4 ;
-(char)isAssistingNode;
-(void)_stopAssistingNode;
-(void)_didUpdateBlockSelectionWithTouch:(int)arg1 withFlags:(int)arg2 growThreshold:(float)arg3 shrinkThreshold:(float)arg4 ;
-(void)_showPlaybackTargetPicker:(char)arg1 fromRect:(const IntRect*)arg2 ;
-(void)_showRunOpenPanel:(WebOpenPanelParametersRef)arg1 resultListener:(WebOpenPanelResultListenerProxyRef)arg2 ;
-(void)_showInspectorHighlight:(const Highlight*)arg1 ;
-(void)_hideInspectorHighlight;
-(void)_enableInspectorNodeSearch;
-(void)_disableInspectorNodeSearch;
-(char)_zoomToRect:(CGRect)arg1 withOrigin:(CGPoint)arg2 fitEntireRect:(char)arg3 minimumScale:(double)arg4 maximumScale:(double)arg5 minimumScrollDistance:(float)arg6 ;
-(void)scrollViewWillStartPanOrPinchGesture;
-(void)_overflowScrollingWillBegin;
-(void)_overflowScrollingDidEnd;
-(void)_zoomOutWithOrigin:(CGPoint)arg1 ;
-(const InteractionInformationAtPosition*)positionInformationForActionSheetAssistant:(id)arg1 ;
-(void)updatePositionInformationForActionSheetAssistant:(id)arg1 ;
-(void)actionSheetAssistant:(id)arg1 willStartInteractionWithElement:(id)arg2 ;
-(RetainPtr<NSArray>*)actionSheetAssistant:(id)arg1 decideActionsForElement:(id)arg2 defaultActions:(RetainPtr<NSArray>*)arg3 ;
-(char)actionSheetAssistant:(id)arg1 shouldIncludeAppLinkActionsForElement:(id)arg2 ;
-(void)actionSheetAssistantDidStopInteraction:(id)arg1 ;
-(OpaqueWKPageRef)_pageRef;
-(void)setupInteraction;
-(id)_commonInitializationWithProcessPool:(WebProcessPool*)arg1 configuration:(WebPageConfiguration*)arg2 ;
-(void)cleanupInteraction;
-(void)_windowDidMoveToScreenNotification:(id)arg1 ;
-(void)updateFixedClippingView:(FloatRect)arg1 ;
-(void)_didEndScrollingOrZooming;
-(void)_accessibilityRegisterUIProcessTokens;
-(void)_updateChangedSelection;
-(void)_zoomToFocusRect:(CGRect)arg1 selectionRect:(CGRect)arg2 fontSize:(float)arg3 minimumScale:(double)arg4 maximumScale:(double)arg5 allowScaling:(char)arg6 forceScroll:(char)arg7 ;
-(id)initWithFrame:(CGRect)arg1 processPool:(WebProcessPool*)arg2 configuration:(WebPageConfiguration*)arg3 webView:(id)arg4 ;
-(id)initWithFrame:(CGRect)arg1 processPool:(WebProcessPool*)arg2 configuration:(WebPageConfiguration*)arg3 wkView:(id)arg4 ;
-(WKBrowsingContextController *)browsingContextController;
-(char)isShowingInspectorIndication;
-(void)didUpdateVisibleRect:(CGRect)arg1 unobscuredRect:(CGRect)arg2 unobscuredRectInScrollViewCoordinates:(CGRect)arg3 scale:(float)arg4 minimumScale:(float)arg5 inStableState:(char)arg6 isChangingObscuredInsetsInteractively:(char)arg7 ;
-(void)didFinishScrolling;
-(void)didInterruptScrolling;
-(void)willStartZoomOrScroll;
-(void)didZoomToScale:(float)arg1 ;
-(char)_scrollToRect:(CGRect)arg1 withOrigin:(CGPoint)arg2 minimumScrollDistance:(float)arg3 ;
-(UIWebFormAccessory *)formAccessoryView;
-(void)_singleTapCommited:(id)arg1 ;
-(void)_singleTapDidReset:(id)arg1 ;
-(void)_cancelInteraction;
-(void)_updateChangedSelection:(char)arg1 ;
-(void)_updateTapHighlight;
-(void)_removeDefaultGestureRecognizers;
-(void)_inspectorNodeSearchRecognized:(id)arg1 ;
-(void)_addDefaultGestureRecognizers;
-(void)_showTapHighlight;
-(char)requiresAccessoryView;
-(SEL)_actionForLongPress;
-(void)ensurePositionInformationIsUpToDate:(CGPoint)arg1 ;
-(void)_attemptClickAtLocation:(CGPoint)arg1 ;
-(void)_finishInteraction;
-(void)_arrowKey:(id)arg1 ;
-(void)_reanalyze:(id)arg1 ;
-(void)executeEditCommandWithCallback:(id)arg1 ;
-(const InteractionInformationAtPosition*)positionInformation;
-(CGPoint)lastInteractionLocation;
-(void)_showDictionary:(id)arg1 ;
-(void)accessibilityRetrieveSpeakSelectionContent;
-(const WKAutoCorrectionData*)autocorrectionData;
-(void)_becomeFirstResponderWithSelectionMovingForward:(char)arg1 completionHandler:(/*^block*/id)arg2 ;
-(CGRect)rectForNSRange:(NSRange)arg1 ;
-(NSRange)_markedTextNSRange;
-(CGRect)rectContainingCaretSelection;
-(const AssistedNodeInformation*)assistedNodeInformation;
-(Vector<WebKit::OptionItem, 0, WTF::CrashOnOverflow, 16>*)assistedNodeSelectOptions;
-(void)_applicationWillEnterForeground;
-(void)setShowingInspectorIndication:(char)arg1 ;
-(void)_selectionChanged;
-(id)wordRangeContainingCaretSelection;
-(void)moveBackward:(unsigned)arg1 ;
-(void)moveForward:(unsigned)arg1 ;
-(id)previousUnperturbedDictationResultBoundaryFromPosition:(id)arg1 ;
-(void)_willStartScrollingOrZooming;
@end

