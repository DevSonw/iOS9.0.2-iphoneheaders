/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 6, 2015 at 2:30:47 PM Japan Standard Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <MediaPlayer/MediaPlayer-Structs.h>
#import <libobjc.A.dylib/NSCopying.h>
#import <libobjc.A.dylib/NSSecureCoding.h>

@class NSDictionary, NSArray, MPUContentItemIdentifierCollection, NSString, MPStoreArtworkRequestToken, NSDate;

@interface MPStoreItemMetadata : NSObject <NSCopying, NSSecureCoding> {

	NSDictionary* _downloadAssetDictionary;
	NSDictionary* _downloadMetadataDictionary;
	char _hasOverrideChildStorePlatformDictionaries;
	NSArray* _overrideChildStorePlatformDictionaries;
	MPStoreItemMetadata* _parentStoreItemMetadata;
	NSDictionary* _storePlatformDictionary;

}

@property (nonatomic,copy,readonly) MPUContentItemIdentifierCollection * contentItemIdentifierCollection; 
@property (nonatomic,copy,readonly) NSString * artistName; 
@property (nonatomic,readonly) MPStoreArtworkRequestToken * artworkRequestToken; 
@property (nonatomic,copy,readonly) id artistStoreID; 
@property (nonatomic,copy,readonly) NSArray * artworkTrackIDs; 
@property (nonatomic,copy,readonly) NSArray * childrenStoreIDs; 
@property (nonatomic,copy,readonly) NSString * collectionName; 
@property (nonatomic,copy,readonly) id collectionStoreID; 
@property (nonatomic,copy,readonly) NSString * copyrightText; 
@property (nonatomic,copy,readonly) NSString * curatorName; 
@property (nonatomic,readonly) unsigned discCount; 
@property (nonatomic,readonly) unsigned discNumber; 
@property (nonatomic,readonly) double duration; 
@property (nonatomic,copy,readonly) NSString * editorNotes; 
@property (nonatomic,copy,readonly) NSDictionary * effectiveStorePlatformDictionary; 
@property (getter=isExplicitContent,nonatomic,readonly) char explicitContent; 
@property (nonatomic,copy,readonly) NSArray * genreNames; 
@property (nonatomic,readonly) char isPreorder; 
@property (nonatomic,copy,readonly) NSString * itemKind; 
@property (nonatomic,readonly) MPStoreArtworkRequestToken * latestAlbumArtworkRequestToken; 
@property (nonatomic,copy,readonly) NSString * name; 
@property (nonatomic,copy,readonly) NSArray * offers; 
@property (nonatomic,copy,readonly) NSDate * releaseDate; 
@property (nonatomic,copy,readonly) id storeID; 
@property (nonatomic,readonly) unsigned trackCount; 
@property (nonatomic,readonly) unsigned trackNumber; 
+(char)supportsSecureCoding;
-(MPUContentItemIdentifierCollection *)contentItemIdentifierCollection;
-(id)artistStoreID;
-(unsigned)discNumber;
-(unsigned)discCount;
-(NSString *)copyrightText;
-(id)initWithStorePlatformDictionary:(id)arg1 ;
-(id)artworkRequestTokenForStorePlatformDictionary:(id)arg1 ;
-(MPStoreArtworkRequestToken *)artworkRequestToken;
-(id)collectionStoreID;
-(NSString *)curatorName;
-(NSString *)editorNotes;
-(NSArray *)genreNames;
-(char)isExplicitContent;
-(char)isCompilation;
-(char)isMasteredForITunes;
-(char)isPreorder;
-(NSDate *)releaseDate;
-(id)_storePlatformDateFormatter;
-(unsigned)trackCount;
-(unsigned)trackNumber;
-(id)_artworkRequestTokenForStorePlatformDictionary:(id)arg1 artworkKey:(id)arg2 ;
-(id)initWithDownloadAssetDictionary:(id)arg1 ;
-(id)initWithStorePlatformDictionary:(id)arg1 parentStoreItemMetadata:(id)arg2 ;
-(NSArray *)artworkTrackIDs;
-(NSArray *)childrenStoreIDs;
-(NSDictionary *)effectiveStorePlatformDictionary;
-(MPStoreArtworkRequestToken *)latestAlbumArtworkRequestToken;
-(id)artworkRequestTokenForEditorialArtworkKind:(id)arg1 ;
-(id)childStorePlatformDictionaryForArtworkTrackID:(id)arg1 ;
-(id)childStorePlatformDictionaryForStoreID:(id)arg1 ;
-(id)metadataWithChildStorePlatformDictionaries:(id)arg1 ;
-(id)metadataWithParentMetadata:(id)arg1 ;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(id)description;
-(double)duration;
-(NSString *)name;
-(id)copyWithZone:(NSZone*)arg1 ;
-(NSString *)itemKind;
-(NSString *)artistName;
-(NSString *)collectionName;
-(NSArray *)offers;
-(id)storeID;
@end

