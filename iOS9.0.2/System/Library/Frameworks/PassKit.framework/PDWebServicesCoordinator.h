/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 6, 2015 at 2:37:06 PM Japan Standard Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /System/Library/Frameworks/PassKit.framework/passd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <passd/PDNetworkTaskDelegate.h>
#import <passd/PDDatabaseManagerWebServicesDelegate.h>
#import <passd/PDPushNotificationConsumer.h>

@protocol PDWebServicesCoordinatorDelegate;
@class NSSet, PDCardFileManager, PDDatabaseManager, PDPushNotificationManager, PDNetworkTaskManager, NSMutableDictionary, NSString;

@interface PDWebServicesCoordinator : NSObject <PDNetworkTaskDelegate, PDDatabaseManagerWebServicesDelegate, PDPushNotificationConsumer> {

	id<PDWebServicesCoordinatorDelegate> _delegate;
	NSSet* _pushTopics;
	PDCardFileManager* _cardFileManager;
	PDDatabaseManager* _databaseManager;
	PDPushNotificationManager* _pushNotificationManager;
	PDNetworkTaskManager* _taskManager;
	NSMutableDictionary* _taskToHandlerMap;

}

@property (nonatomic,readonly) PDDatabaseManager * databaseManager;              //@synthesize databaseManager=_databaseManager - In the implementation block
@property (nonatomic,readonly) PDNetworkTaskManager * taskManager;               //@synthesize taskManager=_taskManager - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(void)initializeConfigurationDefaults;
+(void)initialize;
-(id)initWithPushNotificationManager:(id)arg1 databaseManager:(id)arg2 cardFileManager:(id)arg3 delegate:(id)arg4 ;
-(void)nukeTasks;
-(void)updateCardWithUniqueID:(id)arg1 handler:(/*^block*/id)arg2 ;
-(id)pushNotificationTopics;
-(void)handlePushNotificationForTopic:(id)arg1 ;
-(void)applyPushNotificationToken:(id)arg1 ;
-(PDDatabaseManager *)databaseManager;
-(void)_invokeAndClearHandlerForTask:(id)arg1 withResult:(char)arg2 ;
-(void)_recalculatePushTopics;
-(void)task:(id)arg1 gotResult:(id)arg2 ;
-(void)task:(id)arg1 willRetryAfterMinimumDelay:(double)arg2 ;
-(void)taskSucceeded:(id)arg1 ;
-(void)taskFailed:(id)arg1 ;
-(void)task:(id)arg1 encounteredError:(id)arg2 ;
-(void)task:(id)arg1 encounteredWarnings:(id)arg2 ;
-(void)handleInsertion:(id)arg1 authToken:(id)arg2 webService:(id)arg3 pushEnabled:(char)arg4 source:(int)arg5 ;
-(void)handleModification:(id)arg1 webService:(id)arg2 pushEnabled:(char)arg3 source:(int)arg4 ;
-(void)handleDeletion:(id)arg1 authToken:(id)arg2 webService:(id)arg3 pushEnabled:(char)arg4 ;
-(void)handlePushEnabled:(id)arg1 authToken:(id)arg2 webService:(id)arg3 ;
-(void)handlePushDisabled:(id)arg1 authToken:(id)arg2 webService:(id)arg3 ;
-(void)_updatePassTypeID:(id)arg1 ;
-(void)_cancelAllTasksForPassTypeID:(id)arg1 serialNumber:(id)arg2 ;
-(void)_registerWithSerialNumber:(id)arg1 authToken:(id)arg2 webService:(id)arg3 ;
-(void)_cancelAutomaticUpdateTasksForPassTypeID:(id)arg1 serialNumber:(id)arg2 ;
-(void)_cancelWhatChangedTasksForPassTypeID:(id)arg1 ;
-(void)adjustStateForIncomingPushNotification:(id)arg1 andComputeNextUpdateDate:(id*)arg2 ;
-(void)_scheduleUpdateForPassTypeID:(id)arg1 afterDate:(id)arg2 ;
-(void)_getSerialNumbersTask:(id)arg1 gotResult:(id)arg2 ;
-(void)_getPassTask:(id)arg1 gotResult:(id)arg2 ;
-(void)_registrationTaskSucceeded:(id)arg1 ;
-(void)_whatChangedTaskSucceeded:(id)arg1 ;
-(void)reportAbandonedTask:(id)arg1 passTypeID:(id)arg2 ;
-(void)reportError:(id)arg1 webService:(id)arg2 logToService:(char)arg3 ;
-(void)reportWarnings:(id)arg1 webService:(id)arg2 logToService:(char)arg3 ;
-(void)reportPushWithNoSerialNumbersFromTasks:(id)arg1 ;
-(void)reportMissingTagWithRequestedSerialNumbers:(id)arg1 forWebService:(id)arg2 ;
-(void)reportUnmodifiedTag:(id)arg1 withRequestedSerialNumbers:(id)arg2 forWebService:(id)arg3 ;
-(void)reportUpdateRequestForNonPushEnabledSerialNumber:(id)arg1 forWebService:(id)arg2 ;
-(void)reportUnchangedPassForServerRequestedUpdateTask:(id)arg1 ;
-(void)reportIgnoredIfModifiedSince:(id)arg1 forSerialNumber:(id)arg2 webService:(id)arg3 ;
-(void)reportMissingLastModifiedForSerialNumber:(id)arg1 webService:(id)arg2 ;
-(double)_zeroIntervalForPassTypeID:(id)arg1 ;
-(double)_updatedFrequencyScoreForScore:(double)arg1 lastPushDate:(id)arg2 zeroInterval:(double)arg3 ;
-(int)_rateLimitLevelForFrequencyScore:(double)arg1 ;
-(void)reportPushRateLimitLevel:(int)arg1 forPassTypeID:(id)arg2 ;
-(void)_presentUnregistrationAlertForPassTypeID:(id)arg1 ;
-(id)_nextUpdateDateWithLastUpdateDate:(id)arg1 rateLimitLevel:(int)arg2 ;
-(void)_aggdLogTaskErrorCode:(int)arg1 passTypeID:(id)arg2 ;
-(void)_aggdLogWebServiceErrorCode:(int)arg1 passTypeID:(id)arg2 ;
-(id)_userNotificationParametersForPassTypeID:(id)arg1 ;
-(void)resetPushFrequencyStateForPassTypeID:(id)arg1 ;
-(void)_unregisterPassesOfType:(id)arg1 ;
-(void)_aggdLogTaskWarningCode:(int)arg1 passTypeID:(id)arg2 ;
-(void)dealloc;
-(void)connect;
-(PDNetworkTaskManager *)taskManager;
@end

