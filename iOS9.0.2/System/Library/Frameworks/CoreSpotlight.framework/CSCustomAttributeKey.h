/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 6, 2015 at 2:30:29 PM Japan Standard Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /System/Library/Frameworks/CoreSpotlight.framework/CoreSpotlight
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <CoreSpotlight/CoreSpotlight-Structs.h>
#import <libobjc.A.dylib/NSCopying.h>
#import <libobjc.A.dylib/NSSecureCoding.h>

@class NSString;

@interface CSCustomAttributeKey : NSObject <NSCopying, NSSecureCoding> {

	char _searchable;
	char _searchableByDefault;
	char _unique;
	char _multiValued;
	NSString* _keyName;

}

@property (retain) NSString * keyName;                                          //@synthesize keyName=_keyName - In the implementation block
@property (getter=isSearchable) char searchable;                                //@synthesize searchable=_searchable - In the implementation block
@property (getter=isSearchableByDefault) char searchableByDefault;              //@synthesize searchableByDefault=_searchableByDefault - In the implementation block
@property (getter=isUnique) char unique;                                        //@synthesize unique=_unique - In the implementation block
@property (getter=isMultiValued) char multiValued;                              //@synthesize multiValued=_multiValued - In the implementation block
+(char)_keyNameIsValid:(id)arg1 ;
+(char)supportsSecureCoding;
-(id)initWithKeyName:(id)arg1 searchable:(char)arg2 searchableByDefault:(char)arg3 unique:(char)arg4 multiValued:(char)arg5 ;
-(void)setKeyName:(NSString *)arg1 ;
-(void)setSearchable:(char)arg1 ;
-(void)setSearchableByDefault:(char)arg1 ;
-(void)setUnique:(char)arg1 ;
-(void)setMultiValued:(char)arg1 ;
-(NSString *)keyName;
-(char)isSearchableByDefault;
-(char)isMultiValued;
-(id)initWithKeyName:(id)arg1 ;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(char)isEqual:(id)arg1 ;
-(unsigned)hash;
-(id)description;
-(id)copyWithZone:(NSZone*)arg1 ;
-(char)isSearchable;
-(char)isUnique;
@end

