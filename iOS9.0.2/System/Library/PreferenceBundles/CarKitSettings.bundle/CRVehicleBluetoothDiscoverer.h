/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 6, 2015 at 2:08:12 PM Japan Standard Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /System/Library/PreferenceBundles/CarKitSettings.bundle/CarKitSettings
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


@protocol CRVehicleBluetoothDiscovery;
@class NSMutableDictionary, CRBluetoothPairingPrompt, CRBluetoothSyncContactsPrompt, NSSet;

@interface CRVehicleBluetoothDiscoverer : NSObject {

	char _isPairing;
	id<CRVehicleBluetoothDiscovery> _bluetoothDiscoveryDelegate;
	NSMutableDictionary* _deviceForAddress;
	CRBluetoothPairingPrompt* _outstandingPairingPrompt;
	CRBluetoothSyncContactsPrompt* _outstandingContactsPrompt;

}

@property (assign,nonatomic,__weak) id<CRVehicleBluetoothDiscovery> bluetoothDiscoveryDelegate;              //@synthesize bluetoothDiscoveryDelegate=_bluetoothDiscoveryDelegate - In the implementation block
@property (nonatomic,copy,readonly) NSSet * discoveredBluetoothDevices; 
@property (nonatomic,retain) NSMutableDictionary * deviceForAddress;                                         //@synthesize deviceForAddress=_deviceForAddress - In the implementation block
@property (nonatomic,retain) CRBluetoothPairingPrompt * outstandingPairingPrompt;                            //@synthesize outstandingPairingPrompt=_outstandingPairingPrompt - In the implementation block
@property (nonatomic,retain) CRBluetoothSyncContactsPrompt * outstandingContactsPrompt;                      //@synthesize outstandingContactsPrompt=_outstandingContactsPrompt - In the implementation block
@property (assign,nonatomic) char isPairing;                                                                 //@synthesize isPairing=_isPairing - In the implementation block
-(void)setIsPairing:(char)arg1 ;
-(void)startDiscovery;
-(char)isPairing;
-(void)stopDiscovery;
-(void)setDeviceForAddress:(NSMutableDictionary *)arg1 ;
-(void)devicePairingFailureHandler:(id)arg1 ;
-(void)devicePairingSuccessHandler:(id)arg1 ;
-(void)deviceAuthenticationRequestHandler:(id)arg1 ;
-(void)_allowBluetoothConnections:(char)arg1 ;
-(id<CRVehicleBluetoothDiscovery>)bluetoothDiscoveryDelegate;
-(NSMutableDictionary *)deviceForAddress;
-(char)_supportsCarPlay:(id)arg1 ;
-(void)handleUpdatedVehicle:(id)arg1 ;
-(id)_vehicleDeviceFromBluetoothDevice:(id)arg1 ;
-(void)handleDiscoveredVehicle:(id)arg1 ;
-(void)handleRemovedVehicle:(id)arg1 ;
-(void)_handleUpdatedDevice:(id)arg1 ;
-(void)_presentPairingFailedForDevice:(id)arg1 ;
-(void)_saveVehicleForDevice:(id)arg1 ;
-(void)setOutstandingPairingPrompt:(CRBluetoothPairingPrompt *)arg1 ;
-(void)setOutstandingContactsPrompt:(CRBluetoothSyncContactsPrompt *)arg1 ;
-(CRBluetoothPairingPrompt *)outstandingPairingPrompt;
-(CRBluetoothSyncContactsPrompt *)outstandingContactsPrompt;
-(void)setBluetoothDiscoveryDelegate:(id<CRVehicleBluetoothDiscovery>)arg1 ;
-(char)pairBluetoothDevice:(id)arg1 ;
-(NSSet *)discoveredBluetoothDevices;
-(void)_handleRemovedDevice:(id)arg1 ;
-(id)_presentingViewController;
-(void)dealloc;
-(id)init;
-(void)deviceDiscoveredHandler:(id)arg1 ;
-(void)deviceUpdatedHandler:(id)arg1 ;
-(void)deviceRemovedHandler:(id)arg1 ;
-(void)deviceUnpairedHandler:(id)arg1 ;
-(void)deviceConnectedHandler:(id)arg1 ;
-(void)deviceDisconnectedHandler:(id)arg1 ;
@end

