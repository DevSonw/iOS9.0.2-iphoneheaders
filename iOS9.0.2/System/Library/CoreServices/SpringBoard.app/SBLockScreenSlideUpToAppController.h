/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 6, 2015 at 2:36:29 PM Japan Standard Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /System/Library/CoreServices/SpringBoard.app/SpringBoard
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <SpringBoard/SpringBoard-Structs.h>
#import <SpringBoard/SBPresentingDelegate.h>
#import <libobjc.A.dylib/SBUIPasscodeLockViewDelegate.h>
#import <libobjc.A.dylib/BSTransactionObserver.h>
#import <SpringBoard/SBCoordinatedPresenting.h>

@protocol SBPresentingDelegate, SBLockScreenSlideUpToAppControllerDelegate;
@class UIView, SBLockScreenView, SBLockScreenBounceAnimator, _UIDynamicValueAnimation, SBBounceSettings, SBApplication, SBBestAppSuggestion, NSURL, UIImage, SBAppStatusBarSettingsAssertion, BBObserver, NSMutableArray, SBPasscodeLockDisableAssertion, SBUIPasscodeViewWithLockScreenStyle, SBLockScreenSlideUpToAppWorkspaceTransaction, SBDisableAppStatusBarAlphaChangesAssertion, NSString, NSSet;

@interface SBLockScreenSlideUpToAppController : NSObject <SBPresentingDelegate, SBUIPasscodeLockViewDelegate, BSTransactionObserver, SBCoordinatedPresenting> {

	char _isInScreenOffMode;
	UIView* _slidingStatusBarView;
	SBLockScreenView* _lockScreenView;
	char _currentlySliding;
	SBLockScreenBounceAnimator* _bounceAnimator;
	_UIDynamicValueAnimation* _dynamicAnimation;
	id<SBPresentingDelegate> _presentingDelegate;
	SBBounceSettings* _bounceSettings;
	SBApplication* _targetApp;
	SBBestAppSuggestion* _targetAppInfo;
	char _targetAppIsSiri;
	char _targetAppIsInCallService;
	char _deactivatingForInCallService;
	char _appSuggestionWasInvoked;
	NSURL* _targetURL;
	UIImage* _grabberImage;
	SBAppStatusBarSettingsAssertion* _hideStatusBarAssertion;
	BBObserver* _bulletinObserver;
	char _attemptingUnlock;
	char _showingPasscodeView;
	char _dismissingPasscodeView;
	char _defaultImagesNeedUpdateUponPasscodeExit;
	NSMutableArray* _deferredAppUpdateBlocks;
	char _executingDeferredAppUpdateBlocks;
	char _waitingToDeactivateForActivityLaunch;
	/*^block*/id _preUIUnlockActions;
	SBPasscodeLockDisableAssertion* _passcodeDisableAssertionForContinuityUnlock;
	UIView* _clippingView;
	UIView* _appDefaultImageView;
	UIView* _appBackgroundView;
	SBUIPasscodeViewWithLockScreenStyle* _passcodeView;
	UIView* _passcodeOverscrollView;
	SBLockScreenSlideUpToAppWorkspaceTransaction* _slideUpTransaction;
	char _disablingOcclusionsForTargetApp;
	char _launchingAppFromNonOccludedState;
	id<SBLockScreenSlideUpToAppControllerDelegate> _delegate;
	char _didAbortBounce;
	SBDisableAppStatusBarAlphaChangesAssertion* _disableStatusBarAssertion;
	float _boundaryTranslationInY;

}

@property (assign,nonatomic) id<SBLockScreenSlideUpToAppControllerDelegate> delegate;                             //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,retain) SBDisableAppStatusBarAlphaChangesAssertion * disableStatusBarAssertion;              //@synthesize disableStatusBarAssertion=_disableStatusBarAssertion - In the implementation block
@property (assign,nonatomic) char didAbortBounce;                                                                 //@synthesize didAbortBounce=_didAbortBounce - In the implementation block
@property (assign,nonatomic) float boundaryTranslationInY;                                                        //@synthesize boundaryTranslationInY=_boundaryTranslationInY - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) int coordinatedPresentingControllerIdentifier; 
@property (nonatomic,readonly) float hintDisplacement; 
@property (nonatomic,readonly) unsigned hintEdge; 
@property (assign,nonatomic) id<SBPresentingDelegate> presentingDelegate; 
@property (nonatomic,readonly) NSSet * gestures; 
@property (nonatomic,readonly) NSSet * conflictingGestures; 
@property (nonatomic,readonly) NSSet * tapExcludedViews; 
-(void)updateTransitionWithTouchLocation:(CGPoint)arg1 velocity:(CGPoint)arg2 ;
-(void)endTransitionWithVelocity:(CGPoint)arg1 wasCancelled:(char)arg2 completion:(/*^block*/id)arg3 ;
-(void)beginPresentationWithTouchLocation:(CGPoint)arg1 presentationBegunHandler:(/*^block*/id)arg2 ;
-(void)setInScreenOffMode:(char)arg1 ;
-(id)lockScreenView;
-(char)presentingController:(id)arg1 gestureRecognizerShouldBegin:(id)arg2 ;
-(void)presentingControllerDidFinishPresentation:(id)arg1 ;
-(NSSet *)gestures;
-(NSSet *)tapExcludedViews;
-(void)cancelGestureRecognizer:(id)arg1 ;
-(void)reenableGestureRecognizer:(id)arg1 ;
-(char)presentingController:(id)arg1 gestureRecognizer:(id)arg2 shouldReceiveTouch:(id)arg3 ;
-(void)presentingController:(id)arg1 willHandleGesture:(id)arg2 ;
-(char)isPresentingControllerTransitioning;
-(void)abortAnimatedTransition;
-(void)treatCurrentPositionAsBoundaryforGesture:(id)arg1 ;
-(int)coordinatedPresentingControllerIdentifier;
-(float)hintDisplacement;
-(unsigned)hintEdge;
-(void)_passcodeLockStateChanged;
-(void)_deviceBlockedStateChanged:(id)arg1 ;
-(void)setLockScreenView:(id)arg1 force:(char)arg2 ;
-(void)performGeneralCleanupForUserAction:(char)arg1 ;
-(void)_setupBounceAnimatorAndGrabberView;
-(void)_addOrRemovePasscodeViewIfNecessary;
-(void)_clearAppDefaultImageAndRemoveFromSuperview:(char)arg1 ;
-(id)_newBounceAnimatorWithGrabberView:(id)arg1 ;
-(void)setGrabberOnLockScreen:(id)arg1 ;
-(void)abortDynamicAnimationForScreenOff;
-(void)translateSlidingViewByY:(float)arg1 ;
-(void)_cleanupFromDismissal;
-(void)_cleanupBackgroundLaunchNonsense;
-(void)hideSlidingStatusBar;
-(id)_lockScreenViewFakeStatusBar;
-(void)_commonGestureCleanup;
-(void)_handleAppLaunchedUnderLockScreenWithResult:(int)arg1 ;
-(void)_executeDeferredAppUpdateBlocks;
-(void)_finishSlideDownWithCompletion:(/*^block*/id)arg1 ;
-(id)_newDynamicAnimationForTargetValue:(double)arg1 withInitialVelocity:(double)arg2 ;
-(void)finalizeGesture;
-(void)_activateApp:(id)arg1 withAppInfo:(id)arg2 andURL:(id)arg3 animated:(char)arg4 ;
-(void)activateTargetApp;
-(void)setDisableStatusBarAssertion:(SBDisableAppStatusBarAlphaChangesAssertion *)arg1 ;
-(void)prepareForSlideUpAnimation;
-(void)setTargetApp:(id)arg1 withAppSuggestion:(id)arg2 ;
-(float)_foregroundTranslationForLocation:(CGPoint)arg1 ;
-(void)_animateSlideUpWithVelocity:(CGPoint)arg1 completion:(/*^block*/id)arg2 ;
-(void)_animateSlideDownWithVelocity:(CGPoint)arg1 completion:(/*^block*/id)arg2 ;
-(float)boundaryTranslationInY;
-(void)setBoundaryTranslationInY:(float)arg1 ;
-(void)setGrabberViewImage:(id)arg1 ;
-(char)wantsToShowStatusBar;
-(char)hasActiveUnlockActionContext;
-(char)isShowingPasscodeView;
-(id)bounceAnimator;
-(SBDisableAppStatusBarAlphaChangesAssertion *)disableStatusBarAssertion;
-(char)didAbortBounce;
-(void)setDidAbortBounce:(char)arg1 ;
-(id)_createGrabberView;
-(void)presentTargetAppAnimated:(char)arg1 ;
-(id<SBPresentingDelegate>)presentingDelegate;
-(void)setPresentingDelegate:(id<SBPresentingDelegate>)arg1 ;
-(void)setDelegate:(id<SBLockScreenSlideUpToAppControllerDelegate>)arg1 ;
-(void)dealloc;
-(id)init;
-(id<SBLockScreenSlideUpToAppControllerDelegate>)delegate;
-(void)deactivate;
-(void)willRotateToInterfaceOrientation:(int)arg1 duration:(double)arg2 ;
-(void)willAnimateRotationToInterfaceOrientation:(int)arg1 duration:(double)arg2 ;
-(void)didRotateFromInterfaceOrientation:(int)arg1 ;
-(void)activate;
-(void)passcodeLockViewPasscodeDidChange:(id)arg1 ;
-(void)passcodeLockViewPasscodeEntered:(id)arg1 ;
-(void)passcodeLockViewCancelButtonPressed:(id)arg1 ;
-(void)passcodeLockViewPasscodeEnteredViaMesa:(id)arg1 ;
-(void)transactionDidBegin:(id)arg1 ;
-(void)transactionDidComplete:(id)arg1 ;
-(void)setTargetURL:(id)arg1 ;
@end

