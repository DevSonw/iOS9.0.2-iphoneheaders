/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 6, 2015 at 2:36:21 PM Japan Standard Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /System/Library/CoreServices/AssistiveTouch.app/assistivetouchd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <assistivetouchd/assistivetouchd-Structs.h>
#import <assistivetouchd/HNDAccessibilityManagerObserver.h>

@class HNDEventManager, HNDDisplayManager, HNDAssistiveTouchServer, NSArray, HNDCustomGesture, AXDispatchTimer, HNDView, NSMutableDictionary, NSPointerArray, NSString;

@interface HNDHandManager : NSObject <HNDAccessibilityManagerObserver> {

	HNDEventManager* _eventManager;
	HNDDisplayManager* _displayManager;
	HNDAssistiveTouchServer* _assistiveTouchServer;
	int _orientation;
	char _firstButtonDown;
	char _secondButtonDown;
	CGPoint _currentLocation;
	CGPoint _pinchAdjustLocation;
	char _isMultiFinger;
	char _isRecording;
	char _finishedRecording;
	char _isInternal;
	float _touchSpeed;
	int _thirdButtonMeaning;
	char _openMenuWithSwaggle;
	char _hardwareEnabled;
	char _alwaysShowMenu;
	NSArray* _customGestures;
	HNDCustomGesture* _currentCustomGesture;
	char _performingGesture;
	AXDispatchTimer* _fingerDownTimer;
	char _fingerDownLock;
	char _fingerDownLockSawFirstUp;
	char _adjustingPinch;
	char _inMultiFingerGesture;
	char _resettingPinch;
	HNDView* _realSelectedPinchFinger;
	char _areFingersPressedDown;
	CGPoint _pressedPinchFingerStartPoint;
	CGPoint _pressedPinchFingerFulcrum;
	float _pressedPinchFingerMovementFromStart;
	NSMutableDictionary* _avPlayers;
	char _inCustomGestureMovement;
	AXDispatchTimer* _forceTouchApplicationTimer;
	float _lastOrbValue;
	char _voiceControl;
	NSPointerArray* _eventHandlers;

}

@property (assign,nonatomic) char performingGesture;                      //@synthesize performingGesture=_performingGesture - In the implementation block
@property (assign,nonatomic) float touchSpeed;                            //@synthesize touchSpeed=_touchSpeed - In the implementation block
@property (nonatomic,readonly) float touchSpeedMultiplier; 
@property (assign,nonatomic) char openMenuWithSwaggle;                    //@synthesize openMenuWithSwaggle=_openMenuWithSwaggle - In the implementation block
@property (assign,nonatomic) char alwaysShowMenu;                         //@synthesize alwaysShowMenu=_alwaysShowMenu - In the implementation block
@property (assign,nonatomic) char voiceControl;                           //@synthesize voiceControl=_voiceControl - In the implementation block
@property (assign,nonatomic) char hardwareEnabled;                        //@synthesize hardwareEnabled=_hardwareEnabled - In the implementation block
@property (nonatomic,retain) NSArray * customGestures;                    //@synthesize customGestures=_customGestures - In the implementation block
@property (nonatomic,readonly) float volumeLevel; 
@property (nonatomic,readonly) char isVoiceControlRunning; 
@property (nonatomic,retain) NSPointerArray * eventHandlers;              //@synthesize eventHandlers=_eventHandlers - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)sharedManager;
+(void)initialize;
-(void)updateAllSettings;
-(void)systemServerConnected;
-(char)hardwareEnabled;
-(float)touchSpeedMultiplier;
-(void)rotateEventToOrientation:(id)arg1 ;
-(void)hoverMoved:(CGPoint)arg1 ;
-(void)firstButtonPress:(int)arg1 ;
-(void)secondButtonPress:(int)arg1 ;
-(void)thirdButtonPress:(int)arg1 ;
-(void)performGesture:(id)arg1 ;
-(id)pointsForNumberOfFingers:(unsigned)arg1 withExistingFingerMidPoint:(CGPoint)arg2 ;
-(void)setCaptureEvents:(char)arg1 ;
-(void)setNubbitMoving:(char)arg1 ;
-(char)inPinchMode;
-(void)resetNubbitLocation;
-(void)showMenu:(char)arg1 ;
-(char)alwaysShowMenu;
-(void)moveFingersToPointInFingerCoordinateSpace:(CGPoint)arg1 allowOutOfBounds:(char)arg2 ;
-(char)canShowFingers;
-(void)specialToolUsageEnded;
-(void)resetPinch;
-(void)volumeChanged;
-(void)menuExited;
-(void)keyboardVisible:(char)arg1 withFrame:(CGRect)arg2 ;
-(void)handleRealEvent:(id)arg1 ;
-(void)orientationChanged;
-(void)_registerForSettingsNotifications;
-(void)setOpenMenuWithSwaggle:(char)arg1 ;
-(void)setTouchSpeed:(float)arg1 ;
-(void)setCustomGestures:(NSArray *)arg1 ;
-(char)_moveFingersWithoutEventsToPoints:(id)arg1 allowOutOfBounds:(char)arg2 ;
-(id)_currentFingerPointSet;
-(void)_handlePinchFingerDownWithFinger:(id)arg1 ;
-(void)_resetPinchAdjust;
-(void)_movePinchToolToPoint:(CGPoint)arg1 ;
-(void)_handleRealPinchAdjust:(CGPoint)arg1 ;
-(void)_handleRealPinchToolMove:(CGPoint)arg1 ;
-(void)_moveFingersToPoint:(CGPoint)arg1 ;
-(void)_handleRealPinchToolUp:(CGPoint)arg1 ;
-(id)_pointHolderEvents:(id)arg1 orbValue:(float)arg2 ;
-(id)pressFingersDown;
-(id)liftFingersUp;
-(void)_handleOrbPressage:(id)arg1 orbValue:(float)arg2 ;
-(void)_handleSpecialGestureStart:(CGPoint)arg1 ;
-(void)_handleSpecialGestureMove:(CGPoint)arg1 ;
-(void)_reallyPerformCustomGestureUpEvents;
-(void)_endForceTouchGesture;
-(void)_performCustomGesture;
-(char)inCustomGesture;
-(void)_handleRealCustomGestureUp:(CGPoint)arg1 ;
-(void)_handleRealMultiFingerUp:(CGPoint)arg1 ;
-(void)_handleRealCustomGestureMove:(CGPoint)arg1 ;
-(void)_handleRealMultiFingerMove:(CGPoint)arg1 ;
-(void)_handleRealPinchToolDown:(CGPoint)arg1 ;
-(void)_handleRealCustomGestureDown:(CGPoint)arg1 ;
-(void)_handleRealMultiFingerDown:(CGPoint)arg1 ;
-(void)notifyUserEventOccurred;
-(NSPointerArray *)eventHandlers;
-(char)usingSpecialTool;
-(void)_handleMultiTouchToolEvent:(id)arg1 ;
-(char)_shouldHandleRealEventWithMultiTouchTool;
-(void)performHardwareButton:(int)arg1 state:(int)arg2 ;
-(CGPoint)rotateEventFromOrientation:(CGPoint)arg1 ;
-(void)setEventHandlers:(NSPointerArray *)arg1 ;
-(void)setHardwareEnabled:(char)arg1 ;
-(void)setAlwaysShowMenu:(char)arg1 ;
-(void)_reallyPerformCustomGesture;
-(void)prepareCustomGesture:(id)arg1 ;
-(CGPoint)_eventManagerPointForGesture:(id)arg1 fingerIdentifier:(id)arg2 eventIndex:(unsigned)arg3 ;
-(CGPoint)_originPointFromMidPoint:(CGPoint)arg1 shouldConvertToOrientation:(char)arg2 ;
-(void)_replayEventAtIndex:(unsigned)arg1 inGesture:(id)arg2 allFingerIdentifiers:(id)arg3 allFingerDownLocations:(id)arg4 ;
-(char)openMenuWithSwaggle;
-(void)_resetMenuOpenTracker;
-(void)_menuOpenTracker:(CGPoint)arg1 ;
-(char)inRockerMode;
-(void)_setFingerDownLockEnabled:(char)arg1 ;
-(id)_avPlayerForSound:(id)arg1 ;
-(void)_startFingerDownTimer;
-(id)_adjustedFingersWithinBounds:(id)arg1 ;
-(void)startPinchModeWithPoint:(CGPoint)arg1 animated:(char)arg2 alpha:(float)arg3 ;
-(void)accessibilityManager:(id)arg1 didReceiveEvent:(int)arg2 ;
-(id)expandPinchByDistance:(float)arg1 ;
-(id)rotatePinchByClockwiseAngle:(float)arg1 ;
-(id)liftPinchFingerUp;
-(id)updateFingersDownWithForce:(float)arg1 ;
-(char)moveFingersToPoints:(id)arg1 ;
-(void)ringerSwitchChanged;
-(void)rotationLockChanged;
-(void)substantialTransitionOccurred;
-(void)systemServerDied;
-(char)inMultFingerMode;
-(void)mediaControlsChanged:(char)arg1 ;
-(void)screenshotWillFire;
-(void)mediaPlaybackChanged;
-(void)_handlePinchAdjust:(CGPoint)arg1 ;
-(void)addEventHandler:(id)arg1 ;
-(void)removeEventHandler:(id)arg1 ;
-(id)_pointHolderEvents:(id)arg1 ;
-(void)replayGesture:(id)arg1 ;
-(char)isCapturingRealEvents;
-(void)exitedSaveState;
-(void)handleMultiTouchStandard:(int)arg1 withExistingFingerMidPoint:(CGPoint)arg2 ;
-(void)startPinchModeWithPoint:(CGPoint)arg1 ;
-(void)endPinchMode;
-(void)performTap:(int)arg1 points:(CGPoint)arg2 ;
-(CGPoint)rotateNormalizedPointToOrientation:(CGPoint)arg1 ;
-(float)touchSpeed;
-(NSArray *)customGestures;
-(char)performingGesture;
-(void)setPerformingGesture:(char)arg1 ;
-(char)voiceControl;
-(void)setVoiceControl:(char)arg1 ;
-(void)_handleUsageConfirmation;
-(void)dealloc;
-(id)init;
-(int)deviceOrientation;
-(float)volumeLevel;
-(char)isVoiceControlRunning;
@end

