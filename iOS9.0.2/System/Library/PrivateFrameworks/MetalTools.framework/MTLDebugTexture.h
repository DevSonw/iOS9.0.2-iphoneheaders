/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 6, 2015 at 2:33:21 PM Japan Standard Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /System/Library/PrivateFrameworks/MetalTools.framework/MetalTools
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <MetalTools/MetalTools-Structs.h>
#import <MetalTools/MTLToolsTexture.h>

@class MTLTextureDescriptor;

@interface MTLDebugTexture : MTLToolsTexture {

	char _purgeableStateHasBeenSet;
	MTLTextureDescriptor* _descriptor;
	unsigned _offset;
	unsigned _bytesPerRow;
	unsigned _plane;
	unsigned _purgeableState;

}

@property (nonatomic,copy,readonly) MTLTextureDescriptor * descriptor;              //@synthesize descriptor=_descriptor - In the implementation block
@property (nonatomic,readonly) unsigned offset;                                     //@synthesize offset=_offset - In the implementation block
@property (nonatomic,readonly) unsigned bytesPerRow;                                //@synthesize bytesPerRow=_bytesPerRow - In the implementation block
@property (nonatomic,readonly) unsigned plane;                                      //@synthesize plane=_plane - In the implementation block
@property (nonatomic,readonly) unsigned purgeableState;                             //@synthesize purgeableState=_purgeableState - In the implementation block
@property (nonatomic,readonly) char purgeableStateHasBeenSet;                       //@synthesize purgeableStateHasBeenSet=_purgeableStateHasBeenSet - In the implementation block
-(unsigned)plane;
-(void)getBytes:(void*)arg1 bytesPerRow:(unsigned)arg2 bytesPerImage:(unsigned)arg3 fromRegion:(SCD_Struct_MT8)arg4 mipmapLevel:(unsigned)arg5 slice:(unsigned)arg6 options:(unsigned)arg7 ;
-(void)replaceRegion:(SCD_Struct_MT8)arg1 mipmapLevel:(unsigned)arg2 slice:(unsigned)arg3 withBytes:(const void*)arg4 bytesPerRow:(unsigned)arg5 bytesPerImage:(unsigned)arg6 options:(unsigned)arg7 ;
-(unsigned)bytesPerRow;
-(void)replaceRegion:(SCD_Struct_MT8)arg1 mipmapLevel:(unsigned)arg2 slice:(unsigned)arg3 withBytes:(const void*)arg4 bytesPerRow:(unsigned)arg5 bytesPerImage:(unsigned)arg6 ;
-(void)getBytes:(void*)arg1 bytesPerRow:(unsigned)arg2 fromRegion:(SCD_Struct_MT8)arg3 mipmapLevel:(unsigned)arg4 ;
-(void)getBytes:(void*)arg1 bytesPerRow:(unsigned)arg2 bytesPerImage:(unsigned)arg3 fromRegion:(SCD_Struct_MT8)arg4 mipmapLevel:(unsigned)arg5 slice:(unsigned)arg6 ;
-(void)replaceRegion:(SCD_Struct_MT8)arg1 mipmapLevel:(unsigned)arg2 withBytes:(const void*)arg3 bytesPerRow:(unsigned)arg4 ;
-(id)newTextureViewWithPixelFormat:(unsigned)arg1 ;
-(id)newTextureViewWithPixelFormat:(unsigned)arg1 textureType:(unsigned)arg2 levels:(NSRange)arg3 slices:(NSRange)arg4 ;
-(unsigned)setPurgeableState:(unsigned)arg1 ;
-(id)description;
-(unsigned)offset;
-(MTLTextureDescriptor *)descriptor;
-(id)initWithBaseTexture:(id)arg1 device:(id)arg2 buffer:(id)arg3 descriptor:(id)arg4 offset:(unsigned)arg5 bytesPerRow:(unsigned)arg6 ;
-(unsigned)purgeableState;
-(char)purgeableStateHasBeenSet;
-(id)initWithBaseTexture:(id)arg1 device:(id)arg2 descriptor:(id)arg3 ;
-(id)initWithBaseTexture:(id)arg1 device:(id)arg2 descriptor:(id)arg3 plane:(unsigned)arg4 ;
-(id)initWithBaseTexture:(id)arg1 device:(id)arg2 texture:(id)arg3 descriptor:(id)arg4 ;
-(id)initWithBaseTexture:(id)arg1 device:(id)arg2 texture:(id)arg3 pixelFormat:(unsigned)arg4 ;
-(id)initWithBaseTexture:(id)arg1 device:(id)arg2 texture:(id)arg3 pixelFormat:(unsigned)arg4 textureType:(unsigned)arg5 levels:(NSRange)arg6 slices:(NSRange)arg7 ;
@end

