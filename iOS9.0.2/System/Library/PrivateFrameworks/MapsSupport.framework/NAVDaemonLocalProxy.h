/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 6, 2015 at 2:38:50 PM Japan Standard Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /System/Library/PrivateFrameworks/MapsSupport.framework/navd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <GeoServices/GEONavdServerProxy.h>
#import <navd/NavdLocationObserver.h>
#import <navd/NavdRoutinePredictionsDelegate.h>

@class NSDate, GEORouteHypothesisCache, NavdLocationManager, CLLocation, NavdRoutinePredictionsManager, NSMutableArray, NSMutableDictionary, NSArray, NavdQuickActionManager, NSString;

@interface NAVDaemonLocalProxy : GEONavdServerProxy <NavdLocationObserver, NavdRoutinePredictionsDelegate> {

	NSDate* _startedListeningTime;
	GEORouteHypothesisCache* _cache;
	NavdLocationManager* _locationManager;
	CLLocation* _lastUpdatedCurrentLocation;
	double _lastLocationUpdateTimeStamp;
	CLLocation* _lastUpdatedPivotLocation;
	char _updatePivotLocation;
	NavdRoutinePredictionsManager* _routinePredictionManager;
	char _shouldPostDarwinNotificationForNextUpdate;
	int _transportTypeToRequestAccuracyFor;
	double _valueRefreshTimeStamp;
	NSMutableArray* _locationHandlers;
	NSMutableDictionary* _pendingHandlers;
	char _currentlyProcessingEntries;
	unsigned _processAllEntries;
	int _numberOfTimesRepeatedProcessing;
	int _pendingStartMonitoringRequests;
	NSArray* _suggestedDestinations;
	NSMutableDictionary* _suggestionsHandlers;
	NSMutableDictionary* _clientStartStopSynchronization;
	NavdQuickActionManager* _quickActionManager;
	NSMutableDictionary* _pendingUINotificationData;
	NSString* _launchdKeepAliveFile;

}
-(void)_getCurrentLocationWithHandler:(/*^block*/id)arg1 ;
-(void)_integratePendingUINotificationFeedback;
-(id)_prepareXPCDictionaryForTimeInterval:(double)arg1 gracePeriod:(double)arg2 delay:(double)arg3 ;
-(void)_createActivityForStaleLocationUse:(id)arg1 ;
-(void)_resetPredictionsManagerWatchdog;
-(double)_nextTimerIntervalForValue:(id)arg1 ;
-(void)staleLocationUseActivityFired:(id)arg1 ;
-(void)_processEntriesBeforeTimeStamp:(double)arg1 ;
-(void)locationRefreshActivityFired;
-(char)_isAccurateEnoughWithCurrentLocation:(id)arg1 ;
-(void)stopReceivingPredictions;
-(void)_printAllEntriesState;
-(void)_finishedProcessingPendingJobs;
-(void)nextRefreshActivityFired;
-(void)_updateValue:(id)arg1 withNewLocation:(id)arg2 successHandler:(/*^block*/id)arg3 errorHandler:(/*^block*/id)arg4 ;
-(void)_stopMonitoringRequests:(id)arg1 forClient:(id)arg2 werePredictions:(char)arg3 ;
-(void)_createActivityForLocationUpdate;
-(void)navdReceivedLocation:(id)arg1 withError:(id)arg2 ;
-(void)_updateValue:(id)arg1 withNewLocation:(id)arg2 updatedValueHandler:(/*^block*/id)arg3 ;
-(void)callLocationHandlersWithLocation:(id)arg1 ;
-(void)_startMonitoringRequest:(id)arg1 forClient:(id)arg2 isPrediction:(char)arg3 handler:(/*^block*/id)arg4 ;
-(void)predictionsManager:(id)arg1 predictedSuggestedDestinations:(id)arg2 ;
-(void)_startedProcessingPendingJobs;
-(void)startReceivingPredictions;
-(id)_navdTraits;
-(void)_createActivityForNextRefreshInTimeInterval:(double)arg1 ;
-(void)_processRowIds:(id)arg1 startingWithIndex:(unsigned)arg2 forLocation:(id)arg3 ;
-(void)_refreshCacheEntriesIfNeededOrForced:(char)arg1 ;
-(id)init;
-(void)close;
-(void)open;
-(void)forceWork;
-(void)startMonitoringSuggestionsForClient:(id)arg1 handler:(/*^block*/id)arg2 ;
-(void)forceCacheRefresh;
-(void)didPostUINotification:(unsigned)arg1 forDestination:(id)arg2 fromClient:(id)arg3 ;
-(void)forceNone;
-(void)startMonitoringDestination:(id)arg1 forClient:(id)arg2 handler:(/*^block*/id)arg3 ;
-(void)forceHome;
-(void)statusWithCallback:(/*^block*/id)arg1 ;
-(void)shouldPostDarwinNotificationForNextUpdate:(char)arg1 ;
-(void)stopMonitoringDestination:(id)arg1 forClient:(id)arg2 ;
-(void)stopMonitoringSuggestionsForClient:(id)arg1 ;
@end

