/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 6, 2015 at 2:33:29 PM Japan Standard Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /System/Library/PrivateFrameworks/NotesShared.framework/NotesShared
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <NotesShared/NotesShared-Structs.h>
#import <libobjc.A.dylib/ICDrawingInputFilter.h>

@protocol OS_dispatch_queue, ICDrawingInputControllerDelegate, OS_dispatch_semaphore;
@class NSObject, ICDrawingCommand, NSMutableDictionary, NSMutableSet, ICDrawingInputSmoother, NSString;

@interface ICDrawingInputController : NSObject <ICDrawingInputFilter> {

	vector<ICDrawingInputPoint, std::__1::allocator<ICDrawingInputPoint> >* _drawPoints;
	vector<ICDrawingOutputPoint, std::__1::allocator<ICDrawingOutputPoint> >* _drawOutputPoints;
	NSObject*<OS_dispatch_queue> _inputQueue;
	NSObject*<OS_dispatch_queue> _outputQueue;
	id<ICDrawingInputControllerDelegate> _delegate;
	ICDrawingCommand* _currentCommand;
	int _currentInputType;
	char _hasSetAngle;
	char _ended;
	float _lastStrokeRadius;
	float _inputScale;
	float _smoothingKernel[7];
	float _minimumPointDistanceSq;
	int _immutableCount;
	NSMutableDictionary* _indexToEstimatedTouchMap;
	NSMutableSet* _estimatedTouchesForUpdating;
	char _drawingEndedButNotFinished;
	NSObject*<OS_dispatch_semaphore> _drawingWaitForFinishSemaphore;
	char _isSnappedToRuler;
	char _useRuler;
	char _isSnappedToRulerTopSide;
	char _canSnapToRuler;
	char _needToCheckForStartHook;
	float _rulerWidth;
	ICDrawingInputSmoother* _inputSmoother;
	CGAffineTransform _rulerTransform;

}

@property (assign) char isSnappedToRuler;                                         //@synthesize isSnappedToRuler=_isSnappedToRuler - In the implementation block
@property (readonly) NSObject*<ICDrawingInputFilter> outputFilter; 
@property (assign,nonatomic) CGAffineTransform rulerTransform;                    //@synthesize rulerTransform=_rulerTransform - In the implementation block
@property (assign,nonatomic) char useRuler;                                       //@synthesize useRuler=_useRuler - In the implementation block
@property (assign,nonatomic) float rulerWidth;                                    //@synthesize rulerWidth=_rulerWidth - In the implementation block
@property (assign,nonatomic) char isSnappedToRulerTopSide;                        //@synthesize isSnappedToRulerTopSide=_isSnappedToRulerTopSide - In the implementation block
@property (assign,nonatomic) char canSnapToRuler;                                 //@synthesize canSnapToRuler=_canSnapToRuler - In the implementation block
@property (assign,nonatomic) char needToCheckForStartHook;                        //@synthesize needToCheckForStartHook=_needToCheckForStartHook - In the implementation block
@property (nonatomic,retain) ICDrawingInputSmoother * inputSmoother;              //@synthesize inputSmoother=_inputSmoother - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(void)initialize;
+(void)setupDefaults;
-(void)setInputScale:(float)arg1 ;
-(id)init;
-(void)reset;
-(id)initWithDelegate:(id)arg1 ;
-(void)setUseRuler:(char)arg1 ;
-(void)setCanSnapToRuler:(char)arg1 ;
-(void)setIsSnappedToRuler:(char)arg1 ;
-(void)setNeedToCheckForStartHook:(char)arg1 ;
-(SCD_Struct_IC11)baseValuesforCommandType:(unsigned)arg1 ;
-(SCD_Struct_IC12)parametersforCommandType:(unsigned)arg1 ;
-(float)baseRadiusForCommandType:(unsigned)arg1 ;
-(void)setRulerTransform:(CGAffineTransform)arg1 ;
-(void)setRulerWidth:(float)arg1 ;
-(CGAffineTransform)rulerTransform;
-(float)rulerWidth;
-(char)isSnappedToRuler;
-(float)rulerOffset;
-(char)isSnappedToRulerTopSide;
-(char)useRuler;
-(float)distanceToRulerCenter:(CGPoint)arg1 ;
-(void)setIsSnappedToRulerTopSide:(char)arg1 ;
-(CGPoint)snapPointToRuler:(CGPoint)arg1 ;
-(CGPoint)getRulerSnapLineOriginAndTangent:(CGPoint*)arg1 andNormal:(CGPoint*)arg2 ;
-(char)canSnapToRuler;
-(char)shouldSnapPointToRuler:(CGPoint)arg1 ;
-(void)snapToRuler;
-(void)maskToRuler;
-(unsigned)copyUpdatedRangeFromIndex:(unsigned)arg1 into:(vector<ICDrawingOutputPoint, std::__1::allocator<ICDrawingOutputPoint> >*)arg2 onQueue:(id)arg3 ;
-(ICDrawingInputSmoother *)inputSmoother;
-(void)updateOutputPointsFromIndex:(int)arg1 ;
-(SCD_Struct_IC11)penOutputPoint:(SCD_Struct_IC13)arg1 baseValues:(SCD_Struct_IC11)arg2 ;
-(SCD_Struct_IC11)pencilOutputPoint:(SCD_Struct_IC13)arg1 baseValues:(SCD_Struct_IC11)arg2 ;
-(SCD_Struct_IC11)markerOutputPoint:(SCD_Struct_IC13)arg1 baseValues:(SCD_Struct_IC11)arg2 ;
-(void)handleMarkerStartCapPoint:(SCD_Struct_IC11*)arg1 forInput:(SCD_Struct_IC13*)arg2 ;
-(SCD_Struct_IC11)eraserOutputPoint:(SCD_Struct_IC13)arg1 baseValues:(SCD_Struct_IC11)arg2 ;
-(SCD_Struct_IC11)outputPoint:(SCD_Struct_IC13)arg1 forCommandType:(unsigned)arg2 baseValues:(SCD_Struct_IC11)arg3 ;
-(char)needToCheckForStartHook;
-(void)removePredictedTouches;
-(void)_drawingAddPoint:(SCD_Struct_IC13)arg1 ;
-(SCD_Struct_IC13)calculateVelocityForNewPoint:(SCD_Struct_IC13)arg1 previousPoint:(SCD_Struct_IC13)arg2 ;
-(SCD_Struct_IC13)calculateVelocityForFirstPoint:(SCD_Struct_IC13)arg1 ;
-(void)fixStartHook;
-(void)calculateStrokeAzimuth;
-(void)updateRulerSnapping;
-(void)updateImmutableCount;
-(void)fixEndHook;
-(void)handleEndCaps;
-(NSObject*<ICDrawingInputFilter>)outputFilter;
-(vector<ICDrawingOutputPoint, std::__1::allocator<ICDrawingOutputPoint> >*)getUpdatedRangeFromIndex:(inout unsigned*)arg1 ;
-(void)drawingBeganWithCommand:(id)arg1 inputType:(int)arg2 start:(/*^block*/id)arg3 ;
-(void)snapToRuler:(CGAffineTransform)arg1 width:(float)arg2 ;
-(void)smoothVelocity;
-(void)drawingAddPoints:(vector<ICDrawingInputPoint, std::__1::allocator<ICDrawingInputPoint> >*)arg1 forTouches:(id)arg2 ;
-(void)drawingAddPoint:(SCD_Struct_IC13)arg1 ;
-(void)drawingEndedWithPreCompletion:(/*^block*/id)arg1 completion:(/*^block*/id)arg2 ;
-(void)drawingCancelledWithCompletion:(/*^block*/id)arg1 ;
-(void)setInputSmoother:(ICDrawingInputSmoother *)arg1 ;
@end

