/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 6, 2015 at 2:33:13 PM Japan Standard Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /System/Library/PrivateFrameworks/KeyboardArbiter.framework/KeyboardArbiter
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <libobjc.A.dylib/_UIKeyboardArbitration.h>

@class NSString, _UIKeyboardArbiter, FBSCAContextSceneLayer, NSMutableSet, BKSProcessAssertion, NSXPCConnection;

@interface _UIKeyboardArbiterHandle : NSObject <_UIKeyboardArbitration> {

	char _invalidated;
	NSString* _bundleIdentifier;
	_UIKeyboardArbiter* _owner;
	char _running;
	FBSCAContextSceneLayer* _sceneLayer;
	NSString* _remoteSceneID;
	char _active;
	char _wantedActive;
	float _level;
	NSMutableSet* _hostedPids;
	int _suppressionCount;
	BKSProcessAssertion* _remoteKeepAliveAssertion;
	unsigned _remoteKeepAliveAssertionCount;
	unsigned _remoteKeepAliveTimerCount;
	NSXPCConnection* _connection;

}

@property (readonly) int processIdentifier; 
@property (retain,readonly) NSString * bundleIdentifier;                      //@synthesize bundleIdentifier=_bundleIdentifier - In the implementation block
@property (readonly) NSXPCConnection * connection;                            //@synthesize connection=_connection - In the implementation block
@property (assign) char running;                                              //@synthesize running=_running - In the implementation block
@property (retain,readonly) FBSCAContextSceneLayer * sceneLayer;              //@synthesize sceneLayer=_sceneLayer - In the implementation block
@property (retain,readonly) NSString * remoteSceneID;                         //@synthesize remoteSceneID=_remoteSceneID - In the implementation block
@property (readonly) char active;                                             //@synthesize active=_active - In the implementation block
@property (readonly) char wantedActive;                                       //@synthesize wantedActive=_wantedActive - In the implementation block
@property (readonly) float level;                                             //@synthesize level=_level - In the implementation block
+(id)handlerWithArbiter:(id)arg1 forConnection:(id)arg2 ;
-(void)dealloc;
-(id)description;
-(void)invalidate;
-(NSString *)bundleIdentifier;
-(float)level;
-(char)active;
-(void)setDebugLevel:(int)arg1 ;
-(void)retrieveDebugInformation:(/*^block*/id)arg1 ;
-(void)startArbitrationWithExpectedState:(id)arg1 hostingPIDs:(id)arg2 withSuppression:(int)arg3 onConnected:(/*^block*/id)arg4 ;
-(void)setWindowContextID:(unsigned)arg1 sceneIdentifier:(id)arg2 forKeyboard:(char)arg3 withLevel:(float)arg4 ;
-(void)signalKeyboardChanged:(id)arg1 onCompletion:(/*^block*/id)arg2 ;
-(void)signalKeyboardChangeComplete;
-(void)setWindowHostingPID:(int)arg1 active:(char)arg2 ;
-(void)notifyHostedPIDsOfSuppression:(char)arg1 ;
-(void)transition:(id)arg1 eventStage:(unsigned)arg2 withInfo:(id)arg3 ;
-(void)applicationShouldFocusWithBundle:(id)arg1 onCompletion:(/*^block*/id)arg2 ;
-(NSXPCConnection *)connection;
-(int)processIdentifier;
-(FBSCAContextSceneLayer *)sceneLayer;
-(void)takeProcessAssertionOnRemoteWithQueue:(id)arg1 ;
-(void)releaseProcessAssertion;
-(char)isHandlerShowableWithHandler:(id)arg1 ;
-(NSString *)remoteSceneID;
-(char)wantedActive;
-(void)_deactivateScene;
-(char)running;
-(void)setRunning:(char)arg1 ;
@end

