/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 6, 2015 at 2:31:49 PM Japan Standard Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /System/Library/PrivateFrameworks/AnnotationKit.framework/AnnotationKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


#import <AnnotationKit/AnnotationKit-Structs.h>
@class AKPageController;

@interface AKGeometryHelper : NSObject {

	AKPageController* _pageController;

}

@property (__weak) AKPageController * pageController;              //@synthesize pageController=_pageController - In the implementation block
+(CGAffineTransform)rotationTransformForRect:(CGRect)arg1 withAngle:(float)arg2 ;
+(CGPoint)compareVectorDirectionsFirstVector:(CGPoint)arg1 secondVector:(CGPoint)arg2 ;
+(char)exifOrientationHasReversedAxes:(int)arg1 ;
+(char)annotationHasRotation:(id)arg1 outAngle:(float*)arg2 ;
+(unsigned)draggableArea:(unsigned)arg1 convertedForExif:(int)arg2 ;
+(CGRect)boundsOfRotatedRectangle:(CGRect)arg1 angle:(float)arg2 ;
+(char)isUnpresentableRect:(CGRect)arg1 ;
+(CGAffineTransform)rotationTransformForRectangularAnnotation:(id)arg1 hasRotation:(char*)arg2 ;
+(CGPoint)intersectLineSegmentStartingAt:(CGPoint)arg1 ending:(CGPoint)arg2 withCircleWithCenter:(CGPoint)arg3 andRadius:(float)arg4 farthestResult:(char)arg5 ;
+(float)angleBetweenPoint:(CGPoint)arg1 andPoint:(CGPoint)arg2 ;
+(CGAffineTransform)rotationTransformAroundPoint:(CGPoint)arg1 withAngle:(float)arg2 ;
+(int)inverseExifOrientation:(int)arg1 ;
+(CGRect)adjustRect:(CGRect)arg1 forExifOrientation:(int)arg2 aboutCenter:(CGPoint)arg3 ;
+(CGRect)expandCGRect:(CGRect)arg1 toContainPoint:(CGPoint)arg2 ;
+(CGPoint)adjustPoint:(CGPoint)arg1 forExifOrientation:(int)arg2 aboutCenter:(CGPoint)arg3 ;
+(CGAffineTransform)affineTransformForExifOrientation:(int)arg1 aboutCenter:(CGPoint)arg2 ;
+(CGRect)renderingAlignedTextRectForRect:(CGRect)arg1 alignToScreenUsingPageController:(id)arg2 orAlignToContext:(CGContextRef)arg3 usingAnnotation:(id)arg4 ;
+(CGAffineTransform)affineTransformRecenteringAboutOriginForExifOrientation:(int)arg1 withOriginalSize:(CGSize)arg2 ;
+(CGRect)renderingStrokeAlignedRectForRect:(CGRect)arg1 withStrokeWidth:(float)arg2 alignToScreenUsingPageController:(id)arg3 orAlignToContext:(CGContextRef)arg4 usingAnnotation:(id)arg5 ;
+(CGRect)convertModelToScreenOrientationForRect:(CGRect)arg1 withPageController:(id)arg2 ;
+(CGPoint)convertModelToScreenOrientationForPoint:(CGPoint)arg1 relativeToRect:(CGRect)arg2 withPageController:(id)arg3 ;
+(CGPoint)convertScreenToModelOrientationForPoint:(CGPoint)arg1 relativeToRect:(CGRect)arg2 withPageController:(id)arg3 ;
+(CGPoint)projectPoint:(CGPoint)arg1 ontoRayWithFirstPoint:(CGPoint)arg2 andSecondPoint:(CGPoint)arg3 ;
+(CGPoint)normalizeVectorPoint:(CGPoint)arg1 ;
+(char)isPointOnLeft:(CGPoint)arg1 ofRayWithFirstPoint:(CGPoint)arg2 andSecondPoint:(CGPoint)arg3 ;
+(char)exifOrientationHasFlip:(int)arg1 ;
+(CGPoint)intersectRayStartingAt:(CGPoint)arg1 ending:(CGPoint)arg2 withEllipseOfRect:(CGRect)arg3 farthestResult:(char)arg4 ;
+(CGPoint)intersectLineSegmentStartingAt:(CGPoint)arg1 ending:(CGPoint)arg2 withEllipseOfRect:(CGRect)arg3 farthestResult:(char)arg4 ;
+(id)verticesOfPolygonWithPointCount:(unsigned)arg1 inRect:(CGRect)arg2 rotation:(float)arg3 flippedVertically:(char)arg4 ;
+(float)lengthOfVector:(CGVector)arg1 ;
+(CGVector)normalizeVector:(CGVector)arg1 ;
+(float)angleOfVector:(CGVector)arg1 ;
+(CGAffineTransform)verticalFlipTransformForRect:(CGRect)arg1 ;
+(float)distanceBetweenPoints:(CGPoint)arg1 andPoint:(CGPoint)arg2 ;
+(CGRect)integralRect:(CGRect)arg1 withOptions:(unsigned long long)arg2 ;
+(CGRect)rectWithSize:(CGSize)arg1 centeredAtPoint:(CGPoint)arg2 ;
+(CGPoint)flipPointVertically:(CGPoint)arg1 inRect:(CGRect)arg2 ;
+(int)exifOrientationWithConversionBlock:(/*^block*/id)arg1 ;
+(CGPoint)projectVector:(CGPoint)arg1 ontoAspectVector:(CGPoint)arg2 ;
+(CGPoint)snapVector:(CGPoint)arg1 toDiagonalForAspectRatio:(float)arg2 ignoreWidth:(char)arg3 ignoreHeight:(char)arg4 ;
+(float)radiusOfCenteredCircleFor:(CGRect)arg1 ;
+(CGAffineTransform)ellipseToCenteredCircleTransform:(CGRect)arg1 ;
+(CGPoint)pointAtAngle:(float)arg1 inCircleWithCenter:(CGPoint)arg2 andRadius:(float)arg3 ;
+(CGAffineTransform)centeredCircleToEllipseTransform:(CGRect)arg1 ;
+(CGPoint)intersectRayStartingAt:(CGPoint)arg1 ending:(CGPoint)arg2 withCircleWithCenter:(CGPoint)arg3 andRadius:(float)arg4 farthestResult:(char)arg5 ;
+(void)_checkIntersectionOfLineSegmentStartingAt:(CGPoint)arg1 endingAt:(CGPoint)arg2 withCircleAt:(CGPoint)arg3 andRadius:(float)arg4 results:(id)arg5 ;
+(void)_collectIntersectionsOfLineSegmentStartingAt:(CGPoint)arg1 endingAt:(CGPoint)arg2 withCornerCirclesOfRoundedRect:(CGRect)arg3 withRadius:(float)arg4 results:(id)arg5 ;
+(CGPoint)intersectLineSegmentStartingAt:(CGPoint)arg1 ending:(CGPoint)arg2 withAnotherSegmentStartingAt:(CGPoint)arg3 ending:(CGPoint)arg4 ;
+(CGPoint)_farthestPointFrom:(CGPoint)arg1 inArray:(id)arg2 ;
+(void)intersectCircleAtPoint:(CGPoint)arg1 withRadius:(float)arg2 withCircleAtPoint:(CGPoint)arg3 withRadius:(float)arg4 firstOutPoint:(CGPoint*)arg5 secondOutPoint:(CGPoint*)arg6 ;
+(CGAffineTransform)_rawAffineTransformForExifOrientation:(int)arg1 ;
+(id)_cornersOfRotatedRectangle:(CGRect)arg1 angle:(float)arg2 ;
+(char)isUnpresentablePoint:(CGPoint)arg1 ;
+(CGPoint)_alignedPointForPoint:(CGPoint)arg1 alignToContent:(char)arg2 alignToScreenUsingPageController:(id)arg3 orAlignToBitmapContext:(CGContextRef)arg4 usingAnnotation:(id)arg5 ;
+(CGRect)_alignedStableRectForRect:(CGRect)arg1 alignToContent:(char)arg2 alignToScreenUsingPageController:(id)arg3 orAlignToBitmapContext:(CGContextRef)arg4 usingAnnotation:(id)arg5 ;
+(CGRect)_strokeAlignedRectForRect:(CGRect)arg1 withStrokeWidth:(float)arg2 shouldAlignStrictlyToScreen:(char)arg3 alignToScreenUsingPageController:(id)arg4 orAlignToBitmapContext:(CGContextRef)arg5 usingAnnotation:(id)arg6 ;
+(CGRect)stableIntegralRectForRect:(CGRect)arg1 ;
+(CGRect)_rectForRect:(CGRect)arg1 alignToContent:(char)arg2 alignToScreenUsingPageController:(id)arg3 orAlignToBitmapContext:(CGContextRef)arg4 usingAnnotation:(id)arg5 withAlignmentBlock:(/*^block*/id)arg6 ;
+(CGRect)effectiveDrawingBoundsForAnnotation:(id)arg1 forDisplay:(char)arg2 pageControllerOrNil:(id)arg3 outScaleFactor:(float*)arg4 ;
+(CGPoint)snapVectorTo45Degrees:(CGPoint)arg1 ;
+(float)scaleOfTransform:(CGAffineTransform)arg1 ;
+(CGRect)rectForSize:(CGSize)arg1 inRect:(CGRect)arg2 ;
+(CGPoint)intersectLineSegmentStartingAt:(CGPoint)arg1 ending:(CGPoint)arg2 withRect:(CGRect)arg3 andRoundedCornerRadius:(float)arg4 ;
+(char)isPoint:(CGPoint)arg1 onEllipse:(CGRect)arg2 ;
+(void)tangentPointsToEllipse:(CGRect)arg1 fromPoint:(CGPoint)arg2 firstOutPoint:(CGPoint*)arg3 secondOutPoint:(CGPoint*)arg4 ;
+(CGPoint)tangentOfEllipse:(CGRect)arg1 throughRayWithFirstPoint:(CGPoint)arg2 goingThrough:(CGPoint)arg3 ;
+(CGRect)convertScreenToModelOrientationForRect:(CGRect)arg1 withPageController:(id)arg2 ;
+(CGAffineTransform)horizontalFlipTransformForRect:(CGRect)arg1 ;
-(AKPageController *)pageController;
-(void)setPageController:(AKPageController *)arg1 ;
-(CGPoint)contentAlignedPointForPoint:(CGPoint)arg1 ;
-(CGPoint)screenPixelAlignedPointForPoint:(CGPoint)arg1 ;
-(CGRect)contentAlignedRectForRect:(CGRect)arg1 ;
-(CGRect)screenPixelAlignedRectForRect:(CGRect)arg1 ;
-(CGRect)convertRect:(CGRect)arg1 fromModelToLayer:(id)arg2 ;
-(id)initWithPageController:(id)arg1 ;
-(CGRect)annotationLayerFrameForAnnotation:(id)arg1 layerIsClipped:(char*)arg2 ;
-(CGRect)adornmentLayerFrameForAnnotation:(id)arg1 ;
-(CGPoint)convertPoint:(CGPoint)arg1 fromModelToLayer:(id)arg2 ;
-(CGRect)_clippingFrameForView:(id)arg1 ;
-(CGRect)_smartAlignedRectForRect:(CGRect)arg1 ;
-(char)_shouldAlignToContent;
-(char)_shouldAlignToScreen;
-(CGRect)screenStrokeAlignedRectForRect:(CGRect)arg1 withStrokeWidth:(float)arg2 ;
-(id)_rootLayer;
@end

