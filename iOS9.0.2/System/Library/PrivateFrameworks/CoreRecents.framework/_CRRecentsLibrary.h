/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 6, 2015 at 2:38:16 PM Japan Standard Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /System/Library/PrivateFrameworks/CoreRecents.framework/recentsd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <recentsd/recentsd-Structs.h>
#import <recentsd/CRSQLiteConnectionPoolDelegate.h>
#import <recentsd/CRRecentsMigratorDelegate.h>

@class NSString, CRPluginManager, CRSQLiteConnectionPool, CRRecentsMigrator, CRMailAccountAdaptor, NSMutableDictionary, NSLock, CRDelayedWorkQueue;

@interface _CRRecentsLibrary : NSObject <CRSQLiteConnectionPoolDelegate, CRRecentsMigratorDelegate> {

	NSString* _path;
	CRPluginManager* _pluginManager;
	CRSQLiteConnectionPool* _connectionPool;
	CRRecentsMigrator* _migrator;
	CRMailAccountAdaptor* _mailAccountAdaptor;
	NSMutableDictionary* _cloudStores;
	NSLock* _lock;
	CFDictionaryRef _cachedProperties;
	CRDelayedWorkQueue* _pendingDomainExpunges;
	CRDelayedWorkQueue* _pendingStoreSyncEvents;
	double _storeSyncDelay;

}

@property (assign,nonatomic) double storeSyncDelay;                 //@synthesize storeSyncDelay=_storeSyncDelay - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)storeMapping;
+(id)defaultPath;
-(void)setStoreSyncDelay:(double)arg1 ;
-(void)setMaximumRecentsAgeInDays:(unsigned)arg1 forRecentsDomain:(id)arg2 ;
-(void)performExpungeRecentsOverLimitsForDomain:(id)arg1 afterDelay:(double)arg2 ;
-(void)_initializeStoreForRecentsDomain:(id)arg1 storeIdentifier:(id)arg2 ;
-(char)_synchronizeAllStores;
-(void)_handleSQLiteErrorCode:(int)arg1 ;
-(void)unlockConnection:(id)arg1 ;
-(id)externalAddressFromAddress:(id)arg1 kind:(id)arg2 ;
-(void)populateMetadataForRecents:(id)arg1 ;
-(id)domainClauseWithDomains:(id)arg1 bindings:(id)arg2 ;
-(id)ageOutClause;
-(/*^block*/id)bindingForDomain:(id)arg1 ;
-(id)_whereClauseFromPredicate:(id)arg1 inDomains:(id)arg2 bindings:(id*)arg3 error:(id*)arg4 ;
-(id)copyContactRecentsFromStatement:(sqlite3_stmtRef)arg1 selectIndexes:(SCD_Struct_CR4)arg2 groupThreshold:(unsigned)arg3 options:(unsigned)arg4 ;
-(id)copyRecentContactFromStatement:(sqlite3_stmtRef)arg1 columnIndexes:(SCD_Struct_CR4)arg2 populateMetadata:(char)arg3 ;
-(id)upcomingEventIdentifierForRecentID:(long long)arg1 ;
-(id)hashesForGroupMembers:(id)arg1 recentsDomain:(id)arg2 ;
-(id)hashForGroupMemberHashes:(id)arg1 ;
-(id)recentsHashForExternalAddress:(id)arg1 kind:(id)arg2 ;
-(id)_copyRecentContactForID:(long long)arg1 ;
-(id)hashForContact:(id)arg1 ;
-(void)_deleteRecentsWithRecentIDs:(id)arg1 storeKeys:(id)arg2 recentsDomain:(id)arg3 ;
-(id)_storeForRecentsDomain:(id)arg1 ;
-(char)_synchronizeStore:(id)arg1 ;
-(unsigned)_databasePropertyValueByKey:(id)arg1 ;
-(unsigned)_propertyValueForKey:(id)arg1 defaultValue:(unsigned)arg2 ;
-(void)_setPropertyValue:(unsigned)arg1 forKey:(id)arg2 ;
-(char)expungeRecentsOverLimitsForDomain:(id)arg1 forcibly:(char)arg2 expungedRecentIDs:(id*)arg3 ;
-(void)cancelPerformExpungeRecentsOverLimitsForDomain:(id)arg1 ;
-(unsigned)maximumRecentsForDomain:(id)arg1 ;
-(unsigned)maximumGroupRecentsForDomain:(id)arg1 ;
-(unsigned)maximumRecentsAgeInDaysForDomain:(id)arg1 ;
-(id)_nts_expungeRecentsOlderThanDate:(id)arg1 domain:(id)arg2 storeKeys:(id*)arg3 connection:(id)arg4 ;
-(id)_nts_expungeGroupRecentsOverLimit:(unsigned)arg1 domain:(id)arg2 storeKeys:(id*)arg3 connection:(id)arg4 ;
-(id)_nts_expungeIndividualRecentsOverLimit:(unsigned)arg1 domain:(id)arg2 storeKeys:(id*)arg3 connection:(id)arg4 ;
-(id)addressFromExternalAddress:(id)arg1 kind:(id)arg2 ;
-(void)_bindRecent:(id)arg1 forStatement:(sqlite3_stmtRef)arg2 ;
-(void)_bindContact:(id)arg1 withRecentID:(long long)arg2 forStatement:(sqlite3_stmtRef)arg3 ;
-(void)_insertRecentContacts:(id)arg1 ;
-(void)_updateRecentContacts:(id)arg1 ;
-(id)_copyRecentContactForRecordHash:(id)arg1 recentsDomain:(id)arg2 ;
-(id)hashForGroupMembers:(id)arg1 recentsDomain:(id)arg2 ;
-(void)_saveRecentContacts:(id)arg1 ;
-(void)_syncContact:(id)arg1 withStore:(id)arg2 ;
-(void)scheduleSynchronizationForStore:(id)arg1 ;
-(void)_deleteRecentWithRecordHash:(id)arg1 kind:(id)arg2 recentsDomain:(id)arg3 ;
-(id)addressHandlerForAddressKind:(id)arg1 ;
-(id)hashForGroup:(id)arg1 ;
-(id)_recentsDomainForStore:(id)arg1 ;
-(void)setMaximumRecents:(unsigned)arg1 forRecentsDomain:(id)arg2 ;
-(char)_mergeRemoteChanges:(id)arg1 fromStore:(id)arg2 forRecentsDomain:(id)arg3 ;
-(id)keyForContact:(id)arg1 ;
-(void)enumerateRecentsForDomain:(id)arg1 usingBlock:(/*^block*/id)arg2 ;
-(id)recentsHashForAddress:(id)arg1 kind:(id)arg2 ;
-(id)copyRecentsForQuery:(id)arg1 error:(id*)arg2 ;
-(void)setMaximumGroupRecents:(unsigned)arg1 forRecentsDomain:(id)arg2 ;
-(unsigned)recordContactEvents:(id)arg1 recentsDomain:(id)arg2 sendingAddress:(id)arg3 source:(id)arg4 ;
-(double)storeSyncDelay;
-(void)removeContact:(id)arg1 ;
-(void)dealloc;
-(void)synchronize;
-(id)initWithPath:(id)arg1 ;
-(void)removeRecentContactsWithRecentIDs:(id)arg1 syncKeys:(id)arg2 domain:(id)arg3 ;
-(void)performReadTransaction:(/*^block*/id)arg1 ;
-(void)performWriteTransaction:(/*^block*/id)arg1 ;
-(void)closeDatabaseConnections;
-(int)beginTransaction:(id)arg1 withType:(int)arg2 ;
-(int)handleSqliteError:(sqlite3Ref)arg1 format:(id)arg2 ;
-(int)rollbackTransaction:(id)arg1 ;
-(int)commitTransaction:(id)arg1 ;
-(void)_performTransaction:(/*^block*/id)arg1 forWriting:(char)arg2 ;
-(id)_connectionForWriting:(char)arg1 ;
-(id)_activeConnectionWrapper;
-(id)_setActiveConnection:(id)arg1 forWriting:(char)arg2 ;
-(void)_handleCorruptDatabase;
-(void)_handleFullDatabase;
-(void)_handleIOError;
-(void)_handleBusyError;
-(void)renameOrRemoveDatabase;
-(id)newConnectionForConnectionPool:(id)arg1 ;
-(char)_setDatabasePropertyValue:(unsigned)arg1 forKey:(id)arg2 ;
-(void)_storeChangedExternally:(id)arg1 ;
@end

