/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 6, 2015 at 2:32:21 PM Japan Standard Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /System/Library/PrivateFrameworks/CoreActivity.framework/CoreActivity
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


@class CMMotionManager, ActivityCounts, StepHandler, NSOperationQueue;

@interface CoreActivity : NSObject {

	char _pedometerIsOn;
	int _accelRate;
	CMMotionManager* _motionManager;
	ActivityCounts* _aCounts;
	StepHandler* _stepHandler;
	NSOperationQueue* _opQueue;

}

@property (assign,nonatomic) int accelRate;                                //@synthesize accelRate=_accelRate - In the implementation block
@property (nonatomic,retain) CMMotionManager * motionManager;              //@synthesize motionManager=_motionManager - In the implementation block
@property (nonatomic,retain) ActivityCounts * aCounts;                     //@synthesize aCounts=_aCounts - In the implementation block
@property (nonatomic,retain) StepHandler * stepHandler;                    //@synthesize stepHandler=_stepHandler - In the implementation block
@property (assign,nonatomic) char pedometerIsOn;                           //@synthesize pedometerIsOn=_pedometerIsOn - In the implementation block
@property (nonatomic,retain) NSOperationQueue * opQueue;                   //@synthesize opQueue=_opQueue - In the implementation block
+(int)activityCountThresholdForActivityLevel:(int)arg1 epochDuration:(int)arg2 ;
-(NSOperationQueue *)opQueue;
-(void)setOpQueue:(NSOperationQueue *)arg1 ;
-(void)setAccelRate:(int)arg1 ;
-(void)setMotionManager:(CMMotionManager *)arg1 ;
-(CMMotionManager *)motionManager;
-(int)accelRate;
-(void)setACounts:(ActivityCounts *)arg1 ;
-(ActivityCounts *)aCounts;
-(char)pedometerIsOn;
-(void)setPedometerIsOn:(char)arg1 ;
-(id)initActivityTracking:(id)arg1 ;
-(void)startPedometerUpdates:(id)arg1 ;
-(int)activityCountThresholdForActivityLevel:(int)arg1 ;
-(void)stopPedometerUpdates;
-(void)startActivityUpdates;
-(void)setStepHandler:(StepHandler *)arg1 ;
-(StepHandler *)stepHandler;
-(void)stopActivityUpdates;
@end

