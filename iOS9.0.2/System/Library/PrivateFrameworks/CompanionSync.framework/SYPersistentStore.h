/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 6, 2015 at 2:32:19 PM Japan Standard Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /System/Library/PrivateFrameworks/CompanionSync.framework/CompanionSync
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


@protocol OS_dispatch_queue;
#import <CompanionSync/CompanionSync-Structs.h>
@class NSString, NSMutableDictionary, NSObject, NSSet, _SYSharedServiceDB, NSDate, NSError, NSDictionary;

@interface SYPersistentStore : NSObject {

	NSString* _path;
	CFStringRef _loggingFacility;
	double _timeToLiveCache;
	void* _inXpcTransaction;
	char _changeTrackingEnabled;
	NSMutableDictionary* _peerSeqnoSets;
	NSObject*<OS_dispatch_queue> _syncQ;
	sqlite3Ref _db;
	sqlite3_stmtRef _getInFullSync;
	sqlite3_stmtRef _getChangeCount;
	sqlite3_stmtRef _getNextExpireTime;
	sqlite3_stmtRef _purgeExpiredChanges;
	sqlite3_stmtRef _insertChange;
	sqlite3_stmtRef _getFullsyncSent;
	sqlite3_stmtRef _setFullsyncSent;
	sqlite3_stmtRef _logSyncComplete;
	sqlite3_stmtRef _getChangeIDsSinceVersion;
	sqlite3_stmtRef _getLocalVersion;
	sqlite3_stmtRef _getOldestVersion;
	sqlite3_stmtRef _setVectorClock;
	sqlite3_stmtRef _setPeerSeqNo;
	sqlite3_stmtRef _getPeerSeqNo;
	sqlite3_stmtRef _setPeerSeqNoSet;
	sqlite3_stmtRef _enterFullSync;
	sqlite3_stmtRef _exitFullSync;
	sqlite3_stmtRef _getIgnoringSyncID;
	sqlite3_stmtRef _getCurrentSyncID;
	sqlite3_stmtRef _getCurrentSyncStartTime;
	sqlite3_stmtRef _getLastEndedSyncID;
	sqlite3_stmtRef _getWaitingForSyncID;
	sqlite3_stmtRef _setWaitingForSyncID;
	sqlite3_stmtRef _setAllSentForSyncID;
	sqlite3_stmtRef _getAllSentForCurrentSync;
	sqlite3_stmtRef _getLastSyncError;
	sqlite3_stmtRef _setSyncUserInfo;
	sqlite3_stmtRef _getSyncUserInfo;
	sqlite3_stmtRef _setSyncIDSOptions;
	sqlite3_stmtRef _getSyncIDSOptions;
	char _cachedVersionStale;
	NSString* _peerID;
	NSSet* _cachedChangedSyncIDs;
	_SYSharedServiceDB* _sharedDB;
	double _unfinishedSyncTimeout;
	unsigned long long _cachedChangedSyncIDsVersion;

}

@property (assign,getter=isPerformingDeltaSync,nonatomic) char performingDeltaSync; 
@property (nonatomic,readonly) NSString * path; 
@property (assign,nonatomic) double timeToLive; 
@property (nonatomic,readonly) unsigned changeCount; 
@property (nonatomic,readonly) NSString * peerID;                                                //@synthesize peerID=_peerID - In the implementation block
@property (nonatomic,retain) NSString * vectorClockJSON; 
@property (nonatomic,copy) NSDate * overflowResyncTime; 
@property (nonatomic,copy) NSDate * lastMessageReceived; 
@property (assign,nonatomic) double unfinishedSyncTimeout;                                       //@synthesize unfinishedSyncTimeout=_unfinishedSyncTimeout - In the implementation block
@property (nonatomic,readonly) char canStartNewSyncSession; 
@property (nonatomic,readonly) char currentSyncSendComplete; 
@property (nonatomic,readonly) char lastSyncFailed; 
@property (nonatomic,readonly) NSError * lastSyncError; 
@property (nonatomic,readonly) NSString * currentFullSyncID; 
@property (nonatomic,readonly) char inFullSync; 
@property (nonatomic,readonly) NSString * lastSyncEndID; 
@property (nonatomic,copy) NSString * waitingForSyncEndID; 
@property (nonatomic,copy) NSDictionary * fullSyncUserInfo; 
@property (nonatomic,copy) NSDictionary * fullSyncIDSOptions; 
@property (assign,nonatomic) char completedSync; 
@property (nonatomic,readonly) double durationOfLastFullSync; 
@property (nonatomic,readonly) unsigned long long currentLocalVersion; 
@property (nonatomic,readonly) unsigned long long lastSeenRemoteVersion; 
@property (nonatomic,retain) NSSet * cachedChangedSyncIDs;                                       //@synthesize cachedChangedSyncIDs=_cachedChangedSyncIDs - In the implementation block
@property (assign,nonatomic) unsigned long long cachedChangedSyncIDsVersion;                     //@synthesize cachedChangedSyncIDsVersion=_cachedChangedSyncIDsVersion - In the implementation block
@property (assign,nonatomic) char cachedVersionStale;                                            //@synthesize cachedVersionStale=_cachedVersionStale - In the implementation block
@property (nonatomic,retain) _SYSharedServiceDB * sharedDB;                                      //@synthesize sharedDB=_sharedDB - In the implementation block
+(id)sharedPersistentStoreForService:(id)arg1 ;
-(NSString *)peerID;
-(void)dealloc;
-(id)init;
-(NSString *)path;
-(unsigned)changeCount;
-(char)inFullSync;
-(char)currentSyncSendComplete;
-(char)completedSync;
-(void)setCompletedSync:(char)arg1 ;
-(void)setFullSyncUserInfo:(NSDictionary *)arg1 ;
-(void)setFullSyncIDSOptions:(NSDictionary *)arg1 ;
-(char)isPerformingDeltaSync;
-(void)setPerformingDeltaSync:(char)arg1 ;
-(void)setVectorClockJSON:(NSString *)arg1 ;
-(NSDate *)lastMessageReceived;
-(char)sequenceNumberIsDuplicate:(unsigned long long)arg1 forPeer:(id)arg2 ;
-(void)resetSequenceNumbersForPeer:(id)arg1 ;
-(unsigned long long)lastSequenceNumberForPeerID:(id)arg1 ;
-(void)setLastMessageReceived:(NSDate *)arg1 ;
-(void)setLastSequenceNumber:(unsigned long long)arg1 fromPeer:(id)arg2 ;
-(void)setOverflowResyncTime:(NSDate *)arg1 ;
-(NSString *)lastSyncEndID;
-(void)setWaitingForSyncEndID:(NSString *)arg1 ;
-(NSString *)waitingForSyncEndID;
-(NSString *)currentFullSyncID;
-(void)exitFullSyncWithID:(id)arg1 error:(id)arg2 ;
-(void)clearAllChanges;
-(NSDate *)overflowResyncTime;
-(id)initWithPath:(id)arg1 loggingFacility:(const CFStringRef)arg2 changeTrackingEnabled:(char)arg3 ;
-(NSString *)vectorClockJSON;
-(void)enterFullSyncWithID:(id)arg1 ignoring:(char)arg2 ;
-(char)canStartNewSyncSession;
-(double)durationOfLastFullSync;
-(char)reassignCurrentSyncID:(id)arg1 ;
-(unsigned long long)nextSequenceNumber;
-(char)lastSyncFailed;
-(char)logChanges:(id)arg1 error:(id*)arg2 ;
-(NSDictionary *)fullSyncUserInfo;
-(NSDictionary *)fullSyncIDSOptions;
-(char)objectChanged:(id)arg1 sinceVersion:(unsigned long long)arg2 ;
-(void)sendCompletedForSyncWithID:(id)arg1 ;
-(void)changeTrackingToggled:(char)arg1 ;
-(int)_getSchemaVersion;
-(void)_withDB:(/*^block*/id)arg1 ;
-(id)initWithSharedDatabase:(id)arg1 ;
-(void)setUnfinishedSyncTimeout:(double)arg1 ;
-(void)_setupSharedDB;
-(char)_openDBAtPath:(id)arg1 ;
-(char)_tableEmpty:(id)arg1 db:(sqlite3Ref)arg2 ;
-(void)_convertTimestamps;
-(void)_fixPeerInfo;
-(void)_cacheTTL;
-(char)_inTransaction:(char)arg1 do:(/*^block*/id)arg2 ;
-(id)_decodeIndexSet:(id)arg1 ;
-(id)_encodeIndexSet:(id)arg1 ;
-(void)_LOCKED_storeSequenceNumberSet:(id)arg1 forPeerID:(id)arg2 db:(sqlite3Ref)arg3 ;
-(id)_sequenceNumberSetForPeerID:(id)arg1 inDB:(sqlite3Ref)arg2 ;
-(unsigned long long)_lastSequenceNumberForPeerID_LOCKED:(id)arg1 ;
-(void)setCachedChangedSyncIDsVersion:(unsigned long long)arg1 ;
-(unsigned long long)cachedChangedSyncIDsVersion;
-(NSSet *)cachedChangedSyncIDs;
-(unsigned long long)_oldestVersion;
-(void)setCachedVersionStale:(char)arg1 ;
-(char)cachedVersionStale;
-(void)setCachedChangedSyncIDs:(NSSet *)arg1 ;
-(sqlite3Ref)_dbRef;
-(void)_storeSequenceNumberSet:(id)arg1 forPeerID:(id)arg2 ;
-(void)resetSequenceNumber:(unsigned long long)arg1 ;
-(char)ignoringFullSyncWithID:(id)arg1 ;
-(NSError *)lastSyncError;
-(unsigned long long)lastSeenRemoteVersion;
-(char)logSyncCompletionToRemoteVersion:(unsigned long long)arg1 ;
-(double)unfinishedSyncTimeout;
-(_SYSharedServiceDB *)sharedDB;
-(void)setSharedDB:(_SYSharedServiceDB *)arg1 ;
-(void)_prepareStatements;
-(unsigned long long)currentLocalVersion;
-(double)timeToLive;
-(void)setTimeToLive:(double)arg1 ;
@end

