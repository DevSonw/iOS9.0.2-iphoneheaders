/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 6, 2015 at 2:32:40 PM Japan Standard Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <BaseBoard/BSZeroingWeakReference.h>
#import <libobjc.A.dylib/BSDescriptionProviding.h>
#import <libobjc.A.dylib/FBSceneManagerInternalObserver.h>
#import <libobjc.A.dylib/FBSceneManagerDelegate.h>

@class NSString;

@interface FBSceneManagerObserver : BSZeroingWeakReference <BSDescriptionProviding, FBSceneManagerInternalObserver, FBSceneManagerDelegate> {

	char _delegate;
	char _internalObserver;
	char _didCreateScene;
	char _willUpdateScene;
	char _willCommit;
	char _didCommit;
	char _didCommitDEPRECATED;
	char _willDestroy;
	char _didDestroy;
	char _willSynchronize;
	char _didSynchronize;
	char _amendSettings;
	char _didUpdateClientSettings;
	char _didReceiveActions;
	char _hostingPolicyForScene;
	char _createDefaultTransitionContext;

}

@property (nonatomic,readonly) id observer; 
@property (getter=isDelegate,nonatomic,readonly) char delegate;                              //@synthesize delegate=_delegate - In the implementation block
@property (getter=isInternalObserver,nonatomic,readonly) char internalObserver;              //@synthesize internalObserver=_internalObserver - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)observerWithObserver:(id)arg1 ;
-(NSString *)description;
-(char)delegate;
-(id)initWithDelegate:(id)arg1 ;
-(id)observer;
-(id)initWithObject:(id)arg1 ;
-(id)descriptionWithMultilinePrefix:(id)arg1 ;
-(id)succinctDescription;
-(id)succinctDescriptionBuilder;
-(id)descriptionBuilderWithMultilinePrefix:(id)arg1 ;
-(void)sceneManagerWillBeginSceneUpdateSynchronization:(id)arg1 ;
-(void)sceneManagerDidEndSceneUpdateSynchronization:(id)arg1 ;
-(void)sceneManager:(id)arg1 amendSettings:(id)arg2 forUpdatingScene:(id)arg3 ;
-(void)sceneManager:(id)arg1 scene:(id)arg2 didUpdateClientSettingsWithDiff:(id)arg3 oldClientSettings:(id)arg4 transitionContext:(id)arg5 ;
-(void)sceneManager:(id)arg1 didCreateScene:(id)arg2 withClient:(id)arg3 ;
-(void)sceneManager:(id)arg1 willUpdateScene:(id)arg2 withSettings:(id)arg3 transitionContext:(id)arg4 ;
-(void)sceneManager:(id)arg1 willCommitUpdateForScene:(id)arg2 transactionID:(unsigned)arg3 ;
-(void)sceneManager:(id)arg1 didCommitUpdateForScene:(id)arg2 transactionID:(unsigned)arg3 success:(char)arg4 ;
-(void)sceneManager:(id)arg1 willDestroyScene:(id)arg2 ;
-(void)sceneManager:(id)arg1 didDestroyScene:(id)arg2 ;
-(id)initWithObserver:(id)arg1 ;
-(int)sceneManager:(id)arg1 hostingPolicyForScene:(id)arg2 ;
-(void)sceneManager:(id)arg1 scene:(id)arg2 didReceiveActions:(id)arg3 ;
-(id)sceneManager:(id)arg1 createDefaultTransitionContextForScene:(id)arg2 ;
-(char)isDelegate;
-(char)isInternalObserver;
@end

