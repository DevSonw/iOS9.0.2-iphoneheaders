/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 6, 2015 at 2:38:54 PM Japan Standard Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /System/Library/PrivateFrameworks/MobileBackup.framework/backupd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <backupd/backupd-Structs.h>
#import <backupd/MBServiceManager.h>

@class MBCKEncryptionManager, MBCKCache, MBDebugContext, NSDictionary, CDSession;

@interface MBCKManager : MBServiceManager {

	char _restoreSessionOverridden;
	MBCKEncryptionManager* _encryptionManager;
	MBCKCache* _cache;
	MBDebugContext* _debugContext;
	NSDictionary* _cachedBackupsByUDID;
	CDSession* _duetSession;
	unsigned long long _nextBackupSize;

}

@property (nonatomic,readonly) MBCKCache * cache;                                      //@synthesize cache=_cache - In the implementation block
@property (nonatomic,readonly) MBCKEncryptionManager * encryptionManager;              //@synthesize encryptionManager=_encryptionManager - In the implementation block
@property (nonatomic,retain) MBDebugContext * debugContext;                            //@synthesize debugContext=_debugContext - In the implementation block
@property (nonatomic,retain) NSDictionary * cachedBackupsByUDID;                       //@synthesize cachedBackupsByUDID=_cachedBackupsByUDID - In the implementation block
@property (assign,nonatomic) char restoreSessionOverridden;                            //@synthesize restoreSessionOverridden=_restoreSessionOverridden - In the implementation block
@property (assign,nonatomic) unsigned long long nextBackupSize;                        //@synthesize nextBackupSize=_nextBackupSize - In the implementation block
@property (nonatomic,retain) CDSession * duetSession;                                  //@synthesize duetSession=_duetSession - In the implementation block
+(id)sharedServiceManager;
-(void)setDebugContext:(MBDebugContext *)arg1 ;
-(id)_debugContext;
-(MBCKEncryptionManager *)encryptionManager;
-(void)setDuetSession:(CDSession *)arg1 ;
-(id)_encryptionManagerWithCache:(id)arg1 ;
-(unsigned)snapshotIDForSnapshotUUID:(id)arg1 backupUDID:(id)arg2 error:(id*)arg3 ;
-(void)setRestoreSessionOverridden:(char)arg1 ;
-(void)loadRestoreSession;
-(id)lockManagerWithAccount:(id)arg1 backupUDID:(id)arg2 type:(int)arg3 ;
-(void)_notifyRestoreCompleted;
-(id)_ckSettingsContextForBackupUDID:(id)arg1 ;
-(void)saveBackupStateInfo:(id)arg1 ;
-(NSDictionary *)cachedBackupsByUDID;
-(void)setCachedBackupsByUDID:(NSDictionary *)arg1 ;
-(char)_hasDeferredDiscountingCameraRollQuota;
-(void)_ckRunBackupWithContext:(id)arg1 reason:(int)arg2 ;
-(void)saveFailedBackupShadowState;
-(char)_setBackupDisabledIfMissingFromAccount;
-(void)_notifyUserOfQuotaDepletionForContext:(id)arg1 ;
-(char)restoreRequestShouldWaitForBuddy;
-(char)isPowerBudgetAvailableForRestore;
-(void)warnUserOfPowerBudgetSuspendingRestore;
-(id)_ckSettingsContextForRestoreWithdeviceUUID:(id)arg1 ;
-(char)_ckStartBackgroundRestoreWithSettingsContext:(id)arg1 delegateContext:(id)arg2 error:(id*)arg3 ;
-(void)_ckRunRestoreWithSettingsContext:(id)arg1 delegateContext:(id)arg2 ;
-(id)snapshotForSnapshotID:(unsigned)arg1 backupUDID:(id)arg2 error:(id*)arg3 ;
-(void)_ckFinalizeRestoreDirectory;
-(void)alertUserOfIncompleteRestore;
-(char)restoreSessionOverridden;
-(void)_ckFinishedRestore;
-(void)_ckFinishRestore:(char)arg1 ;
-(void)_ckClearRestoreSession;
-(void)_ckRunScanWithContext:(id)arg1 ;
-(void)cancelEngineForContext:(id)arg1 ;
-(id)_ckDomainInfoForName:(id)arg1 cache:(id)arg2 restrictedDomains:(id)arg3 disabledDomains:(id)arg4 appManager:(id)arg5 ;
-(void)_deferDiscountingCameraRollQuota;
-(void)_clearDeferredDiscountingCameraRollQuota;
-(void)_updateLockdownKeysForAccountState:(id)arg1 ;
-(char)startBackupWithError:(id*)arg1 scheduled:(char)arg2 ;
-(char)restoreFilesWithPath:(id)arg1 context:(id)arg2 error:(id*)arg3 ;
-(void)accountChanged:(id)arg1 ;
-(void)setNextBackupSize:(unsigned long long)arg1 ;
-(CDSession *)duetSession;
-(void)setLogLevel:(int)arg1 ;
-(void)dealloc;
-(id)init;
-(MBCKCache *)cache;
-(id)_sanitizeError:(id)arg1 ;
-(void)finishRestore;
-(char)cancelApplicationRestoreWithBundleID:(id)arg1 error:(id*)arg2 ;
-(char)setupBackupWithPasscode:(id)arg1 error:(id*)arg2 ;
-(id)restoreFilesForDomain:(id)arg1 relativePath:(id)arg2 pendingOnly:(char)arg3 range:(NSRange)arg4 error:(id*)arg5 ;
-(char)isBackupEnabled;
-(void)setBackupEnabled:(char)arg1 ;
-(void)syncBackupEnabled;
-(id)getBackupListWithFiltering:(char)arg1 error:(id*)arg2 ;
-(id)filesForSnapshotID:(unsigned)arg1 backupUDID:(id)arg2 error:(id*)arg3 ;
-(char)mergeSnapshots:(id)arg1 backupUUID:(id)arg2 error:(id*)arg3 ;
-(id)journalForBackupUUID:(id)arg1 error:(id*)arg2 ;
-(char)restoreFileExistsWithPath:(id)arg1 ;
-(char)restoreDataExistsForApplicationWithBundleID:(id)arg1 size:(unsigned long long*)arg2 ;
-(void)prioritizeRestoreFileWithPath:(id)arg1 ;
-(char)startRestoreForBackupUDID:(id)arg1 snapshotID:(unsigned)arg2 error:(id*)arg3 ;
-(char)restoreFileWithPath:(id)arg1 context:(id)arg2 error:(id*)arg3 ;
-(char)restoreApplicationWithBundleID:(id)arg1 failed:(char)arg2 withQOS:(int)arg3 context:(id)arg4 error:(id*)arg5 ;
-(char)saveKeybagsForBackupUDID:(id)arg1 withError:(id*)arg2 ;
-(void)insufficientFreeSpaceToRestore;
-(void)cancelRestore;
-(char)deleteBackupUDID:(id)arg1 error:(id*)arg2 ;
-(char)startScanWithError:(id*)arg1 ;
-(unsigned long long)nextBackupSize;
-(id)domainInfoList;
-(char)removeDomainName:(id)arg1 error:(id*)arg2 ;
-(char)isBackupEnabledForDomainName:(id)arg1 ;
-(void)setBackupEnabled:(char)arg1 forDomainName:(id)arg2 ;
-(id)getAppleIDsForBackupUDID:(id)arg1 snapshotID:(unsigned)arg2 activeAppleID:(id*)arg3 error:(id*)arg4 ;
-(id)restoreInfo;
-(void)setRestoreSessionWithBackupUDID:(id)arg1 snapshotUUID:(id)arg2 ;
-(void)clearRestoreSession;
-(int)getLogLevel;
-(void)setAllowiTunesBackup:(char)arg1 ;
-(char)allowiTunesBackup;
-(char)countCameraRollQuotaForBackupUDID:(id)arg1 error:(id*)arg2 ;
-(char)discountCameraRollQuotaForBackupUDID:(id)arg1 error:(id*)arg2 ;
-(char)prepareForBackgroundRestoreWithError:(id*)arg1 ;
-(void)keyBagIsLocking;
-(void)keyBagIsUnlocked;
-(char)deleteAccountWithError:(id*)arg1 ;
-(MBDebugContext *)debugContext;
-(char)countCameraRollQuota;
-(char)discountCameraRollQuota;
-(id)domainInfoForName:(id)arg1 ;
-(id)backupState;
-(id)_account;
-(id)restoreState;
@end

