/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 6, 2015 at 2:38:54 PM Japan Standard Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /System/Library/PrivateFrameworks/MobileBackup.framework/backupd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


@class CKRecordZoneID, NSString, CKContainer, NSOperationQueue, MBCKBatchFetch, NSMutableArray, NSMutableDictionary, CKDatabase;

@interface MBCKDatabaseManager : NSObject {

	char _allowsCellularAccess;
	char _isSetup;
	CKRecordZoneID* _defaultZoneID;
	CKRecordZoneID* _syncZoneID;
	int _qos;
	NSString* _containerID;
	CKContainer* _container;
	NSOperationQueue* _ckOperationQueue;
	MBCKBatchFetch* _batchFetch;
	MBCKBatchFetch* _noAssetBatchFetch;
	NSMutableArray* _runningBatchFetches;
	NSMutableDictionary* _batchSavesByPolicy;
	NSMutableArray* _runningBatchSaves;
	int _batchCount;
	NSMutableArray* _batchCompletions;
	int _requestsToSupportBudget;

}

@property (nonatomic,readonly) CKDatabase * database; 
@property (nonatomic,retain) CKRecordZoneID * defaultZoneID;                        //@synthesize defaultZoneID=_defaultZoneID - In the implementation block
@property (nonatomic,retain) CKRecordZoneID * syncZoneID;                           //@synthesize syncZoneID=_syncZoneID - In the implementation block
@property (assign,nonatomic) char shouldSupportBudgeting; 
@property (assign,nonatomic) int qos;                                               //@synthesize qos=_qos - In the implementation block
@property (assign,nonatomic) char allowsCellularAccess;                             //@synthesize allowsCellularAccess=_allowsCellularAccess - In the implementation block
@property (readonly) char isBatching; 
@property (nonatomic,copy) NSString * containerID;                                  //@synthesize containerID=_containerID - In the implementation block
@property (assign) char isSetup;                                                    //@synthesize isSetup=_isSetup - In the implementation block
@property (nonatomic,retain) CKContainer * container;                               //@synthesize container=_container - In the implementation block
@property (nonatomic,retain) NSOperationQueue * ckOperationQueue;                   //@synthesize ckOperationQueue=_ckOperationQueue - In the implementation block
@property (nonatomic,retain) MBCKBatchFetch * batchFetch;                           //@synthesize batchFetch=_batchFetch - In the implementation block
@property (nonatomic,retain) MBCKBatchFetch * noAssetBatchFetch;                    //@synthesize noAssetBatchFetch=_noAssetBatchFetch - In the implementation block
@property (nonatomic,retain) NSMutableArray * runningBatchFetches;                  //@synthesize runningBatchFetches=_runningBatchFetches - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * batchSavesByPolicy;              //@synthesize batchSavesByPolicy=_batchSavesByPolicy - In the implementation block
@property (nonatomic,retain) NSMutableArray * runningBatchSaves;                    //@synthesize runningBatchSaves=_runningBatchSaves - In the implementation block
@property (assign) int batchCount;                                                  //@synthesize batchCount=_batchCount - In the implementation block
@property (nonatomic,retain) NSMutableArray * batchCompletions;                     //@synthesize batchCompletions=_batchCompletions - In the implementation block
@property (assign,nonatomic) int requestsToSupportBudget;                           //@synthesize requestsToSupportBudget=_requestsToSupportBudget - In the implementation block
+(id)zoneIDOfType:(unsigned)arg1 ;
+(id)syncZoneID;
+(id)defaultZoneID;
+(id)sharedManager;
-(void)endBatchWithCompletion:(/*^block*/id)arg1 ;
-(void)saveRecord:(id)arg1 withDelegate:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)addDatabaseOperation:(id)arg1 ;
-(void)setShouldSupportBudgeting:(char)arg1 ;
-(CKRecordZoneID *)syncZoneID;
-(void)drainIncrementalOperations;
-(char)resetDatabaseWithError:(id*)arg1 ;
-(void)fetchRecordWithID:(id)arg1 fetchAssetContent:(char)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)configureCKOperation:(id)arg1 ;
-(CKRecordZoneID *)defaultZoneID;
-(void)setupWithCompletion:(/*^block*/id)arg1 ;
-(int)requestsToSupportBudget;
-(void)setRequestsToSupportBudget:(int)arg1 ;
-(int)batchCount;
-(void)setBatchCount:(int)arg1 ;
-(NSMutableArray *)batchCompletions;
-(void)setBatchCompletions:(NSMutableArray *)arg1 ;
-(MBCKBatchFetch *)batchFetch;
-(NSMutableArray *)runningBatchFetches;
-(void)setRunningBatchFetches:(NSMutableArray *)arg1 ;
-(void)setBatchFetch:(MBCKBatchFetch *)arg1 ;
-(MBCKBatchFetch *)noAssetBatchFetch;
-(void)setNoAssetBatchFetch:(MBCKBatchFetch *)arg1 ;
-(NSMutableDictionary *)batchSavesByPolicy;
-(NSMutableArray *)runningBatchSaves;
-(void)setRunningBatchSaves:(NSMutableArray *)arg1 ;
-(char)isBatching;
-(void)_immediatelyFetchRecordWithID:(id)arg1 fetchAssetContent:(char)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)setBatchSavesByPolicy:(NSMutableDictionary *)arg1 ;
-(void)_immediatelySaveRecord:(id)arg1 withDelegate:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(NSOperationQueue *)ckOperationQueue;
-(char)shouldSupportBudgeting;
-(void)setDefaultZoneID:(CKRecordZoneID *)arg1 ;
-(void)setSyncZoneID:(CKRecordZoneID *)arg1 ;
-(void)setCkOperationQueue:(NSOperationQueue *)arg1 ;
-(void)fetchRecordWithID:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(id)init;
-(CKContainer *)container;
-(void)setContainer:(CKContainer *)arg1 ;
-(void)cancelAllOperations;
-(char)allowsCellularAccess;
-(id)authPromptReason;
-(char)isSetup;
-(void)setIsSetup:(char)arg1 ;
-(void)setContainerID:(NSString *)arg1 ;
-(NSString *)containerID;
-(void)setAllowsCellularAccess:(char)arg1 ;
-(void)beginBatch;
-(CKDatabase *)database;
-(void)setQos:(int)arg1 ;
-(int)qos;
@end

