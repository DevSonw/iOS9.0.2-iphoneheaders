/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 6, 2015 at 2:38:34 PM Japan Standard Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /System/Library/PrivateFrameworks/GenerationalStorage.framework/revisiond
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <revisiond/revisiond-Structs.h>
#import <revisiond/GSPowerDelegate.h>
#import <revisiond/GSLowDiskDelegate.h>

@protocol OS_dispatch_group, OS_dispatch_queue;
@class NSMutableDictionary, PQLConnection, NSString, NSObject, GSLibraryState, NSUUID;

@interface GSManager : NSObject <GSPowerDelegate, GSLowDiskDelegate> {

	NSMutableDictionary* _metainfo;
	PQLConnection* _db;
	NSString* _dbPath;
	NSString* _purgatoryPath;
	int _libDirfd;
	NSMutableDictionary* _pendingDeleteDocuments;
	NSObject*<OS_dispatch_group> _operationsGroup;
	NSObject*<OS_dispatch_queue> _queue;
	NSObject*<OS_dispatch_queue> _backgroundQueue;
	int _invalidated;
	int _isCorrupt;
	char _powerIsOK;
	char _lowDisk;
	long _lastThinningScan;
	unsigned _lastThinningFlags;
	FSEventStreamRef _fseStream;
	char _isEnabled;
	char _isRootFS;
	char _isReadOnly;
	char _isIgnoringOwners;
	GSLibraryState* _state;
	int _volDirFd;
	NSString* _stagingPath;
	NSString* _libraryRoot;
	NSUUID* _volumeUUID;
	int _device;

}

@property (nonatomic,readonly) GSLibraryState * state;              //@synthesize state=_state - In the implementation block
@property (nonatomic,readonly) char isInconsistent; 
@property (nonatomic,readonly) char isInvalidated; 
@property (nonatomic,readonly) char isEnabled;                      //@synthesize isEnabled=_isEnabled - In the implementation block
@property (nonatomic,readonly) char isReadOnly;                     //@synthesize isReadOnly=_isReadOnly - In the implementation block
@property (nonatomic,readonly) char isRootFS;                       //@synthesize isRootFS=_isRootFS - In the implementation block
@property (assign,nonatomic) char isIgnoringOwners;                 //@synthesize isIgnoringOwners=_isIgnoringOwners - In the implementation block
@property (nonatomic,readonly) NSUUID * volumeUUID;                 //@synthesize volumeUUID=_volumeUUID - In the implementation block
@property (nonatomic,readonly) NSString * libraryRoot;              //@synthesize libraryRoot=_libraryRoot - In the implementation block
@property (nonatomic,readonly) NSString * stagingPath;              //@synthesize stagingPath=_stagingPath - In the implementation block
@property (nonatomic,readonly) int volDirFd;                        //@synthesize volDirFd=_volDirFd - In the implementation block
@property (nonatomic,readonly) int device;                          //@synthesize device=_device - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(id)initWithDisk:(const SCD_Struct_GS3*)arg1 createIfNone:(char)arg2 error:(id*)arg3 ;
-(void)validateLibrary;
-(NSString *)libraryRoot;
-(long long)purgeTryingToReclaimSpace:(long long)arg1 highUrgency:(char)arg2 ;
-(int)volDirFd;
-(NSUUID *)volumeUUID;
-(void)purgeWithCredential:(const GSCredential*)arg1 whilePredicateIsTrue:(/*^block*/id)arg2 done:(/*^block*/id)arg3 ;
-(void)resolveDocId:(unsigned long long)arg1 reply:(/*^block*/id)arg2 ;
-(NSString *)stagingPath;
-(void)extensionsForStorageID:(long long)arg1 credentials:(const GSCredential*)arg2 pubExt:(id*)arg3 privExt:(id*)arg4 ;
-(id)_getAddition:(long long)arg1 inNameSpace:(id)arg2 named:(id)arg3 credentials:(const GSCredential*)arg4 error:(id*)arg5 ;
-(id)_listAdditions:(long long)arg1 nameSpace:(id)arg2 withOptions:(unsigned long long)arg3 withoutOptions:(unsigned long long)arg4 andEnumerationState:(id)arg5 credentials:(const GSCredential*)arg6 ;
-(id)_setAdditionNameSpace:(long long)arg1 inNameSpace:(id)arg2 named:(id)arg3 newNameSpace:(id)arg4 credentials:(const GSCredential*)arg5 error:(id*)arg6 ;
-(id)_createAddition:(long long)arg1 creationInfo:(id)arg2 stagedPath:(id)arg3 credentials:(const GSCredential*)arg4 error:(id*)arg5 ;
-(void)_removeAllAdditions:(long long)arg1 inNameSpace:(id)arg2 credentials:(const GSCredential*)arg3 ;
-(char)_removeAddition:(long long)arg1 inNameSpace:(id)arg2 named:(id)arg3 credentials:(const GSCredential*)arg4 error:(id*)arg5 ;
-(char)isThrottlingIo;
-(void)_updateThrottlingProperty:(/*^block*/id)arg1 ;
-(void)_nukeStorageID:(long long)arg1 ;
-(void)_actOnDocidDeletion:(unsigned long long)arg1 row:(id)arg2 ;
-(void)_actOnDocidChange:(unsigned long long)arg1 src:(unsigned long long)arg2 dst:(unsigned long long)arg3 ;
-(char)_createLibraryWithDiskInfos:(const SCD_Struct_GS3*)arg1 createIfNone:(char)arg2 error:(out id*)arg3 ;
-(void)setIsInconsistent:(char)arg1 ;
-(char)_generationForsakeRow:(id)arg1 withCredential:(const GSCredential*)arg2 error:(out id*)arg3 ;
-(char)_thinningPrecompute:(char)arg1 error:(out id*)arg2 ;
-(long long)_purgeGenerationsWithCredentials:(const GSCredential*)arg1 ;
-(long long)_purgeAggressively:(unsigned long long*)arg1 credentials:(const GSCredential*)arg2 whilePredicateIsTrue:(/*^block*/id)arg3 ;
-(void)_purgeWithCredential:(const GSCredential*)arg1 tryingToFreeSpace:(long long)arg2 highUrgency:(char)arg3 whilePredicateIsTrue:(/*^block*/id)arg4 done:(/*^block*/id)arg5 ;
-(char)_forsakePath:(id)arg1 ;
-(void)_purgePurgatory;
-(char)_removeAdditionByRow:(id)arg1 credentials:(const GSCredential*)arg2 error:(id*)arg3 ;
-(char)_pathIsStaged:(id)arg1 ;
-(char)isIgnoringOwners;
-(id)_additionDictionary:(id)arg1 path:(id)arg2 ;
-(id)makeStoragePathForGenerationNamed:(id)arg1 storageID:(long long)arg2 clientID:(id)arg3 forUID:(unsigned)arg4 makePublic:(char)arg5 ;
-(void)_validateGenerationsStorage:(SCD_Struct_GS4*)arg1 forEntry:(ftsent*)arg2 forStorageId:(long long)arg3 andClientName:(id)arg4 ;
-(void)_validateGenerationsStorageTree:(const char*)arg1 atDepth:(int)arg2 ;
-(void)_validateGenerationsTable;
-(char)isInconsistent;
-(void)_fseventAtPaths:(const char**)arg1 flags:(const unsigned*)arg2 eventIds:(const unsigned long long*)arg3 count:(unsigned)arg4 ;
-(id)makeStagingPathForCredential:(const GSCredential*)arg1 prefix:(id)arg2 stagedName:(id)arg3 ;
-(void)cleanupStagingPath:(id)arg1 withCredential:(const GSCredential*)arg2 ;
-(char)isRootFS;
-(void)setIsIgnoringOwners:(char)arg1 ;
-(void)dealloc;
-(id)init;
-(NSString *)description;
-(GSLibraryState *)state;
-(char)isEnabled;
-(void)start;
-(void)_invalidate;
-(void)invalidate:(char)arg1 ;
-(int)device;
-(void)lowDiskStatusChangedForDevice:(int)arg1 hasEnoughSpace:(char)arg2 ;
-(void)powerLevelChanged:(char)arg1 ;
-(char)isInvalidated;
-(char)isReadOnly;
-(char)dispatchSync:(/*^block*/id)arg1 ;
@end

