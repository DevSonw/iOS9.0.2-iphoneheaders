/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 6, 2015 at 2:32:23 PM Japan Standard Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /System/Library/PrivateFrameworks/CoreDuet.framework/CoreDuet
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <libobjc.A.dylib/_CDInteractionRecording.h>
#import <libobjc.A.dylib/_CDInteractionQuerying.h>
#import <libobjc.A.dylib/_CDInteractionDeleting.h>

@protocol OS_dispatch_queue, _DKLocationHistorian;
@class _DKCoreDataStorage, NSObject, _CDInteractionStoreNotifier;

@interface _CDInteractionStore : NSObject <_CDInteractionRecording, _CDInteractionQuerying, _CDInteractionDeleting> {

	_DKCoreDataStorage* _storage;
	NSObject*<OS_dispatch_queue> _workQueue;
	_CDInteractionStoreNotifier* _notifier;
	id<_DKLocationHistorian> _locationHistorian;

}

@property (retain) id<_DKLocationHistorian> locationHistorian;              //@synthesize locationHistorian=_locationHistorian - In the implementation block
+(id)storeWithDirectory:(id)arg1 readOnly:(char)arg2 ;
+(id)defaultDatabaseDirectory;
-(id)init;
-(unsigned)countInteractionsUsingPredicate:(id)arg1 error:(id*)arg2 ;
-(id)queryInteractionsUsingPredicate:(id)arg1 sortDescriptors:(id)arg2 limit:(unsigned)arg3 error:(id*)arg4 ;
-(id)initWithDirectory:(id)arg1 readOnly:(char)arg2 ;
-(id)fetchOrCreateKeywordRecord:(id)arg1 context:(id)arg2 cache:(id)arg3 ;
-(id)fetchOrCreateContactRecord:(id)arg1 context:(id)arg2 cache:(id)arg3 ;
-(id)createKeywordFromRecord:(id)arg1 ;
-(id)getContactForRecord:(id)arg1 ;
-(id)createInteractionRecord:(id)arg1 context:(id)arg2 keywordCache:(id)arg3 contactCache:(id)arg4 ;
-(void)fillWithoutRelationshipsInteractionRecord:(id)arg1 fromInteraction:(id)arg2 ;
-(void)updateCachedStatsForContactRecord:(id)arg1 isSender:(char)arg2 withInteraction:(id)arg3 ;
-(id)dateFromTimeIntervalSinceRef:(double)arg1 ;
-(char)recordInteractions:(id)arg1 ;
-(char)recordInteractionsBatch:(id)arg1 ;
-(id)batchFetchExistingContactRecords:(id)arg1 context:(id)arg2 ;
-(id)batchFetchExistingKeywordRecords:(id)arg1 context:(id)arg2 ;
-(id)batchFetchExistingInteractionsWithUUIDs:(id)arg1 context:(id)arg2 ;
-(unsigned)countContactsUsingPredicate:(id)arg1 error:(id*)arg2 ;
-(id)createInteractionFromRecord:(id)arg1 ;
-(id)queryInteractionsUsingPredicate:(id)arg1 sortDescriptors:(id)arg2 limit:(unsigned)arg3 ;
-(id)queryContactsUsingPredicate:(id)arg1 sortDescriptors:(id)arg2 limit:(unsigned)arg3 error:(id*)arg4 ;
-(unsigned)deleteInteractionsMatchingPredicate:(id)arg1 sortDescriptors:(id)arg2 limit:(unsigned)arg3 error:(id*)arg4 ;
-(unsigned)deleteUnreferencedKeywords;
-(unsigned)deleteUnreferencedContacts;
-(unsigned)deleteInteractionsWithBundleId:(id)arg1 error:(id*)arg2 ;
-(unsigned)deleteInteractionsWithBundleId:(id)arg1 account:(id)arg2 error:(id*)arg3 ;
-(unsigned)deleteInteractionsWithBundleId:(id)arg1 domainIdentifier:(id)arg2 error:(id*)arg3 ;
-(void)anonymizeWithSalt:(id)arg1 ;
-(void)anonymizeContactsWithSalt:(id)arg1 ;
-(void)anonymizeKeywordsWithSalt:(id)arg1 ;
-(void)anonymizeInteractionsWithSalt:(id)arg1 ;
-(char)recordInteraction:(id)arg1 ;
-(void)recordInteractions:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)queryInteractionsUsingPredicate:(id)arg1 sortDescriptors:(id)arg2 limit:(unsigned)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)countInteractionsUsingPredicate:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)queryContactsUsingPredicate:(id)arg1 sortDescriptors:(id)arg2 limit:(unsigned)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)countContactsUsingPredicate:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)deleteInteractionsMatchingPredicate:(id)arg1 sortDescriptors:(id)arg2 limit:(unsigned)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)deleteInteractionsWithBundleId:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)deleteInteractionsWithBundleId:(id)arg1 account:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)deleteInteractionsWithBundleId:(id)arg1 domainIdentifier:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(id)initWithDatabasePath:(id)arg1 inDirectory:(id)arg2 ;
-(id)fetchOrCreateKeywordRecord:(id)arg1 context:(id)arg2 ;
-(id)fetchOrCreateContactRecord:(id)arg1 context:(id)arg2 ;
-(id)createInteractionRecord:(id)arg1 context:(id)arg2 ;
-(char)openAndCheckIfReadable;
-(unsigned)numberOfInteractionsMatchingPredicate:(id)arg1 ;
-(id)queryInteractionsUsingPredicate:(id)arg1 withLimit:(unsigned)arg2 ;
-(id)queryContactsUsingPredicate:(id)arg1 withLimit:(unsigned)arg2 error:(id*)arg3 ;
-(unsigned)numberOfContactsMatchingPredicate:(id)arg1 ;
-(id)queryContactInteractionsUsingPredicate:(id)arg1 withLimit:(unsigned)arg2 ;
-(id)histogramContactInteractionsUsingPredicate:(id)arg1 withLimit:(unsigned)arg2 ;
-(unsigned)deleteInteractionsOlderThanDate:(id)arg1 limit:(unsigned)arg2 ;
-(unsigned)deleteOldInteractionsIfNeededToLimitTotalNumber:(unsigned)arg1 limit:(unsigned)arg2 ;
-(int)queryVersionNumber;
-(char)recordVersionNumber:(int)arg1 ;
-(char)deleteStorage;
-(id)anonymizedCopyToDirectory:(id)arg1 salt:(id)arg2 ;
-(id<_DKLocationHistorian>)locationHistorian;
-(void)setLocationHistorian:(id<_DKLocationHistorian>)arg1 ;
@end

