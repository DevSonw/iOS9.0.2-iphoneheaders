/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 6, 2015 at 2:34:38 PM Japan Standard Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /System/Library/PrivateFrameworks/VoiceMemos.framework/VoiceMemos
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <VoiceMemos/VoiceMemos-Structs.h>
#import <libobjc.A.dylib/RCCaptureOutputWriterDelegate.h>
#import <libobjc.A.dylib/RCWaveformDataSourceObserver.h>

@protocol OS_dispatch_group;
@class RCCaptureOutputWriter, NSObject, RCAudioSessionRoutingAssertion, NSString, NSDate, NSHashTable, RCCaptureInputDevice, RCCaptureInputWaveformDataSource, RCAVState;

@interface RCCaptureSession : NSObject <RCCaptureOutputWriterDelegate, RCWaveformDataSourceObserver> {

	RCCaptureOutputWriter* _captureOutputWriter;
	unsigned _backgroundTaskIdentifier;
	NSObject*<OS_dispatch_group> _endCaptureTaskGroup;
	RCAudioSessionRoutingAssertion* _captureRouteAssertion;
	int _sessionCaptureState;
	NSString* _sessionRouteName;
	NSDate* _captureStartDate;
	char _handledFinishedCapturingAfterCompletionSound;
	char _handlingDidFinishCapturing;
	char _deleteCapturedOutWhenFinished;
	char _destinationShouldBeDeleted;
	char _captureBeginSoundEffectDisabled;
	char _captureEndSoundEffectDisabled;
	NSHashTable* _weakObservers;
	RCCaptureInputDevice* _inputDevice;
	RCCaptureInputWaveformDataSource* _captureWaveformDataSource;

}

@property (nonatomic,readonly) RCCaptureInputDevice * inputDevice;                                        //@synthesize inputDevice=_inputDevice - In the implementation block
@property (nonatomic,readonly) RCCaptureInputWaveformDataSource * captureWaveformDataSource;              //@synthesize captureWaveformDataSource=_captureWaveformDataSource - In the implementation block
@property (nonatomic,readonly) double captureDestinationComposedDuration; 
@property (nonatomic,readonly) char isCaptureSessionFinished; 
@property (nonatomic,readonly) RCAVState * AVState; 
@property (readonly) double storeDemoTimeLimit; 
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(void)playCaptureWillStartSoundEffectWithCompletionBlock:(/*^block*/id)arg1 ;
+(void)playCaptureDidFinishSoundEffectWithCompletionBlock:(/*^block*/id)arg1 ;
-(char)isPreparing;
-(void)dealloc;
-(id)init;
-(NSString *)description;
-(void)_captureInputDeviceAvailabilityDidChangeNotification:(id)arg1 ;
-(void)_captureInputDeviceRouteDidChangeNotification:(id)arg1 ;
-(void)_applicationWillTerminateNotification:(id)arg1 ;
-(char)_openAVCaptureSessionAndWaitUntilRunning;
-(void)_beginAVCapturingToDestinationInitiallyPaused:(char)arg1 ;
-(void)_closeCaptureSession;
-(void)resumeCapturing;
-(void)_setPostPrepareRequestedState:(int)arg1 ;
-(char)isCaptureActive;
-(char)isCapturePaused;
-(char)isCaptureSessionFinished;
-(void)_deleteCaptureDestinationAndPostDidEndNotification:(id)arg1 ;
-(void)finishCapturing;
-(double)storeDemoTimeLimit;
-(double)captureDestinationComposedDuration;
-(void)_postToObserversWithBlock:(/*^block*/id)arg1 ;
-(void)_handleCaptureSessionDidError:(id)arg1 ;
-(void)_setDisableSBMediaHUD:(char)arg1 ;
-(char)_handleFinishWritingByRestartingCaptureForError:(id)arg1 testOnly:(char)arg2 ;
-(void)_onMainQueueHandleCaptureDidFinishCapturingAfterCompletionSound;
-(void)_enumerateCaptureSessionObserversWithBlock:(/*^block*/id)arg1 ;
-(char)_attachInputToCaptureSession:(id)arg1 ;
-(void)captureOutputWriter:(id)arg1 captureSessionDidTerminateWithError:(id)arg2 ;
-(void)captureOutputWriter:(id)arg1 didStartWritingToOutputFileAtURL:(id)arg2 ;
-(void)captureOutputWriter:(id)arg1 didPauseWritingToOutputFileAtURL:(id)arg2 ;
-(void)captureOutputWriter:(id)arg1 didResumeWritingToOutputFileAtURL:(id)arg2 ;
-(void)captureOutputWriter:(id)arg1 willFinishWritingToOutputFileAtURL:(id)arg2 error:(id)arg3 ;
-(void)captureOutputWriter:(id)arg1 didFinishWritingToOutputFileAtURL:(id)arg2 error:(id)arg3 ;
-(void)captureOutputWriter:(id)arg1 didOutputSampleBuffer:(opaqueCMSampleBufferRef)arg2 ;
-(void)waveformDataSourceDidFinishLoading:(id)arg1 ;
-(void)waveformDataSource:(id)arg1 didLoadWaveformSegment:(id)arg2 ;
-(id)initWithInputDevice:(id)arg1 captureWaveformDataSource:(id)arg2 ;
-(void)addCaptureSessionObserver:(id)arg1 ;
-(void)removeCaptureSessionObserver:(id)arg1 ;
-(void)prepareToCaptureWithPreparedHandler:(/*^block*/id)arg1 ;
-(void)pauseCapturing;
-(char)canResumeCapturingAtCompositionDestinationTime:(double)arg1 ;
-(void)deleteCapturedOutWhenFinished;
-(RCAVState *)AVState;
-(void)disableCaptureBeginSoundEffect;
-(void)disableCaptureEndSoundEffect;
-(RCCaptureInputDevice *)inputDevice;
-(RCCaptureInputWaveformDataSource *)captureWaveformDataSource;
@end

