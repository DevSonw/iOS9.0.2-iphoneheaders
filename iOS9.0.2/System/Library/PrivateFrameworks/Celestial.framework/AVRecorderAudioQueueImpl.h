/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 6, 2015 at 2:32:06 PM Japan Standard Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /System/Library/PrivateFrameworks/Celestial.framework/Celestial
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <Celestial/Celestial-Structs.h>
#import <libobjc.A.dylib/AVRecorderImpl.h>

@class NSMutableDictionary, NSString;

@interface AVRecorderAudioQueueImpl : NSObject <AVRecorderImpl> {

	char _isActive;
	char _isRecording;
	char _isWriting;
	NSMutableDictionary* _attributes;
	unsigned long _fileType;
	unsigned long _audioCodec;
	long long _maxPCMFramesToRecord;
	char _haveRecordedMaxPCMFrames;
	AudioStreamBasicDescription _recordingFormat;
	OpaqueAudioFileIDRef _audioFile;
	OpaqueAudioQueueRef _audioQueue;
	unsigned long _numDeviceChannels;
	AudioQueueLevelMeterState* _audioLevels;
	AudioQueueLevelMeterState* _audioLevelsDB;
	unsigned long _totalBytesRecorded;
	unsigned long _totalPacketsRecorded;
	unsigned long _totalFramesRecorded;
	AudioQueueBuffer* _buffers[3];
	char _bufferUsed[3];

}

@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(char)takePhoto;
-(id)attributeForKey:(id)arg1 ;
-(char)autoFocusAtPoint:(CGPoint)arg1 ;
-(void)dealloc;
-(id)init;
-(char)isActive;
-(void)stop;
-(char)start;
-(void)deactivate;
-(void)setFilePath:(id)arg1 ;
-(id)filePath;
-(double)recordedDuration;
-(char)activate:(id*)arg1 ;
-(float)micVolume;
-(void)setMicVolume:(float)arg1 ;
-(long long)recordedFileSizeInBytes;
-(unsigned)audioNumDeviceChannels;
-(char)audioCurrentAverageVolumeLevels:(float*)arg1 andPeakVolumeLevels:(float*)arg2 ;
-(char)audioCurrentAverageDecibelLevels:(float*)arg1 andPeakDecibelLevels:(float*)arg2 ;
-(void)copyEncoderCookieToFile;
-(char)audioCurrentAverageVolumeLevels:(float*)arg1 andPeakVolumeLevels:(float*)arg2 useDB:(char)arg3 ;
-(void)haveABuffer:(AudioQueueBuffer*)arg1 withTimeStamp:(const AudioTimeStamp*)arg2 andNumPackets:(unsigned long)arg3 andPacketDescs:(const AudioStreamPacketDescription*)arg4 ;
-(char)isRecording;
-(void)setAttribute:(id)arg1 forKey:(id)arg2 ;
-(id)initWithAttributes:(id)arg1 ;
@end

