/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 6, 2015 at 2:32:14 PM Japan Standard Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /System/Library/PrivateFrameworks/CloudKitDaemon.framework/CloudKitDaemon
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <libobjc.A.dylib/CKDAccountInfoProvider.h>

@class ACAccountType, CKDBackingAccount, CKDClientContext, NSString, ACAccountStore;

@interface CKDAccount : NSObject <CKDAccountInfoProvider> {

	char _isUnitTestingAccount;
	char _accountWantsPushRegistration;
	char _isAnonymousAccount;
	char _haveWarnedAboutServerPreferredPushEnvironment;
	ACAccountType* _acAccountType;
	CKDBackingAccount* _backingAccount;
	CKDClientContext* _context;

}

@property (nonatomic,readonly) NSString * accountIdentifier; 
@property (nonatomic,readonly) char isFakeAccount; 
@property (assign,nonatomic) char isUnitTestingAccount;                                       //@synthesize isUnitTestingAccount=_isUnitTestingAccount - In the implementation block
@property (assign,nonatomic) char accountWantsPushRegistration;                               //@synthesize accountWantsPushRegistration=_accountWantsPushRegistration - In the implementation block
@property (nonatomic,readonly) char allowsCellularAccess; 
@property (nonatomic,readonly) char cloudKitIsEnabled; 
@property (nonatomic,readonly) char cloudPhotosIsEnabled; 
@property (nonatomic,readonly) ACAccountStore * accountStore; 
@property (nonatomic,retain) ACAccountType * acAccountType;                                   //@synthesize acAccountType=_acAccountType - In the implementation block
@property (nonatomic,readonly) NSString * accountID; 
@property (nonatomic,readonly) CKDBackingAccount * backingAccount;                            //@synthesize backingAccount=_backingAccount - In the implementation block
@property (assign,nonatomic,__weak) CKDClientContext * context;                               //@synthesize context=_context - In the implementation block
@property (assign,nonatomic) char isAnonymousAccount;                                         //@synthesize isAnonymousAccount=_isAnonymousAccount - In the implementation block
@property (assign,nonatomic) char haveWarnedAboutServerPreferredPushEnvironment;              //@synthesize haveWarnedAboutServerPreferredPushEnvironment=_haveWarnedAboutServerPreferredPushEnvironment - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) char canAccessAccount; 
-(ACAccountStore *)accountStore;
-(id)bundleID;
-(NSString *)description;
-(CKDClientContext *)context;
-(id)_initWithContext:(id)arg1 ;
-(void)setContext:(CKDClientContext *)arg1 ;
-(id)languageCode;
-(id)deviceName;
-(char)isAnonymousAccount;
-(char)canAccessAccount;
-(void)fetchContainerScopedUserIDUsingBackgroundSession:(char)arg1 allowsCellularAccess:(char)arg2 withCompletionHandler:(/*^block*/id)arg3 ;
-(char)isUnitTestingAccount;
-(id)serverPreferredPushEnvironment;
-(id)initAnonymousAccountWithContext:(id)arg1 ;
-(id)initFakeAccountWithEmail:(id)arg1 password:(id)arg2 context:(id)arg3 ;
-(id)initPrimaryAccountWithContext:(id)arg1 ;
-(void)setIsUnitTestingAccount:(char)arg1 ;
-(char)accountWantsPushRegistration;
-(void)setAccountWantsPushRegistration:(char)arg1 ;
-(char)cloudPhotosIsEnabled;
-(char)cloudKitIsEnabled;
-(id)config;
-(char)isFakeAccount;
-(id)containerScopedUserID;
-(id)applicationBundle;
-(char)allowsCellularAccess;
-(id)trafficContainerIdentifier;
-(id)hardwareID;
-(id)regionCode;
-(id)enabledKeyboards;
-(void)renewAuthTokenWithReason:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)fetchConfigurationUsingBackgroundSession:(char)arg1 allowsCellularAccess:(char)arg2 withCompletionHandler:(/*^block*/id)arg3 ;
-(void)resetMescalSession;
-(void)renewMescalSessionForRequest:(id)arg1 withCompletionHandler:(/*^block*/id)arg2 ;
-(id)baseURLForServerType:(int)arg1 partitionType:(int)arg2 ;
-(void)fetchPublicURLUsingBackgroundSession:(char)arg1 allowsCellularAccess:(char)arg2 serverType:(int)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)fetchDeviceIDUsingBackgroundSession:(char)arg1 allowsCellularAccess:(char)arg2 withCompletionHandler:(/*^block*/id)arg3 ;
-(char)shouldFailAllTasks;
-(id)cloudKitAuthToken;
-(void)noteTimeSpentInNetworking:(double)arg1 ;
-(void)noteSuccessfulRequestWithNumDownloadedElements:(int)arg1 ;
-(id)iCloudAuthToken;
-(NSString *)accountID;
-(CKDBackingAccount *)backingAccount;
-(char)haveWarnedAboutServerPreferredPushEnvironment;
-(void)setHaveWarnedAboutServerPreferredPushEnvironment:(char)arg1 ;
-(id)_urlBySettingCustomBaseURL:(id)arg1 onURL:(id)arg2 ;
-(void)noteFailedNetworkRequest;
-(void)noteFailedProtocolRequest;
-(id)initWithAccountID:(id)arg1 context:(id)arg2 ;
-(ACAccountType *)acAccountType;
-(void)setAcAccountType:(ACAccountType *)arg1 ;
-(void)setIsAnonymousAccount:(char)arg1 ;
-(id)containerID;
-(NSString *)accountIdentifier;
-(id)dsid;
-(id)mescalSession;
@end

