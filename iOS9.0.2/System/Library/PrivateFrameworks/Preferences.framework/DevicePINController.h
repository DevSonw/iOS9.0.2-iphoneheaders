/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 6, 2015 at 2:33:54 PM Japan Standard Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /System/Library/PrivateFrameworks/Preferences.framework/Preferences
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <Preferences/Preferences-Structs.h>
#import <Preferences/PSDetailController.h>

@class NSString, UIBarButtonItem, NSDictionary, NSNumber;

@interface DevicePINController : PSDetailController {

	int _mode;
	int _substate;
	NSString* _oldPassword;
	NSString* _lastEntry;
	char _success;
	id _pinDelegate;
	UIBarButtonItem* _cancelButton;
	UIBarButtonItem* _nextButton;
	UIBarButtonItem* _doneButton;
	NSString* _error1;
	NSString* _error2;
	char _hasBeenDismissed;
	long _sepOnceToken;
	NSDictionary* _sepLockInfo;
	char _useSEPLockInfo;
	NSNumber* _requiresKeyboard;
	NSNumber* _pinLength;
	NSNumber* _simplePIN;
	NSNumber* _numericPIN;
	char _hidesNavigationButtons;
	char _hidesCancelButton;
	char _shouldDismissWhenDone;
	char _allowOptionsButton;
	NSString* _doneButtonTitle;

}

@property (assign,nonatomic,__weak) id<DevicePINControllerDelegate> pinDelegate;              //@synthesize pinDelegate=_pinDelegate - In the implementation block
@property (assign,nonatomic) char hidesNavigationButtons;                                     //@synthesize hidesNavigationButtons=_hidesNavigationButtons - In the implementation block
@property (assign,nonatomic) char hidesCancelButton;                                          //@synthesize hidesCancelButton=_hidesCancelButton - In the implementation block
@property (assign,nonatomic) char shouldDismissWhenDone;                                      //@synthesize shouldDismissWhenDone=_shouldDismissWhenDone - In the implementation block
@property (nonatomic,copy) NSString * doneButtonTitle;                                        //@synthesize doneButtonTitle=_doneButtonTitle - In the implementation block
@property (assign,nonatomic) char requiresKeyboard; 
@property (assign,nonatomic) int pinLength; 
@property (assign,nonatomic) char simplePIN; 
@property (assign,getter=isNumericPIN,nonatomic) char numericPIN; 
@property (assign,nonatomic) char allowOptionsButton;                                         //@synthesize allowOptionsButton=_allowOptionsButton - In the implementation block
+(char)settingEnabled;
-(char)isBlocked;
-(void)dealloc;
-(id)init;
-(id)title;
-(void)suspend;
-(void)loadView;
-(void)viewWillLayoutSubviews;
-(void)viewWillAppear:(char)arg1 ;
-(void)viewDidAppear:(char)arg1 ;
-(void)viewWillDisappear:(char)arg1 ;
-(void)setMode:(int)arg1 ;
-(int)mode;
-(void)_dismiss;
-(void)setPane:(id)arg1 ;
-(void)setSpecifier:(id)arg1 ;
-(void)setAllowOptionsButton:(char)arg1 ;
-(void)willUnlock;
-(char)requiresKeyboard;
-(char)useProgressiveDelays;
-(void)_rereadBlockedState;
-(void)_updateUI;
-(CFStringRef)defaultsID;
-(CGSize)overallContentSizeForViewInPopover;
-(char)validatePIN:(id)arg1 ;
-(char)isCreatingPasscode;
-(char)isNumericPIN;
-(int)_getScreenType;
-(int)_simplePasscodeType;
-(CFStringRef)failedAttemptsKey;
-(CFStringRef)blockTimeIntervalKey;
-(CFStringRef)blockedStateKey;
-(id)_sepLockInfo;
-(char)_useSEPLockInfo;
-(void)_invalidateSEPLockInfo;
-(double)blockedTimeRemaining;
-(double)unblockTime;
-(long)numberOfFailedAttempts;
-(void)_setNumberOfFailedAttempts:(long)arg1 ;
-(double)_secondsToBlockForFailedAttempts:(long)arg1 ;
-(void)_setUnblockTime:(double)arg1 ;
-(void)_clearBlockedState;
-(void)_adjustUnblockTime;
-(id)stringsBundle;
-(id)stringsTable;
-(void)_showFailedAttempts;
-(void)_updateErrorTextAndFailureCount:(char)arg1 ;
-(void)cancelButtonTapped;
-(char)simplePIN;
-(char)showSimplePINCancelButtonOnLeft;
-(void)adjustButtonsForPasswordLength:(unsigned)arg1 ;
-(id)pinPane;
-(int)pinLength;
-(char)_shouldShowOptionsButton;
-(void)_updatePINButtons;
-(char)pinIsAcceptable:(id)arg1 outError:(id*)arg2 ;
-(void)setLastEntry:(id)arg1 ;
-(void)_slidePasscodeFieldLeft:(char)arg1 ;
-(void)_showUnacceptablePINError:(id)arg1 password:(id)arg2 ;
-(char)completedInputIsValid:(id)arg1 ;
-(void)performActionAfterPINSet;
-(id<DevicePINControllerDelegate>)pinDelegate;
-(char)_asyncSetPinCompatible;
-(void)setPIN:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)setPIN:(id)arg1 ;
-(void)_showPINConfirmationError;
-(char)attemptValidationWithPIN:(id)arg1 ;
-(void)setOldPassword:(id)arg1 ;
-(void)performActionAfterPINRemove;
-(void)performActionAfterPINEntry;
-(id)passcodeOptionsAlertController;
-(void)setPinLength:(int)arg1 ;
-(void)setSimplePIN:(char)arg1 ;
-(void)setNumericPIN:(char)arg1 ;
-(void)_setPINPaneToSimple:(char)arg1 simpleLength:(int)arg2 numeric:(char)arg3 requiresKeyboard:(int)arg4 ;
-(void)showPasscodeOptions:(id)arg1 ;
-(void)setRequiresKeyboard:(char)arg1 ;
-(void)pinEntered:(id)arg1 ;
-(id)pinInstructionsPrompt;
-(id)pinInstructionsPromptFont;
-(void)setPinDelegate:(id<DevicePINControllerDelegate>)arg1 ;
-(char)hidesNavigationButtons;
-(void)setHidesNavigationButtons:(char)arg1 ;
-(char)hidesCancelButton;
-(void)setHidesCancelButton:(char)arg1 ;
-(char)shouldDismissWhenDone;
-(void)setShouldDismissWhenDone:(char)arg1 ;
-(NSString *)doneButtonTitle;
-(void)setDoneButtonTitle:(NSString *)arg1 ;
-(char)allowOptionsButton;
-(char)success;
-(void)setSuccess:(char)arg1 ;
@end

