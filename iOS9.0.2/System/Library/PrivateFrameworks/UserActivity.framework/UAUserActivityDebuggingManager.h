/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 6, 2015 at 2:34:37 PM Japan Standard Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /System/Library/PrivateFrameworks/UserActivity.framework/UserActivity
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


@protocol OS_dispatch_source, OS_dispatch_queue;
#import <UserActivity/UserActivity-Structs.h>
@class NSUserDefaults, NSString, NSObject, NSFileHandle;

@interface UAUserActivityDebuggingManager : NSObject {

	asl_object_sRef _client;
	NSUserDefaults* _userDefaults;
	NSString* _logFileDirectoryPath;
	NSString* _logFilePath;
	int _additionalLogFile;
	NSObject*<OS_dispatch_source> _logRotationTimerSource;
	unsigned long long _lastLogRotationTime;
	char _loggingEnabled;
	char _queueLogs;
	NSObject*<OS_dispatch_queue> _logQueue;
	char _isServer;
	NSFileHandle* _additionalLogFileHandle;

}

@property (readonly) char loggingEnabled; 
@property (assign) asl_object_sRef client;                                            //@synthesize client=_client - In the implementation block
@property (copy) NSString * logFileDirectoryPath;                                     //@synthesize logFileDirectoryPath=_logFileDirectoryPath - In the implementation block
@property (copy) NSString * logFilePath;                                              //@synthesize logFilePath=_logFilePath - In the implementation block
@property (assign) int additionalLogFile;                                             //@synthesize additionalLogFile=_additionalLogFile - In the implementation block
@property (retain) NSFileHandle * additionalLogFileHandle;                            //@synthesize additionalLogFileHandle=_additionalLogFileHandle - In the implementation block
@property (readonly) char logFileEnabled; 
@property (assign) unsigned long long lastLogRotationTime;                            //@synthesize lastLogRotationTime=_lastLogRotationTime - In the implementation block
@property (assign) NSObject*<OS_dispatch_source> logRotationTimerSource;              //@synthesize logRotationTimerSource=_logRotationTimerSource - In the implementation block
@property (assign) char isServer;                                                     //@synthesize isServer=_isServer - In the implementation block
@property (assign) char queueLogs; 
+(void)log:(int)arg1 format:(id)arg2 ;
+(id)hexDataDump:(id)arg1 ;
+(id)sharedDebugManager;
-(void)setLoggingLevel:(int)arg1 ;
-(void)setLogFileDirectoryPath:(NSString *)arg1 ;
-(NSString *)logFileDirectoryPath;
-(void)deleteExtraLogFiles;
-(void)rotateLogFiles;
-(void)setLogRotationTimerSource:(NSObject*<OS_dispatch_source>)arg1 ;
-(NSObject*<OS_dispatch_source>)logRotationTimerSource;
-(void)doRotateLogFiles;
-(int)additionalLogFile;
-(void)setAdditionalLogFile:(int)arg1 ;
-(double)logRotationTimeInSeconds;
-(unsigned long long)lastLogRotationTime;
-(char)logFileEnabled;
-(void)setLastLogRotationTime:(unsigned long long)arg1 ;
-(int)logRotationMaximumFiles;
-(char)shouldLogCommon:(unsigned)arg1 ;
-(void)log:(int)arg1 format:(id)arg2 args:(void*)arg3 ;
-(void)log:(int)arg1 format:(id)arg2 args:(void*)arg3 file:(const char*)arg4 line:(long)arg5 ;
-(void)log:(int)arg1 format:(id)arg2 ;
-(void)log:(int)arg1 file:(const char*)arg2 line:(long)arg3 format:(id)arg4 ;
-(void)logCommon:(unsigned)arg1 format:(id)arg2 args:(void*)arg3 ;
-(char)shouldLog:(int)arg1 ;
-(void)log:(int)arg1 common:(char)arg2 format:(id)arg3 args:(void*)arg4 file:(const char*)arg5 line:(long)arg6 ;
-(void)dealloc;
-(id)init;
-(void)suspend;
-(void)resume;
-(NSString *)logFilePath;
-(void)setLogFilePath:(NSString *)arg1 ;
-(char)loggingEnabled;
-(asl_object_sRef)client;
-(char)isServer;
-(void)setQueueLogs:(char)arg1 ;
-(void)updateDebugging:(char)arg1 logFileHandle:(id)arg2 ;
-(void)rotateLogFile:(id)arg1 ;
-(void)setAdditionalLogFileHandle:(NSFileHandle *)arg1 ;
-(char)queueLogs;
-(void)updateClientDebugInfo:(id)arg1 ;
-(void)reloadConfig;
-(NSFileHandle *)additionalLogFileHandle;
-(void)setIsServer:(char)arg1 ;
-(void)setClient:(asl_object_sRef)arg1 ;
@end

