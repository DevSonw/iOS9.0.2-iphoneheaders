/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 6, 2015 at 2:34:08 PM Japan Standard Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /System/Library/PrivateFrameworks/SafariShared.framework/SafariShared
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <SafariShared/SafariShared-Structs.h>
#import <libobjc.A.dylib/CLLocationManagerDelegate.h>

@protocol OS_dispatch_queue, WBSParsecSearchClientStorage;
@class NSURLSessionConfiguration, NSTimer, NSString, NSMutableDictionary, NSURL, CLLocationManager, NSArray, NSThread, NSObject, WBSParsecSearchMescalSession, NSMutableArray, NSNumber, CLLocation, NSURLQueryItem;

@interface WBSParsecSearchClient : NSObject <CLLocationManagerDelegate> {

	NSURLSessionConfiguration* _urlSessionConfiguration;
	NSTimer* _updateTimer;
	NSString* _customFlight;
	NSString* _userAgent;
	char _usesLedBelly;
	double _configurationUpdateInterval;
	NSMutableDictionary* _bagImageData;
	NSMutableDictionary* _bagImages;
	NSURL* _userGUIDURL;
	NSURL* _userGUIDFallbackURL;
	NSURL* _feedbackURL;
	NSURL* _feedbackFallbackURL;
	NSString* _userGUID;
	NSTimer* _userGUIDExpirationTimer;
	char _userGUIDEnabled;
	CLLocationManager* _locationManager;
	NSArray* _supportedGeolocationServices;
	NSArray* _recentlyUsedAppIdentifierWhitelist;
	NSString* _recentlyUsedAppIdentifierListString;
	NSString* _storeFrontIdentifier;
	int ipChangeNotificationToken;
	NSString* _deviceIP;
	NSThread* _locationThread;
	char _updatingLocation;
	double _timeAfterWhichLocationShouldBeUpdated;
	NSMutableDictionary* _screenScaleToSpriteImageDictionary;
	NSMutableDictionary* _screenScaleToSpriteMapDictionary;
	char _mescalEnabled;
	NSURL* _mescalCertificateURL;
	NSURL* _mescalSetupURL;
	unsigned _mescalVersionNumber;
	NSObject*<OS_dispatch_queue> _feedbackQueue;
	WBSParsecSearchMescalSession* _mescalSession;
	char _creatingMescalSession;
	NSMutableArray* _feedbackQueuedWhileCreatingMescalSession;
	NSString* _bagForceFetchVersion;
	char _valid;
	char _enabled;
	char _hasCompletedBagFetch;
	char _safeModeEnabled;
	char _feedbackEnabled;
	NSArray* _supportedDomainIdentifiers;
	id<WBSParsecSearchClientStorage> _storage;
	NSNumber* _searchRenderTimeout;
	NSNumber* _otherRenderTimeout;
	CLLocation* _location;
	NSArray* _enabledDomains;
	NSString* _firstUseDescriptionText;
	NSString* _firstUseLearnMoreText;
	NSString* _geoUserSessionEntitySessionIDString;
	NSArray* _subscriptionProviderDomainWhitelist;
	NSArray* _subscriptionProviderBundleIdentifierWhitelist;
	NSURL* _searchURL;
	NSURL* _searchFallbackURL;
	NSArray* _optionalQueryItems;
	unsigned _minimumQueryLength;
	unsigned _maximumCachedResultsToSend;
	unsigned _maximumCachedQueriesToSend;
	double _locationCachingInterval;
	double _subscriptionTTL;
	double _minimumIntervalBetweenQueriesFromBag;
	double _minimumIntervalBetweenQueriesFromSearchResponse;
	time_point<std::__1::chrono::steady_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000000> > > _latestQueryTimestamp;

}

@property (getter=isValid,nonatomic,readonly) char valid;                                                      //@synthesize valid=_valid - In the implementation block
@property (getter=isEnabled,nonatomic,readonly) char enabled;                                                  //@synthesize enabled=_enabled - In the implementation block
@property (nonatomic,readonly) char hasCompletedBagFetch;                                                      //@synthesize hasCompletedBagFetch=_hasCompletedBagFetch - In the implementation block
@property (nonatomic,copy) NSArray * supportedDomainIdentifiers;                                               //@synthesize supportedDomainIdentifiers=_supportedDomainIdentifiers - In the implementation block
@property (nonatomic,readonly) id<WBSParsecSearchClientStorage> storage;                                       //@synthesize storage=_storage - In the implementation block
@property (assign,nonatomic) char safeModeEnabled;                                                             //@synthesize safeModeEnabled=_safeModeEnabled - In the implementation block
@property (nonatomic,readonly) NSNumber * searchRenderTimeout;                                                 //@synthesize searchRenderTimeout=_searchRenderTimeout - In the implementation block
@property (nonatomic,readonly) NSNumber * otherRenderTimeout;                                                  //@synthesize otherRenderTimeout=_otherRenderTimeout - In the implementation block
@property (nonatomic,readonly) CLLocation * location;                                                          //@synthesize location=_location - In the implementation block
@property (nonatomic,readonly) NSArray * enabledDomains;                                                       //@synthesize enabledDomains=_enabledDomains - In the implementation block
@property (nonatomic,readonly) NSString * firstUseDescriptionText;                                             //@synthesize firstUseDescriptionText=_firstUseDescriptionText - In the implementation block
@property (nonatomic,readonly) NSString * firstUseLearnMoreText;                                               //@synthesize firstUseLearnMoreText=_firstUseLearnMoreText - In the implementation block
@property (nonatomic,readonly) NSArray * debuggingQueryItems; 
@property (nonatomic,readonly) NSString * geoUserSessionEntitySessionIDString;                                 //@synthesize geoUserSessionEntitySessionIDString=_geoUserSessionEntitySessionIDString - In the implementation block
@property (assign,nonatomic) double locationCachingInterval;                                                   //@synthesize locationCachingInterval=_locationCachingInterval - In the implementation block
@property (nonatomic,readonly) NSArray * subscriptionProviderDomainWhitelist;                                  //@synthesize subscriptionProviderDomainWhitelist=_subscriptionProviderDomainWhitelist - In the implementation block
@property (nonatomic,readonly) NSArray * subscriptionProviderBundleIdentifierWhitelist;                        //@synthesize subscriptionProviderBundleIdentifierWhitelist=_subscriptionProviderBundleIdentifierWhitelist - In the implementation block
@property (nonatomic,readonly) double subscriptionTTL;                                                         //@synthesize subscriptionTTL=_subscriptionTTL - In the implementation block
@property (assign,setter=test_setHasCompletedBagFetch:,nonatomic) char test_hasCompletedBagFetch; 
@property (assign,setter=test_setEnabled:,getter=test_isEnabled,nonatomic) char test_enabled; 
@property (assign,setter=test_setValid:,getter=test_isValid,nonatomic) char test_valid; 
@property (nonatomic,readonly) NSObject*<OS_dispatch_queue> test_feedbackQueue; 
@property (nonatomic,readonly) double minimumIntervalBetweenQueriesFromBag;                                    //@synthesize minimumIntervalBetweenQueriesFromBag=_minimumIntervalBetweenQueriesFromBag - In the implementation block
@property (assign,nonatomic) double minimumIntervalBetweenQueriesFromSearchResponse;                           //@synthesize minimumIntervalBetweenQueriesFromSearchResponse=_minimumIntervalBetweenQueriesFromSearchResponse - In the implementation block
@property (assign,nonatomic) time_point<std::__1::chrono::steady_clock latestQueryTimestamp;                   //@synthesize latestQueryTimestamp=_latestQueryTimestamp - In the implementation block
@property (nonatomic,readonly) NSURL * searchURL;                                                              //@synthesize searchURL=_searchURL - In the implementation block
@property (nonatomic,readonly) NSURL * searchFallbackURL;                                                      //@synthesize searchFallbackURL=_searchFallbackURL - In the implementation block
@property (nonatomic,readonly) NSArray * optionalQueryItems;                                                   //@synthesize optionalQueryItems=_optionalQueryItems - In the implementation block
@property (nonatomic,readonly) unsigned minimumQueryLength;                                                    //@synthesize minimumQueryLength=_minimumQueryLength - In the implementation block
@property (nonatomic,readonly) unsigned maximumCachedResultsToSend;                                            //@synthesize maximumCachedResultsToSend=_maximumCachedResultsToSend - In the implementation block
@property (nonatomic,readonly) unsigned maximumCachedQueriesToSend;                                            //@synthesize maximumCachedQueriesToSend=_maximumCachedQueriesToSend - In the implementation block
@property (nonatomic,readonly) char feedbackEnabled;                                                           //@synthesize feedbackEnabled=_feedbackEnabled - In the implementation block
@property (nonatomic,readonly) NSURLQueryItem * secretKeyQueryItem; 
@property (nonatomic,readonly) NSURLSessionConfiguration * urlSessionConfiguration;                            //@synthesize urlSessionConfiguration=_urlSessionConfiguration - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)_preferredLanguages;
+(id)existingSharedClient;
+(Class)storageClass;
+(id)applicationNameForUserAgent;
+(id)sharedClient;
-(id<WBSParsecSearchClientStorage>)storage;
-(void)startUpdatingLocation;
-(void)stopUpdatingLocation;
-(void)locationManager:(id)arg1 didChangeAuthorizationStatus:(int)arg2 ;
-(void)locationManager:(id)arg1 didUpdateLocations:(id)arg2 ;
-(id)init;
-(void)invalidate;
-(char)isValid;
-(char)isEnabled;
-(CLLocation *)location;
-(NSURL *)searchURL;
-(id)imageForIdentifier:(id)arg1 withScale:(float)arg2 ;
-(void)reinitialize;
-(void)_updateStoreFrontIdentifier;
-(void)_storeFrontIdentifierDidChange:(id)arg1 ;
-(void)_fetchConfiguration;
-(void)_currentLocaleDidChange:(id)arg1 ;
-(void)_updateOptionalQueryItems;
-(void)_setUserGUID:(id)arg1 expirationDate:(id)arg2 ;
-(void)_performBlockOnLocationThreadAndWait:(/*^block*/id)arg1 ;
-(void)_fetchUserGUIDIfNeeded;
-(void)_createMescalSession;
-(void)_performBlockOnLocationThread:(/*^block*/id)arg1 ;
-(id)_locationSourceForLocation:(id)arg1 ;
-(NSURLQueryItem *)secretKeyQueryItem;
-(NSArray *)debuggingQueryItems;
-(void)resetUserGUID;
-(void)_updateUserGUIDExpirationTimerWithDate:(id)arg1 ;
-(void)updateURLSessionConfiguration;
-(id)_localeQueryItem;
-(id)_customFlightQueryItem;
-(void)_processBagFetchResponseData:(id)arg1 response:(id)arg2 error:(id)arg3 ;
-(void)networkRequestDidFailWithError:(id)arg1 response:(id)arg2 ;
-(void)_updateBagFetchInterval:(id)arg1 ;
-(void)_requestDeviceIP;
-(void)_setUpLocationServicesWithBagInfo:(id)arg1 ;
-(void)updateRecentlyUsedAppIdentifiers;
-(void)_generateSpriteImagesFromArray:(id)arg1 ;
-(void)_configureMescalFromDictionary:(id)arg1 ;
-(char)_hasLocationServicesEffectiveBundleEntitlement;
-(void)sendGeneratedFeedback:(id)arg1 ;
-(void)_createMescalSessionWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)_processMescalCertificatePropertyListData:(id)arg1 error:(id)arg2 withURLSession:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)_processMescalSetupPropertyListData:(id)arg1 error:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)_refreshGEOUserSession;
-(void)_userGUIDExpirationTimerDidFire:(id)arg1 ;
-(void)_performBlockOnLocationThread:(/*^block*/id)arg1 wait:(char)arg2 ;
-(void)_locationThread;
-(void)_performBlock:(/*^block*/id)arg1 ;
-(void)_setDeviceIP:(id)arg1 ;
-(id)_initForTesting;
-(void)setSupportedDomainIdentifiers:(NSArray *)arg1 ;
-(void)setSafeModeEnabled:(char)arg1 ;
-(id)locationSource;
-(void)test_processMescalSetupPropertyListData:(id)arg1 error:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)sessionDidReceiveForceFetchRequest:(id)arg1 ;
-(char)test_hasCompletedBagFetch;
-(void)test_setHasCompletedBagFetch:(char)arg1 ;
-(char)test_isEnabled;
-(void)test_setEnabled:(char)arg1 ;
-(char)test_isValid;
-(void)test_setValid:(char)arg1 ;
-(NSObject*<OS_dispatch_queue>)test_feedbackQueue;
-(char)hasCompletedBagFetch;
-(NSArray *)supportedDomainIdentifiers;
-(char)safeModeEnabled;
-(NSNumber *)searchRenderTimeout;
-(NSNumber *)otherRenderTimeout;
-(NSArray *)enabledDomains;
-(NSString *)firstUseDescriptionText;
-(NSString *)firstUseLearnMoreText;
-(NSString *)geoUserSessionEntitySessionIDString;
-(double)locationCachingInterval;
-(void)setLocationCachingInterval:(double)arg1 ;
-(NSArray *)subscriptionProviderDomainWhitelist;
-(NSArray *)subscriptionProviderBundleIdentifierWhitelist;
-(double)subscriptionTTL;
-(double)minimumIntervalBetweenQueriesFromBag;
-(double)minimumIntervalBetweenQueriesFromSearchResponse;
-(void)setMinimumIntervalBetweenQueriesFromSearchResponse:(double)arg1 ;
-(time_point<std::__1::chrono::steady_clock)latestQueryTimestamp;
-(void)setLatestQueryTimestamp:(time_point<std::__1::chrono::steady_clock)arg1 ;
-(NSURL *)searchFallbackURL;
-(NSArray *)optionalQueryItems;
-(unsigned)minimumQueryLength;
-(unsigned)maximumCachedResultsToSend;
-(unsigned)maximumCachedQueriesToSend;
-(char)feedbackEnabled;
-(NSURLSessionConfiguration *)urlSessionConfiguration;
@end

