/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 6, 2015 at 2:38:03 PM Japan Standard Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /System/Library/PrivateFrameworks/AssistantServices.framework/assistantd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <assistantd/assistantd-Structs.h>
#import <assistantd/ADStreamProviderDelegate.h>
#import <assistantd/ADPeerStreamConnectionDelegate.h>

@protocol OS_dispatch_queue, OS_dispatch_source;
@class NSObject, ADPeerStreamConnection, NSUUID, NSMutableData, ADNetworkStreamProvider, NSURL, NSString;

@interface ADSiriConnectionRemote : NSObject <ADStreamProviderDelegate, ADPeerStreamConnectionDelegate> {

	NSObject*<OS_dispatch_queue> _queue;
	ADPeerStreamConnection* _peerConnection;
	NSUUID* _peerConnectionUUID;
	CFReadStreamRef _peerReadStream;
	CFWriteStreamRef _peerWriteStream;
	NSMutableData* _peerOutputBuffer;
	NSMutableData* _networkOutputBuffer;
	ADNetworkStreamProvider* _networkStreamProvider;
	CFReadStreamRef _networkReadStream;
	CFWriteStreamRef _networkWriteStream;
	char _dataHasBeenWrittenToNetwork;
	NSObject*<OS_dispatch_source> _staleNetworkTimerSource;
	unsigned char _buffer[4096];
	NSURL* _networkURLFromPeer;
	NSURL* _networkURL;
	CFHTTPMessageRef _outgoingHTTPHeader;
	char _isEstablishingPeerStreams;
	char _isEstablishingNetworkStreams;
	NSMutableData* _safetyNetBuffer;
	unsigned _ioConnect;
	IONotificationPortRef _ioNotificationPortRef;
	unsigned _ioNotifier;
	unsigned _metricsCount;
	double _currentStartTime;
	double _firstStartTime;
	double _currentOpenTime;
	double _firstByteReadTime;
	unsigned _startCount;

}

@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(id)_peerConnection;
-(void)_unregisterForSleepNotification;
-(void)_registerForSleepNotification;
-(void)_powerChangedMessageType:(unsigned)arg1 notificationID:(long)arg2 ;
-(void)streamProvider:(id)arg1 receivedError:(id)arg2 ;
-(void)_preheat;
-(void)_closePeerStreams;
-(void)_closeNetworkStreams;
-(void)_establishPeerStreams;
-(void)_establishNetworkStreamsToURL:(id)arg1 ;
-(void)_doMetricsBookkeepingForPeerStreamsStart;
-(void)_peerReadStreamEndEncountered;
-(void)_peerReadStreamErrorOccurred;
-(char)_hasPeerStreams;
-(void)_peerStreamFailure;
-(void)_restartStreams;
-(void)_fallbackWithSafetyNet;
-(char)_hasNetworkStreams;
-(id)_connectionMetrics;
-(id)_networkStreamProvider;
-(void)_doMetricsBookkeepingForNetworkStreamStart;
-(void)_networkStreamFailure;
-(void)_networkWriteStreamDidOpen;
-(void)_networkWriteStreamEndEncountered;
-(void)_networkWriteStreamErrorOccurred;
-(void)_cancelStaleNetworkTimer;
-(int)_readFromStream:(CFReadStreamRef)arg1 intoData:(id)arg2 ;
-(id)_tryToReadPeerStreamHeaderFromData:(id)arg1 ;
-(char)_tryToReadHTTPHeaderIntoMessage:(CFHTTPMessageRef)arg1 fromData:(id)arg2 ;
-(void)_insertCompanionSpecificDataIntoHeader:(CFHTTPMessageRef)arg1 ;
-(void)_prependHeader:(CFHTTPMessageRef)arg1 toOutputBuffer:(id)arg2 ;
-(int)_tryToWriteToNetworkStream;
-(int)_tryToWriteMutableData:(id)arg1 toStream:(CFWriteStreamRef)arg2 safetyNetBuffer:(id)arg3 ;
-(void)_prepareForSleep;
-(void)peerStreamConnection:(id)arg1 failedWithError:(id)arg2 ;
-(void)peerStreamConnectionHasIncomingPeer:(id)arg1 ;
-(void)peerStreamConnection:(id)arg1 requestMetrics:(/*^block*/id)arg2 ;
-(void)_peerReadStreamHasBytesAvailable;
-(void)_peerWriteStreamCanAcceptBytes;
-(void)_networkReadStreamHasBytesAvailable;
-(void)_networkReadStreamErrorOccurred;
-(void)_networkReadStreamEndEncountered;
-(void)_networkWriteStreamCanAcceptBytes;
-(void)dealloc;
-(id)init;
@end

