/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 6, 2015 at 2:38:03 PM Japan Standard Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /System/Library/PrivateFrameworks/AssistantServices.framework/assistantd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <assistantd/ADCommandCenterSpeechDelegate.h>
#import <libobjc.A.dylib/AFDictationService.h>

@protocol AFDictationServiceDelegate, OS_dispatch_queue;
@class NSObject, ADDictationSessionTracker, NSString;

@interface ADDictationConnection : NSObject <ADCommandCenterSpeechDelegate, AFDictationService> {

	id<AFDictationServiceDelegate> _serviceDelegate;
	void* _levelsSharedMemory;
	NSObject*<OS_dispatch_queue> _queue;
	char _waitingForSpeechRecognition;
	char _waitingForStructuredResultsOrVoiceSearch;
	char _waitingForAudioFile;
	ADDictationSessionTracker* _sessionTracker;

}

@property (nonatomic,readonly) NSObject*<OS_dispatch_queue> queue;              //@synthesize queue=_queue - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(id)initWithServiceDelegate:(id)arg1 ;
-(void)adSpeechRecordingDidFail:(id)arg1 sessionUUID:(id)arg2 ;
-(void)adSpeechRecognitionDidFail:(id)arg1 sessionUUID:(id)arg2 ;
-(void)adSpeechRecognized:(id)arg1 usingSpeechModel:(id)arg2 sessionUUID:(id)arg3 ;
-(void)adSpeechRecognizedPartialResult:(id)arg1 usingSpeechModel:(id)arg2 ;
-(void)adSpeechRecognizedStructuredResult:(id)arg1 usingSpeechModel:(id)arg2 sessionUUID:(id)arg3 ;
-(void)adSpeechDidFindVoiceSearchPartialResult:(id)arg1 ;
-(void)adSpeechDidFindVoiceSearchFinalResult:(id)arg1 ;
-(char)adWaitingForAudioFile;
-(void)adSpeechRecordingDidEndWithSessionUUID:(id)arg1 ;
-(void)adSpeechRecordingWillBeginWithSessionUUID:(id)arg1 ;
-(void)adSpeechRecordingDidBeginOnAVRecordRoute:(id)arg1 sessionUUID:(id)arg2 ;
-(void)adSpeechRecordingDidChangeAVRecordRoute:(id)arg1 sessionUUID:(id)arg2 ;
-(void)adSpeechRecordingDidUpdateAveragePower:(float)arg1 peakPower:(float)arg2 ;
-(void)adSpeechRecordingDidCancelWithSessionUUID:(id)arg1 ;
-(void)adAudioFileFinishedWriting:(id)arg1 error:(id)arg2 sessionUUID:(id)arg3 ;
-(void)adSpeechRecordingDidRecognizeTokens:(id)arg1 sessionUUID:(id)arg2 ;
-(void)adSpeechRecordingDidRecognizePhrases:(id)arg1 sessionUUID:(id)arg2 ;
-(void)_cleanUpSharedMem;
-(NSObject*<OS_dispatch_queue>)queue;
-(void)dealloc;
-(oneway void)startDictationWithLanguageCode:(id)arg1 options:(id)arg2 speechOptions:(id)arg3 ;
-(oneway void)endSession;
-(oneway void)cancelSpeech;
-(oneway void)stopSpeechWithOptions:(id)arg1 ;
-(oneway void)preheat;
-(oneway void)recordFailureMetricsForError:(id)arg1 ;
-(oneway void)startRecordedAudioDictationWithOptions:(id)arg1 language:(id)arg2 ;
-(oneway void)addRecordedSpeechSampleData:(id)arg1 ;
-(oneway void)sendSpeechCorrectionInfo:(id)arg1 forCorrectionContext:(id)arg2 ;
-(oneway void)_startDictationWithURL:(id)arg1 isNarrowBand:(char)arg2 language:(id)arg3 options:(id)arg4 ;
-(oneway void)_sendEngagementFeedback:(int)arg1 voiceQueryIdentifier:(id)arg2 ;
-(oneway void)getInstalledOfflineLanguagesWithCompletion:(/*^block*/id)arg1 ;
-(oneway void)updateSpeechOptions:(id)arg1 ;
@end

