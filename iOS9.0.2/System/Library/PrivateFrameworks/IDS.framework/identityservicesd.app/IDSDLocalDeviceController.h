/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 6, 2015 at 2:38:43 PM Japan Standard Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /System/Library/PrivateFrameworks/IDS.framework/identityservicesd.app/identityservicesd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


@protocol OS_dispatch_semaphore;
#import <identityservicesd/identityservicesd-Structs.h>
@class NSHashTable, NSMutableDictionary, NSObject, NSString, NSNumber, NSData, NSDictionary, NSUUID;

@interface IDSDLocalDeviceController : NSObject {

	NSHashTable* _delegateMap;
	NSMutableDictionary* _pairedDeviceProperties;
	NSObject*<OS_dispatch_semaphore> _pairedDevicePropertiesLock;
	NSString* _localDeviceIdentifier;
	unsigned _pairedDevicePairingProtocolVersion;
	int _pairingStateToken;
	unsigned _pairedDeviceMinCompatibilityVersion;
	unsigned _pairedDeviceMaxCompatibilityVersion;
	NSNumber* _pairedDeviceCapabilityFlagsBox;
	NSObject*<OS_dispatch_semaphore> _pairedDeviceCapabilityFlagsLock;
	opaque_pthread_mutex_t _defaultDeviceLastActivityLock;
	int _defaultDeviceLastActivityToken;
	/*^block*/id _block;
	char _isPendingResetOfKeyRegenerationFlag;

}

@property (nonatomic,readonly) NSString * deviceIdentifier; 
@property (nonatomic,readonly) NSData * deviceEncryptionKey; 
@property (nonatomic,readonly) NSData * deviceEncryptionClassAKey; 
@property (nonatomic,readonly) NSData * deviceEncryptionClassCKey; 
@property (nonatomic,readonly) NSDictionary * localDevice; 
@property (nonatomic,readonly) NSString * pairedDeviceUUIDString; 
@property (nonatomic,readonly) NSUUID * pairedDeviceUUID; 
@property (nonatomic,readonly) NSString * pairedDeviceUniqueID; 
@property (nonatomic,readonly) unsigned pairedDevicePairingProtocolVersion; 
@property (nonatomic,readonly) unsigned pairedDeviceMinCompatibilityVersion; 
@property (nonatomic,readonly) unsigned pairedDeviceMaxCompatibilityVersion; 
@property (nonatomic,readonly) NSDictionary * pairedDevice; 
@property (nonatomic,readonly) NSData * pairedDevicePublicKey; 
@property (nonatomic,readonly) NSData * pairedDevicePublicClassAKey; 
@property (nonatomic,readonly) NSData * pairedDevicePublicClassCKey; 
@property (nonatomic,readonly) NSDictionary * pairedDevicePrivateData; 
@property (nonatomic,readonly) char isPaired; 
+(char)_isEncryptionKeyRegenerationSupportedByCapabilityFlags:(unsigned long long)arg1 ;
+(void)devicePairingProtocolVersion:(unsigned*)arg1 minCompatibilityVersion:(unsigned*)arg2 maxCompatibilityVersion:(unsigned*)arg3 ;
+(id)sharedInstance;
-(NSData *)pairedDevicePublicKey;
-(NSData *)pairedDevicePublicClassAKey;
-(NSData *)pairedDevicePublicClassCKey;
-(NSString *)pairedDeviceUniqueID;
-(unsigned)pairedDevicePairingProtocolVersion;
-(unsigned)pairedDeviceMinCompatibilityVersion;
-(unsigned)pairedDeviceMaxCompatibilityVersion;
-(NSString *)pairedDeviceUUIDString;
-(NSDictionary *)pairedDevicePrivateData;
-(void)_notifyDelegatesWithBlock:(/*^block*/id)arg1 ;
-(char)_removePairedDeviceFromKeychain;
-(char)_hasAllEncryptionKeys;
-(char)_requestPairedDeviceInfo;
-(void)_requestPairedDeviceInfoAfterDelay:(double)arg1 ;
-(void)savedGeneratedClassKeys:(id)arg1 ;
-(void)_loadPairedDevicePropertiesIfNeeded;
-(void)_updatePairedState:(char)arg1 ;
-(int)_migrateSecuredEncryptionKeys;
-(char)_hasPairedDeviceCapabilityFlags;
-(char)_markSecuredEncryptionKeysAsRegenerated:(char)arg1 ;
-(unsigned long long)_pairedDeviceCapabilityFlags;
-(void)_regenerateSecuredEncryptionKeysWithCapabilityFlags:(unsigned long long)arg1 ;
-(char)_removePairedDeviceProperties;
-(char)_hasRegeneratedSecuredEncryptionKeys;
-(int)_statusOfSecuredEncryptionKeyRegenerationWithCapabilityFlags:(unsigned long long)arg1 ;
-(void)_regenerateSecuredEncryptionKeys;
-(char)_purgePairedDeviceSecuredEncryptionKeys;
-(void)gatherLocalDeviceInfoWithCompletionBlock:(/*^block*/id)arg1 ;
-(void)_suspendOTRSessionsWithProtectionClass:(unsigned)arg1 ;
-(char)_lockedCommitPairedDeviceToKeychain;
-(id)_deviceIdentifierKeychainID;
-(NSData *)deviceEncryptionKey;
-(NSData *)deviceEncryptionClassAKey;
-(NSData *)deviceEncryptionClassCKey;
-(id)_localDevicePrivateData;
-(id)_pairedDeviceUUIDString;
-(void)_notifyDelegatesDevicePaired:(char)arg1 ;
-(void)_setPairedDeviceCapabilityFlags:(unsigned long long)arg1 ;
-(void)regenerateDeviceIdentifier;
-(NSUUID *)pairedDeviceUUID;
-(char)addLocalPairedDevice:(id)arg1 ;
-(char)removeLocalPairedDevice:(id)arg1 ;
-(char)removeAllPairedDevicesIncludingIdentities:(char)arg1 ;
-(char)updatePairedDeviceBuildVersion:(id)arg1 productVersion:(id)arg2 productName:(id)arg3 pairingProtocolVersion:(unsigned)arg4 minCompatibilityVersion:(unsigned)arg5 maxCompatibilityVersion:(unsigned)arg6 capabilityFlags:(unsigned long long)arg7 ;
-(void)noteDefaultDeviceActivity;
-(void)dealloc;
-(id)init;
-(id)description;
-(NSDictionary *)pairedDevice;
-(void)systemDidLeaveFirstDataProtectionLock;
-(void)systemDidLeaveDataProtectionLock;
-(NSString *)deviceIdentifier;
-(NSDictionary *)localDevice;
-(char)isPaired;
-(char)_isPaired;
-(char)setPairedDeviceInfo:(id)arg1 ;
-(void)removeDelegate:(id)arg1 ;
-(void)addDelegate:(id)arg1 ;
-(id)_pairedDevice;
@end

