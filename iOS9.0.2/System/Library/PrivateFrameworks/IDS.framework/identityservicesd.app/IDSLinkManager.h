/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 6, 2015 at 2:38:43 PM Japan Standard Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /System/Library/PrivateFrameworks/IDS.framework/identityservicesd.app/identityservicesd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <identityservicesd/identityservicesd-Structs.h>
#import <identityservicesd/IDSLinkDelegate.h>
#import <identityservicesd/IDSBTLinkManagerDelegate.h>
#import <identityservicesd/IDSWPLinkManagerDelegate.h>
#import <libobjc.A.dylib/IMSystemMonitorListener.h>

@protocol OS_dispatch_source, IDSLinkDelegate;
@class NSMutableDictionary, NSDictionary, IDSBTLinkManager, IDSWPLinkManager, NSString, NSObject, IDSSockAddrWrapper;

@interface IDSLinkManager : NSObject <IDSLinkDelegate, IDSBTLinkManagerDelegate, IDSWPLinkManagerDelegate, IMSystemMonitorListener> {

	NSMutableDictionary* _deviceIDToLinks;
	NSMutableDictionary* _deviceIDToCurrentLink;
	NSDictionary* _deviceIDToUDPDestinations;
	IDSBTLinkManager* _btLinkManager;
	IDSWPLinkManager* _wpLinkManager;
	char _isCentral;
	char _mayBringUpWiFi;
	char _isWiFiBroughtUp;
	char _shouldBringWiFiDown;
	char _shouldKeepWiFiUp;
	unsigned _handshakeCounter;
	unsigned _WiFiBringUpCounter;
	double _addressRetransmissionInterval;
	void* _wifiManager;
	void* _wifiDevice;
	char _isWiFiAssociated;
	unsigned _WiFiAssociationCounter;
	double _rejectedPreferInfraWiFi;
	/*^block*/id _WiFiAssociationFailureHandler;
	int _currentWiFiAutoJoinStatus;
	NSString* _currentWiFiSSID;
	id _WiFiPowerAssertion;
	double _WiFiAssociationStartTime;
	unsigned long long _totalBytesSent;
	unsigned long long _totalPacketsSent;
	unsigned long long _totalBytesReceived;
	unsigned long long _totalPacketsReceived;
	unsigned long long _totalPacketsDropped;
	unsigned long long _previousBytesSent;
	unsigned long long _previousPacketsSent;
	unsigned long long _previousBytesReceived;
	unsigned long long _previousPacketsReceived;
	unsigned long long _previousPacketsDropped;
	double _previousReportTime;
	char _reporterFile[32];
	int _reporterFd;
	char _isInternalInstall;
	char _demoMode;
	NSString* _fixedInterface;
	NSString* _fixedInterfaceDestination;
	char _hasFixedDestination;
	NSObject*<OS_dispatch_source> _reporterTimer;
	SCDynamicStoreRef _dynamicStore;
	id<IDSLinkDelegate> _delegate;
	char _doesDefaultDevicePreferInfraWiFi;
	char _isDefaultDeviceUsingBTLink;
	char _isDefaultDeviceNearby;
	char _lastSentDefaultDeviceNearby;
	char _lastSentDefaultDeviceConnectivity;
	char _lastSentDefaultPeerConnectivity;
	char _isDefaultDeviceOnPhoneCall;
	char _hasDelayedNoConnectivityNotification;
	IDSSockAddrWrapper* _localWiFiAddressUsedForDefaultDevice;
	unsigned _currentDefaultDeviceLinkType;

}

@property (nonatomic,readonly) unsigned currentDefaultDeviceLinkType;              //@synthesize currentDefaultDeviceLinkType=_currentDefaultDeviceLinkType - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(id)copyLinkStatsDict;
-(void)startUDPGlobalLinkForDevice:(id)arg1 ;
-(void)createConnectionDataForDevice:(id)arg1 localPartyID:(id)arg2 dataReadyHandler:(/*^block*/id)arg3 ;
-(void)startConnectionForDevice:(id)arg1 isInitiator:(char)arg2 remotePartyID:(id)arg3 ;
-(void)stopUDPGlobalLinkForDevice:(id)arg1 ;
-(void)processRemoteConnectionDataForDevice:(id)arg1 remoteConnectionData:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(unsigned)sendPacketBuffer:(SCD_Struct_ID16*)arg1 toDeviceID:(id)arg2 ;
-(char)link:(id)arg1 fromDeviceID:(id)arg2 didReceivePacket:(SCD_Struct_ID16*)arg3 ;
-(void)link:(id)arg1 didConnectForDevice:(id)arg2 ;
-(void)link:(id)arg1 didDisconnectForDevice:(id)arg2 ;
-(void)link:(id)arg1 hostAwakeDidChange:(char)arg2 ;
-(void)link:(id)arg1 hasSpaceAvailable:(char)arg2 deviceID:(id)arg3 ;
-(void)manager:(id)arg1 didPowerStateChange:(char)arg2 ;
-(void)manager:(id)arg1 linkDidConnect:(id)arg2 ;
-(void)manager:(id)arg1 linkDidDisconnect:(id)arg2 ;
-(void)obliterateConnectionInfo;
-(void)_startNetworkInterfaceListener:(char)arg1 ;
-(void)_startReporter;
-(void)_bringUpWiFi:(char)arg1 ;
-(id)_newUDPLinkForDevice:(id)arg1 IPVersion:(unsigned)arg2 port:(unsigned short)arg3 ;
-(void)_setBestLinkToCurrent:(id)arg1 ;
-(void)_nearbyChangedForDefaultDevice;
-(id)generateLinkReport:(double)arg1 forceReport:(char)arg2 ;
-(char)_startUDPLinkHandshakeForDefaultDevice:(char)arg1 immediately:(char)arg2 ;
-(void)_connectivityChangedForDefaultDevice:(char)arg1 ;
-(void)_suspendBTLink:(char)arg1 deviceID:(id)arg2 ;
-(void)_sendUDPLinkInterfaceAddresses:(id)arg1 toDeviceID:(id)arg2 isRetransmission:(char)arg3 isReply:(char)arg4 ;
-(void)_clearWiFiAssociationPowerAssertion;
-(void)_createWiFiAssociationPowerAssertion:(double)arg1 ;
-(void)_subscribeToWRMForLinkRecommendation;
-(void)_unsubscribeFromWRMForLinkRecommendation;
-(unsigned long long)_getWRMLinkTypeFromIDSLinkType:(unsigned)arg1 ;
-(id)_selectBestLink:(id)arg1 ;
-(void)_processLinkChangeForDefaultDeviceFrom:(id)arg1 to:(id)arg2 ;
-(void)startLinkForDeviceID:(id)arg1 ;
-(void)_removeAllLinksForDeviceID:(id)arg1 ;
-(id)_newUDPGlobalLinkForDevice:(id)arg1 ;
-(id)_newQuickRelayLinkForDevice:(id)arg1 ;
-(id)_linkKeyForLink:(id)arg1 ;
-(void)_removeLinkForDeviceID:(id)arg1 linkKey:(id)arg2 verifyWithLink:(id)arg3 ;
-(void)_processLMCommandPacket:(SCD_Struct_ID16*)arg1 link:(id)arg2 fromDeviceID:(id)arg3 ;
-(void)stopLinkForDeviceID:(id)arg1 disconnectWP:(char)arg2 ;
-(id)_getIDSLinkTypeString:(unsigned)arg1 ;
-(unsigned)_getIDSLinkTypeFromWRMLinkType:(unsigned long long)arg1 ;
-(void)_handleWRMLinkRecommendation:(unsigned)arg1 ;
-(void)_handleWiFiAutoJoinStatusChange:(int)arg1 WiFiSSID:(id)arg2 ;
-(char)isConnectedToDeviceID:(id)arg1 ;
-(void)startQuickRelayLinkForDevice:(id)arg1 ;
-(void)stopQuickRelayLinkForDevice:(id)arg1 ;
-(void)connectWithDevice:(id)arg1 sessionInfo:(id)arg2 connectReadyHandler:(/*^block*/id)arg3 ;
-(void)disconnectWithDevice:(id)arg1 ;
-(void)setIsOnPhoneCall:(char)arg1 forDeviceID:(id)arg2 ;
-(void)_handleNetworkChanges:(id)arg1 ;
-(unsigned)currentDefaultDeviceLinkType;
-(void)dealloc;
-(void)start;
-(id)initWithDelegate:(id)arg1 ;
-(void)startLocalSetup;
-(void)addPairedDevice:(id)arg1 ;
-(void)connectPairedDevice:(id)arg1 ;
-(void)deletePairedDevice:(id)arg1 ;
-(void)setPreferInfraWiFi:(char)arg1 ;
-(void)setLinkPreferences:(id)arg1 ;
@end

