/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 6, 2015 at 2:33:07 PM Japan Standard Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /System/Library/PrivateFrameworks/IDS.framework/IDS
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


@protocol IDSDaemonListenerProtocol <NSObject>
@optional
-(void)accountAdded:(id)arg1;
-(void)daemonConnected;
-(void)daemonDisconnected;
-(void)messageReceived:(id)arg1 withGUID:(id)arg2 withPayload:(id)arg3 forTopic:(id)arg4 toIdentifier:(id)arg5 fromID:(id)arg6 context:(id)arg7;
-(void)dataReceived:(id)arg1 withGUID:(id)arg2 forTopic:(id)arg3 toIdentifier:(id)arg4 fromID:(id)arg5 context:(id)arg6;
-(void)accessoryDataReceived:(id)arg1 withGUID:(id)arg2 forTopic:(id)arg3 toIdentifier:(id)arg4 fromID:(id)arg5 context:(id)arg6;
-(void)accessoryReportMessageReceived:(id)arg1 accessoryID:(id)arg2 controllerID:(id)arg3 withGUID:(id)arg4 forTopic:(id)arg5 toIdentifier:(id)arg6 fromID:(id)arg7 context:(id)arg8;
-(void)messageIdentifier:(id)arg1 alternateCallbackID:(id)arg2 forAccount:(id)arg3 updatedWithResponseCode:(int)arg4 error:(id)arg5 lastCall:(char)arg6 context:(id)arg7;
-(void)messageIdentifier:(id)arg1 alternateCallbackID:(id)arg2 forAccount:(id)arg3 willSendToDestinations:(id)arg4 skippedDestinations:(id)arg5 registrationPropertyToDestinations:(id)arg6;
-(void)messageIdentifier:(id)arg1 forTopic:(id)arg2 toIdentifier:(id)arg3 hasBeenDeliveredWithContext:(id)arg4;
-(void)protobufReceived:(id)arg1 withGUID:(id)arg2 forTopic:(id)arg3 toIdentifier:(id)arg4 fromID:(id)arg5 context:(id)arg6;
-(void)OTRTestCallback:(id)arg1 time:(double)arg2 error:(id)arg3;
-(void)accountUpdated:(id)arg1;
-(void)accountsChanged:(id)arg1 forTopic:(id)arg2;
-(void)accountEnabled:(id)arg1 onService:(id)arg2;
-(void)accountDisabled:(id)arg1 onService:(id)arg2;
-(void)setupCompleteForAccount:(id)arg1 transactionID:(id)arg2 setupError:(id)arg3;
-(void)account:(id)arg1 accountInfoChanged:(id)arg2;
-(void)account:(id)arg1 dependentDevicesUpdated:(id)arg2;
-(void)account:(id)arg1 dependentDevicesUpdatedUponReconnect:(id)arg2;
-(void)account:(id)arg1 localDeviceAdded:(id)arg2;
-(void)account:(id)arg1 localDeviceRemoved:(id)arg2;
-(void)IDQueryCompletedWithFromURI:(id)arg1 idStatusUpdates:(id)arg2 service:(id)arg3 success:(char)arg4 error:(id)arg5;
-(void)sessionInvitationReceivedWithPayload:(id)arg1 forTopic:(id)arg2 sessionID:(id)arg3 toIdentifier:(id)arg4 fromID:(id)arg5 transportType:(id)arg6;
-(void)sessionAcceptReceived:(id)arg1 fromID:(id)arg2 withData:(id)arg3;
-(void)sessionDeclineReceived:(id)arg1 fromID:(id)arg2 withData:(id)arg3;
-(void)sessionCancelReceived:(id)arg1 fromID:(id)arg2 withData:(id)arg3;
-(void)sessionMessageReceived:(id)arg1 fromID:(id)arg2 withData:(id)arg3;
-(void)sessionEndReceived:(id)arg1 fromID:(id)arg2 withData:(id)arg3;
-(void)sessionStarted:(id)arg1;
-(void)sessionEnded:(id)arg1 withReason:(unsigned)arg2 error:(id)arg3;
-(void)session:(id)arg1 audioEnabled:(char)arg2;
-(void)session:(id)arg1 muted:(char)arg2;
-(void)openedSocket:(id)arg1 forHandlerID:(id)arg2 error:(id)arg3;
-(void)localDeviceInfo:(id)arg1;
-(void)pairedDeviceInfo:(id)arg1;
-(void)deliveryStats:(id)arg1;
-(void)device:(id)arg1 nsuuidChanged:(id)arg2;
-(void)device:(id)arg1 pairingDeleted:(char)arg2;
-(void)device:(id)arg1 pairingAdded:(char)arg2;
-(void)continuityDidUpdateState:(int)arg1;
-(void)continuityDidLosePeer:(id)arg1;
-(void)continuityDidLosePeer:(id)arg1 forType:(int)arg2;
-(void)continuityDidStartTrackingPeer:(id)arg1 error:(id)arg2;
-(void)continuityDidStartTrackingPeer:(id)arg1 forType:(int)arg2 error:(id)arg3;
-(void)continuityDidStopTrackingPeer:(id)arg1;
-(void)continuityDidStopTrackingPeer:(id)arg1 forType:(int)arg2;
-(void)continuityDidStartAdvertisingOfType:(int)arg1;
-(void)continuityDidStopAdvertisingOfType:(int)arg1;
-(void)continuityDidFailToStartAdvertisingOfType:(int)arg1 withError:(id)arg2;
-(void)continuityDidStartScanningForType:(int)arg1;
-(void)continuityDidStopScanningForType:(int)arg1;
-(void)continuityDidFailToStartScanningForType:(int)arg1 withError:(id)arg2;
-(void)continuityDidDiscoverType:(int)arg1 withData:(id)arg2 fromPeer:(id)arg3;
-(void)continuityDidDiscoverPeerWithData:(id)arg1 fromPeer:(id)arg2;
-(void)continuityDidConnectToPeer:(id)arg1 withError:(id)arg2;
-(void)continuityDidDisconnectFromPeer:(id)arg1 withError:(id)arg2;
-(void)serviceUserIDs:(id)arg1 error:(id)arg2;
-(void)adminAccessTokens:(id)arg1 error:(id)arg2;
-(void)consentTokens:(id)arg1 error:(id)arg2;
-(void)userAccessTokens:(id)arg1 error:(id)arg2;
-(void)refreshUserAccessTokens:(id)arg1 error:(id)arg2;
-(void)deviceIdentifierDidChange:(id)arg1;
-(void)setupComplete:(char)arg1 info:(id)arg2;
-(void)accountRemoved:(id)arg1;
-(void)account:(id)arg1 registrationStatusInfoChanged:(id)arg2;
-(void)account:(id)arg1 aliasesChanged:(id)arg2;
-(void)account:(id)arg1 vettedAliasesChanged:(id)arg2;
-(void)account:(id)arg1 profileChanged:(id)arg2;
-(void)account:(id)arg1 loginChanged:(id)arg2;
-(void)account:(id)arg1 displayNameChanged:(id)arg2;
-(void)refreshRegistrationForAccount:(id)arg1;
-(void)registrationFailedForAccount:(id)arg1 needsDeletion:(id)arg2;
-(void)xpcObject:(id)arg1 objectContext:(id)arg2;

@end

