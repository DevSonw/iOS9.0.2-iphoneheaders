/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 6, 2015 at 2:33:00 PM Japan Standard Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /System/Library/PrivateFrameworks/HealthDaemon.framework/HealthDaemon
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <libobjc.A.dylib/HDSQLiteDatabasePoolDelegate.h>
#import <libobjc.A.dylib/HDContentProtectionObserver.h>
#import <libobjc.A.dylib/HDDiagnosticObject.h>
#import <libobjc.A.dylib/HDHealthDatabase.h>

@protocol HDHealthDaemon, HDDatabaseMigrationDelegate, OS_dispatch_queue, OS_dispatch_group;
@class HDDatabaseJournal, NSString, HDSQLiteDatabasePool, HDContentProtectionManager, NSLock, NSMutableSet, NSOperationQueue, NSObject, NSMutableArray, NSPointerArray;

@interface HDDatabase : NSObject <HDSQLiteDatabasePoolDelegate, HDContentProtectionObserver, HDDiagnosticObject, HDHealthDatabase> {

	char _shouldNotifyFirstUnlockObservers;
	char _isObservingContentProtection;
	char _checkpointRequired;
	char _hasScheduledCheckpoint;
	HDDatabaseJournal* _journal;
	id<HDHealthDaemon> _daemon;
	id<HDDatabaseMigrationDelegate> _databaseMigrationDelegate;
	NSString* _homeDirectoryPath;
	HDSQLiteDatabasePool* _databasePool;
	HDContentProtectionManager* _contentProtectionManager;
	NSString* _threadLocalActiveConnectionKey;
	NSLock* _schemaMigrationLock;
	NSMutableSet* _migratedDatabases;
	NSOperationQueue* _asynchronousOperationQueue;
	NSObject*<OS_dispatch_queue> _protectedDataQueue;
	NSMutableArray* _firstUnlockBlocks;
	int _protectedDataState;
	NSObject*<OS_dispatch_queue> _protectedDataObserverQueue;
	NSObject*<OS_dispatch_queue> _protectedDataObserverNotificationQueue;
	NSPointerArray* _protectedDataObservers;
	NSObject*<OS_dispatch_queue> _journalQueue;
	NSObject*<OS_dispatch_group> _journalGroup;
	unsigned _pendingJournalMerges;
	NSObject*<OS_dispatch_group> _transactionGroup;
	NSObject*<OS_dispatch_queue> _transactionQueue;
	int _invalidated;

}

@property (nonatomic,readonly) HDDatabaseJournal * journal;                                                                        //@synthesize journal=_journal - In the implementation block
@property (assign,nonatomic,__weak) id<HDHealthDaemon> daemon;                                                                     //@synthesize daemon=_daemon - In the implementation block
@property (assign,nonatomic,__weak) id<HDDatabaseMigrationDelegate> databaseMigrationDelegate;                                     //@synthesize databaseMigrationDelegate=_databaseMigrationDelegate - In the implementation block
@property (nonatomic,copy) NSString * homeDirectoryPath;                                                                           //@synthesize homeDirectoryPath=_homeDirectoryPath - In the implementation block
@property (nonatomic,retain) HDSQLiteDatabasePool * databasePool;                                                                  //@synthesize databasePool=_databasePool - In the implementation block
@property (nonatomic,retain) HDContentProtectionManager * contentProtectionManager;                                                //@synthesize contentProtectionManager=_contentProtectionManager - In the implementation block
@property (nonatomic,retain) NSString * threadLocalActiveConnectionKey;                                                            //@synthesize threadLocalActiveConnectionKey=_threadLocalActiveConnectionKey - In the implementation block
@property (nonatomic,retain) NSLock * schemaMigrationLock;                                                                         //@synthesize schemaMigrationLock=_schemaMigrationLock - In the implementation block
@property (nonatomic,retain) NSMutableSet * migratedDatabases;                                                                     //@synthesize migratedDatabases=_migratedDatabases - In the implementation block
@property (nonatomic,retain) NSOperationQueue * asynchronousOperationQueue;                                                        //@synthesize asynchronousOperationQueue=_asynchronousOperationQueue - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> protectedDataQueue;                                                      //@synthesize protectedDataQueue=_protectedDataQueue - In the implementation block
@property (nonatomic,retain) NSMutableArray * firstUnlockBlocks;                                                                   //@synthesize firstUnlockBlocks=_firstUnlockBlocks - In the implementation block
@property (assign,nonatomic) int protectedDataState;                                                                               //@synthesize protectedDataState=_protectedDataState - In the implementation block
@property (assign,nonatomic) char shouldNotifyFirstUnlockObservers;                                                                //@synthesize shouldNotifyFirstUnlockObservers=_shouldNotifyFirstUnlockObservers - In the implementation block
@property (assign,nonatomic) char isObservingContentProtection;                                                                    //@synthesize isObservingContentProtection=_isObservingContentProtection - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> protectedDataObserverQueue;                                              //@synthesize protectedDataObserverQueue=_protectedDataObserverQueue - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> protectedDataObserverNotificationQueue;                                  //@synthesize protectedDataObserverNotificationQueue=_protectedDataObserverNotificationQueue - In the implementation block
@property (nonatomic,retain) NSPointerArray * protectedDataObservers;                                                              //@synthesize protectedDataObservers=_protectedDataObservers - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> journalQueue;                                                            //@synthesize journalQueue=_journalQueue - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_group> journalGroup;                                                            //@synthesize journalGroup=_journalGroup - In the implementation block
@property (assign,nonatomic) unsigned pendingJournalMerges;                                                                        //@synthesize pendingJournalMerges=_pendingJournalMerges - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_group> transactionGroup;                                                        //@synthesize transactionGroup=_transactionGroup - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> transactionQueue;                                                        //@synthesize transactionQueue=_transactionQueue - In the implementation block
@property (assign,nonatomic) int invalidated;                                                                                      //@synthesize invalidated=_invalidated - In the implementation block
@property (assign,nonatomic) char checkpointRequired;                                                                              //@synthesize checkpointRequired=_checkpointRequired - In the implementation block
@property (assign,nonatomic) char hasScheduledCheckpoint;                                                                          //@synthesize hasScheduledCheckpoint=_hasScheduledCheckpoint - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (getter=isDataProtectedByFirstUnlockAvailable,nonatomic,readonly) char dataProtectedByFirstUnlockAvailable; 
@property (getter=isProtectedDataAvailable,nonatomic,readonly) char protectedDataAvailable; 
+(id)allEntityClasses;
+(void)loadEntityClasses;
+(id)_databaseCorruptionDefaultKeyForDatabaseWithName:(id)arg1 ;
+(void)didEncounterUncorruptedDatabaseWithName:(id)arg1 ;
+(void)reportDatabaseCorruptionForDatabaseWithName:(id)arg1 ;
-(void)invalidate;
-(char)isProtectedDataAvailable;
-(char)checkpointRequired;
-(void)setCheckpointRequired:(char)arg1 ;
-(void)addJournalEntries:(id)arg1 ;
-(id<HDHealthDaemon>)daemon;
-(void)setDaemon:(id<HDHealthDaemon>)arg1 ;
-(void)addProtectedDataObserver:(id)arg1 ;
-(void)performWhenDataProtectedByFirstUnlockIsAvailable:(/*^block*/id)arg1 ;
-(HDContentProtectionManager *)contentProtectionManager;
-(id)diagnosticDescription;
-(void)removeProtectedDataObserver:(id)arg1 ;
-(void)addJournalEntry:(id)arg1 ;
-(int)_migrateOrCreateSchemaWithDatabase:(id)arg1 protectedDatabase:(char)arg2 error:(id*)arg3 ;
-(void)_updateDataForPPTWithDatabase:(id)arg1 ;
-(id)_databaseNameForProtectedDatabase:(char)arg1 ;
-(int)_migrateDatabase:(id)arg1 fromUserVersion:(int)arg2 protectedDatabase:(char)arg3 error:(id*)arg4 ;
-(int)_createEntitiesInDatabase:(id)arg1 protectedEntities:(char)arg2 error:(id*)arg3 ;
-(char)_createDataTablesInDatabase:(id)arg1 entityClasses:(id)arg2 error:(id*)arg3 ;
-(int)_currentSchemaVersionForProtectedDatabase:(char)arg1 ;
-(id)_createNonUniqueIndicesSQLForEntity:(Class)arg1 ;
-(id<HDDatabaseMigrationDelegate>)databaseMigrationDelegate;
-(int)migrateOrCreateSchemaInDatabase:(id)arg1 protectedDatabaseAvailable:(char)arg2 error:(id*)arg3 ;
-(id)initWithHomeDirectoryPath:(id)arg1 healthDaemon:(id)arg2 migrationDelegate:(id)arg3 ;
-(void)daemonDidFinishLaunching;
-(void)invalidateAndWait;
-(NSString *)homeDirectoryPath;
-(id)_journalDirectoryPath;
-(id)mainDatabaseURL;
-(void)_enableIncrementalAutoVacuumForDatabaseAtURL:(id)arg1 ;
-(id)protectedDatabaseURL;
-(id)_activeDatabase;
-(int)_protectedDataState;
-(char)_waitForJournalMerge;
-(id)_writerDatabaseWithError:(id*)arg1 ;
-(id)_readerDatabaseWithError:(id*)arg1 ;
-(void)_setActiveDatabase:(id)arg1 ;
-(char)_migrateOrCreateProtectedSchemaInDatabase:(id)arg1 error:(id*)arg2 ;
-(char)_performTransactionWithOptions:(unsigned)arg1 shouldWaitForJournalMerge:(char)arg2 error:(id*)arg3 usingBlock:(/*^block*/id)arg4 ;
-(id)_createDatabaseConnectionWithURL:(id)arg1 ;
-(id)_createDatabaseConnection;
-(id)_destroyAndReopenDatabaseWithReason:(id)arg1 ;
-(void)_clearJournalDirectory;
-(void)_destroyDatabaseWithReason:(id)arg1 ;
-(id)_newDatabaseConnectionWithError:(id*)arg1 ;
-(void)_protectedDataQueue_beginObservingContentProtection;
-(void)_protectedDataQueue_mergeJournalAsynchronously;
-(void)_protectedDatabaseDidBecomeAvailable;
-(id)_copyProtectedDataObservers;
-(void)_protectedDataObserverQueue_addObserver:(id)arg1 ;
-(void)_protectedDataObserverQueue_removeObserver:(id)arg1 ;
-(id)databaseSizeInBytes;
-(id)newDatabaseForDatabasePool:(id)arg1 error:(id*)arg2 ;
-(void)contentProtectionStateChanged:(int)arg1 previousState:(int)arg2 ;
-(char)performTransactionWithOptions:(unsigned)arg1 error:(id*)arg2 usingBlock:(/*^block*/id)arg3 ;
-(void)performAsynchronously:(/*^block*/id)arg1 ;
-(char)performJournalMergeUsingBlock:(/*^block*/id)arg1 error:(id*)arg2 ;
-(char)isDataProtectedByFirstUnlockAvailable;
-(char)performMigrationForProtectedData:(char)arg1 error:(id*)arg2 ;
-(HDDatabaseJournal *)journal;
-(void)setDatabaseMigrationDelegate:(id<HDDatabaseMigrationDelegate>)arg1 ;
-(void)setHomeDirectoryPath:(NSString *)arg1 ;
-(HDSQLiteDatabasePool *)databasePool;
-(void)setDatabasePool:(HDSQLiteDatabasePool *)arg1 ;
-(void)setContentProtectionManager:(HDContentProtectionManager *)arg1 ;
-(NSString *)threadLocalActiveConnectionKey;
-(void)setThreadLocalActiveConnectionKey:(NSString *)arg1 ;
-(NSLock *)schemaMigrationLock;
-(void)setSchemaMigrationLock:(NSLock *)arg1 ;
-(NSMutableSet *)migratedDatabases;
-(void)setMigratedDatabases:(NSMutableSet *)arg1 ;
-(NSOperationQueue *)asynchronousOperationQueue;
-(void)setAsynchronousOperationQueue:(NSOperationQueue *)arg1 ;
-(NSObject*<OS_dispatch_queue>)protectedDataQueue;
-(void)setProtectedDataQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(NSMutableArray *)firstUnlockBlocks;
-(void)setFirstUnlockBlocks:(NSMutableArray *)arg1 ;
-(int)protectedDataState;
-(void)setProtectedDataState:(int)arg1 ;
-(char)shouldNotifyFirstUnlockObservers;
-(void)setShouldNotifyFirstUnlockObservers:(char)arg1 ;
-(char)isObservingContentProtection;
-(void)setIsObservingContentProtection:(char)arg1 ;
-(NSObject*<OS_dispatch_queue>)protectedDataObserverQueue;
-(void)setProtectedDataObserverQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(NSObject*<OS_dispatch_queue>)protectedDataObserverNotificationQueue;
-(void)setProtectedDataObserverNotificationQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(NSPointerArray *)protectedDataObservers;
-(void)setProtectedDataObservers:(NSPointerArray *)arg1 ;
-(NSObject*<OS_dispatch_queue>)journalQueue;
-(void)setJournalQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(NSObject*<OS_dispatch_group>)journalGroup;
-(void)setJournalGroup:(NSObject*<OS_dispatch_group>)arg1 ;
-(unsigned)pendingJournalMerges;
-(void)setPendingJournalMerges:(unsigned)arg1 ;
-(NSObject*<OS_dispatch_group>)transactionGroup;
-(void)setTransactionGroup:(NSObject*<OS_dispatch_group>)arg1 ;
-(NSObject*<OS_dispatch_queue>)transactionQueue;
-(void)setTransactionQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(int)invalidated;
-(void)setInvalidated:(int)arg1 ;
-(char)hasScheduledCheckpoint;
-(void)setHasScheduledCheckpoint:(char)arg1 ;
@end

