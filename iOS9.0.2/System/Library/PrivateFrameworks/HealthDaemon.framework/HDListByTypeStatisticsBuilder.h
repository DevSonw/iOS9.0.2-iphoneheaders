/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 6, 2015 at 2:33:02 PM Japan Standard Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /System/Library/PrivateFrameworks/HealthDaemon.framework/HealthDaemon
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <HealthDaemon/HDStatisticsBuilder.h>

@protocol HDHealthDaemon;
@class NSDate, NSMutableArray, NSMutableDictionary, NSNumber;

@interface HDListByTypeStatisticsBuilder : HDStatisticsBuilder {

	id<HDHealthDaemon> _healthDaemon;
	NSDate* _bucketStartDate;
	NSDate* _bucketEndDate;
	NSMutableArray* _lastUpdatedDatatypes;
	NSMutableDictionary* _calculatorByTypes;
	NSMutableDictionary* _quantitiesByDataType;
	NSMutableDictionary* _timestampByDataType;
	NSNumber* _lastAnchor;
	/*^block*/id _shouldStopProcessing;

}

@property (nonatomic,retain) NSNumber * lastAnchor;              //@synthesize lastAnchor=_lastAnchor - In the implementation block
@property (nonatomic,copy) id shouldStopProcessing;              //@synthesize shouldStopProcessing=_shouldStopProcessing - In the implementation block
-(void)setLastAnchor:(NSNumber *)arg1 ;
-(NSNumber *)lastAnchor;
-(id)initWithHealthDaemon:(id)arg1 startDate:(id)arg2 endDate:(id)arg3 ;
-(void)setShouldStopProcessing:(id)arg1 ;
-(id)quantitiesWithError:(id*)arg1 ;
-(void)updateValuesWithAddedSample:(id)arg1 anchor:(id)arg2 ;
-(char)wasUpdated;
-(id)updatedQuantitiesByDataType;
-(id)_calculatedValuesForDatabase:(id)arg1 ;
-(char)addWorkoutSamplesWithStartTimeInterval:(double)arg1 endTimeInterval:(double)arg2 sourceId:(long long)arg3 ;
-(char)addCategorySamplesForType:(int)arg1 value:(double)arg2 startTimeInterval:(double)arg3 endTimeInterval:(double)arg4 sourceId:(long long)arg5 enforceLatest:(char)arg6 ;
-(char)addQuantitySamplesForType:(int)arg1 value:(double)arg2 startTimeInterval:(double)arg3 endTimeInterval:(double)arg4 sourceId:(long long)arg5 enforceLatest:(char)arg6 ;
-(void)_enumerateSamplesWithDatabase:(id)arg1 handler:(/*^block*/id)arg2 ;
-(id)calculatedQuantitiesByDataType;
-(double)_relevantValueForType:(int)arg1 ;
-(id)timeIntervalCalculatorForType:(id)arg1 ;
-(id)collectionCalculatorForType:(id)arg1 from:(id)arg2 to:(id)arg3 ;
-(id)shouldStopProcessing;
@end

