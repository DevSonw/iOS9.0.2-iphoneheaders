/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 6, 2015 at 2:38:00 PM Japan Standard Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /System/Library/PrivateFrameworks/ApplePushService.framework/apsd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <apsd/apsd-Structs.h>
#import <apsd/CUTWiFiManagerDelegate.h>
#import <apsd/APSSystemMonitorListener.h>
#import <apsd/APSDecayTimerDelegate.h>

@class CUTWeakReference, NSString, NSMutableArray, APSDecayTimer, PCSimpleTimer, NSDate;

@interface APSNetworkMonitor : NSObject <CUTWiFiManagerDelegate, APSSystemMonitorListener, APSDecayTimerDelegate> {

	CUTWeakReference* _delegate;
	NSString* _lastSSID;
	NSMutableArray* _wifiMeasurements;
	unsigned _wifiGrowAttemptsBeforeSSID;
	unsigned _wifiGrowAttempts;
	double _wifiKeepAliveInterval;
	APSDecayTimer* _decayTimer;
	PCSimpleTimer* _connectionThrottleTimer;
	char _shouldThrottleConnection;
	char _serverSupportsDualMode;
	int _dualMode;
	NSDate* _lastPiggybackReset;
	NSDate* _lastPiggybackConnection;
	unsigned _piggybackCount;
	unsigned _maxCostDrivenConnectionsPerDay;
	unsigned _maxPiggybackConnectionsPerDay;
	char _disableCostDrivenDualMode;
	char _shouldUseDualMode;
	char _shouldEnableWifiAutoAssoc;
	char _criticalReliability;
	char _isWoWEnabled;
	WiFiManagerClientRef _wifiManager;

}

@property (assign,nonatomic) id<APSNetworkMonitorDelegate> delegate; 
@property (assign,nonatomic) char serverSupportsDualMode;                         //@synthesize serverSupportsDualMode=_serverSupportsDualMode - In the implementation block
@property (nonatomic,readonly) char shouldUseDualMode;                            //@synthesize shouldUseDualMode=_shouldUseDualMode - In the implementation block
@property (nonatomic,readonly) char isPiggybacking; 
@property (assign,nonatomic) char isWoWEnabled;                                   //@synthesize isWoWEnabled=_isWoWEnabled - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(unsigned)powerCostForPushOnRAT:(CFStringRef)arg1 withLinkQuality:(int)arg2 ;
-(void)setCriticalReliability:(char)arg1 ;
-(char)shouldUseDualMode;
-(void)closedSecondChannel:(int)arg1 ;
-(char)isPiggybacking;
-(void)setDisableCostDrivenDualChannelAttempts:(id)arg1 ;
-(void)setPiggybackDualChannelAttempts:(id)arg1 ;
-(void)setCostDrivenDualChannelAttempts:(id)arg1 ;
-(void)openedSecondChannel;
-(void)setServerSupportsDualMode:(char)arg1 ;
-(void)notePushWithCost:(unsigned)arg1 ;
-(void)setCurrentWiFiKeepAliveInterval:(double)arg1 growAttempts:(unsigned)arg2 ;
-(void)decayTimerFired:(id)arg1 ;
-(void)_reloadDualMode;
-(void)_processSSIDChangeWithSSID:(id)arg1 querySSID:(char)arg2 ;
-(void)_registerForWoWNotifications;
-(void)_deregisterFromWoWNotifications;
-(void)_clearConnectionThrottleTimer;
-(void)_toggleWiFiAutoAssociateIfNecessary;
-(void)_flushStaleWiFiMeasurements;
-(void)_flushStaleElementsFrom:(id*)arg1 withThreshold:(double)arg2 ;
-(double)_accumulatedAwakePercentage;
-(char)_wifiIsHistoricallyCheap;
-(char)_checkPiggybackBudget;
-(void)__toggleWiFiAutoAssociateIfNecessary;
-(void)_connectionThrottleTimerFired;
-(char)serverSupportsDualMode;
-(void)setIsWoWEnabled:(char)arg1 ;
-(void)setDelegate:(id<APSNetworkMonitorDelegate>)arg1 ;
-(void)dealloc;
-(id)init;
-(id<APSNetworkMonitorDelegate>)delegate;
-(void)_handleSignificantTimeChange;
-(void)systemDidLock;
-(void)systemDidUnlock;
-(void)cutWiFiManager:(id)arg1 generatedPowerReading:(id)arg2 ;
-(char)isWoWEnabled;
-(void)cutWiFiManagerLinkDidChange:(id)arg1 context:(id)arg2 ;
@end

