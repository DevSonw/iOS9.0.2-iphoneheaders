/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 6, 2015 at 2:38:31 PM Japan Standard Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /System/Library/PrivateFrameworks/GameKitServices.framework/GameKitServices
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <GameKitServices/GameKitServices-Structs.h>
#import <libobjc.A.dylib/VideoConferenceDelegate.h>
#import <libobjc.A.dylib/VideoConferenceRealTimeChannel.h>

@protocol GKVoiceChatClient;
@class GKVoiceChatDictionary, NSRecursiveLock, NSLock, GKVoiceChatService, VideoConference;

@interface GKVoiceChatServicePrivate : NSObject <VideoConferenceDelegate, VideoConferenceRealTimeChannel> {

	id<GKVoiceChatClient> client;
	char outputMeteringEnabled;
	char inputMeteringEnabled;
	char microphoneMuted;
	unsigned long curCallID;
	int state;
	GKVoiceChatDictionary* incomingCallDict;
	GKVoiceChatDictionary* outgoingCallDict;
	tagCONNRESULT* currentConnResult;
	NSRecursiveLock* stateLock;
	NSLock* clientLock;
	GKVoiceChatService* wrapperService;
	char forceNoICE;
	VideoConference* conf;
	char clientHasRTChannel;
	int chatMode;
	char focus;

}

@property (assign) int state; 
@property (assign) int chatMode; 
@property (assign) GKVoiceChatService * wrapperService; 
@property (assign,nonatomic) id client; 
@property (getter=isMicrophoneMuted) char microphoneMuted; 
@property (assign) float remoteParticipantVolume; 
@property (getter=isOutputMeteringEnabled) char outputMeteringEnabled; 
@property (getter=isInputMeteringEnabled) char inputMeteringEnabled; 
@property (nonatomic,readonly) float outputMeterLevel; 
@property (nonatomic,readonly) float inputMeterLevel; 
@property (getter=isFocus) char focus; 
@property (assign,nonatomic) void* localVideoLayer; 
@property (assign,nonatomic) void* remoteVideoLayer; 
@property (readonly) double localFramerate; 
@property (readonly) double localBitrate; 
@property (readonly) double remoteFramerate; 
@property (readonly) double remoteBitrate; 
+(id)defaultVoiceChatService;
-(void)dealloc;
-(id)init;
-(int)state;
-(void)setState:(int)arg1 ;
-(void)cleanup;
-(void)resetState;
-(void)setWrapperService:(GKVoiceChatService *)arg1 ;
-(char)startVoiceChatWithParticipantID:(id)arg1 error:(id*)arg2 ;
-(void)stopVoiceChatWithParticipantID:(id)arg1 ;
-(char)acceptCallID:(unsigned long)arg1 error:(id*)arg2 ;
-(void)denyCallID:(unsigned long)arg1 ;
-(void)receivedData:(id)arg1 fromParticipantID:(id)arg2 ;
-(float)remoteParticipantVolume;
-(void)setRemoteParticipantVolume:(float)arg1 ;
-(void)setRemoteVideoLayer:(void*)arg1 ;
-(void)receivedRealTimeData:(id)arg1 fromParticipantID:(id)arg2 ;
-(char)isOutputMeteringEnabled;
-(void)setOutputMeteringEnabled:(char)arg1 ;
-(char)isInputMeteringEnabled;
-(void)setInputMeteringEnabled:(char)arg1 ;
-(float)outputMeterLevel;
-(float)inputMeterLevel;
-(void)setMicrophoneMuted:(char)arg1 ;
-(char)isMicrophoneMuted;
-(void*)remoteVideoLayer;
-(void)videoConference:(id)arg1 didStartSession:(char)arg2 withCallID:(unsigned long)arg3 error:(id)arg4 ;
-(void)videoConference:(id)arg1 didStopWithCallID:(unsigned long)arg2 error:(id)arg3 ;
-(void)vcArg:(id)arg1 sendRealTimeData:(id)arg2 toParticipantID:(id)arg3 ;
-(void)setChatMode:(int)arg1 ;
-(void)forceNoICE:(char)arg1 ;
-(int)chatMode;
-(char)isFocus;
-(void)setLocalVideoLayer:(void*)arg1 ;
-(void*)localVideoLayer;
-(void)setFocus:(char)arg1 ;
-(void)getNSError:(id*)arg1 code:(int)arg2 description:(id)arg3 reason:(id)arg4 ;
-(id)createInvite:(id*)arg1 toParticipant:(id)arg2 callID:(unsigned*)arg3 ;
-(id)createReplyUsingDictionary:(id)arg1 replyCode:(unsigned)arg2 error:(id*)arg3 ;
-(int)startICEConnectionCheck:(id)arg1 isCaller:(char)arg2 withCallID:(unsigned long)arg3 ;
-(void)informClientVoiceChatDidNotStart:(id)arg1 ;
-(void)informClientOfInviteFromParticipant:(id)arg1 ;
-(void)informClientVoiceChatDidStart:(id)arg1 ;
-(void)informClientVoiceChatDidStop:(id)arg1 ;
-(void)stopVoiceChatProc:(id)arg1 ;
-(double)localFramerate;
-(double)localBitrate;
-(double)remoteFramerate;
-(double)remoteBitrate;
-(id)localDisplayNameForCallID:(unsigned long)arg1 ;
-(id)remoteDisplayNameForCallID:(unsigned long)arg1 ;
-(int)startICEConnectionCheck:(id)arg1 isCaller:(char)arg2 ;
-(void)informClientVoiceChatDidStartMainSelector:(id)arg1 ;
-(void)informClientVoiceChatDidNotStartMainSelector:(id)arg1 ;
-(char)inviteIsValid:(id)arg1 ;
-(void)getNSError:(id*)arg1 code:(int)arg2 description:(id)arg3 hResult:(long)arg4 ;
-(GKVoiceChatService *)wrapperService;
-(id)client;
-(void)setClient:(id)arg1 ;
@end

