/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 6, 2015 at 2:33:50 PM Japan Standard Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /System/Library/PrivateFrameworks/PhotosPlayer.framework/PhotosPlayer
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <PhotosPlayer/PhotosPlayer-Structs.h>
#import <libobjc.A.dylib/ISVisibilityOffsetComputer.h>

@class UIScrollView;

@interface ISVisibilityOffsetHelper : NSObject <ISVisibilityOffsetComputer> {

	int _direction;
	float _maximumDistance;
	float _maximumDistanceLag;
	UIScrollView* __scrollView;
	CGPoint __targetContentOffset;

}

@property (assign,nonatomic) int direction;                                                             //@synthesize direction=_direction - In the implementation block
@property (assign,nonatomic) float maximumDistance;                                                     //@synthesize maximumDistance=_maximumDistance - In the implementation block
@property (assign,nonatomic) float maximumDistanceLag;                                                  //@synthesize maximumDistanceLag=_maximumDistanceLag - In the implementation block
@property (setter=_setScrollView:,nonatomic,retain) UIScrollView * _scrollView;                         //@synthesize _scrollView=__scrollView - In the implementation block
@property (assign,setter=_setTargetContentOffset:,nonatomic) CGPoint _targetContentOffset;              //@synthesize _targetContentOffset=__targetContentOffset - In the implementation block
-(void)_setScrollView:(id)arg1 ;
-(void)setMaximumDistance:(float)arg1 ;
-(UIScrollView *)_scrollView;
-(void)setDirection:(int)arg1 ;
-(int)direction;
-(CGPoint)_targetContentOffset;
-(void)getVisibility:(char*)arg1 offset:(double*)arg2 targetVisibilityOffset:(double*)arg3 forView:(id)arg4 ;
-(void)computeVisibilityOffsetsInScrollView:(id)arg1 withTargetContentOffset:(CGPoint)arg2 usingBlock:(/*^block*/id)arg3 ;
-(void)_setTargetContentOffset:(CGPoint)arg1 ;
-(void)_updateDirectionIfNeeded;
-(ISVisibilityRange)_visibilityRangeForRect:(CGRect)arg1 ;
-(float)maximumDistance;
-(float)maximumDistanceLag;
-(void)setMaximumDistanceLag:(float)arg1 ;
@end

