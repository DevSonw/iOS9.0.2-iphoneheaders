/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 6, 2015 at 2:32:13 PM Japan Standard Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /System/Library/PrivateFrameworks/CloudDocsDaemon.framework/CloudDocsDaemon
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <CloudDocsDaemon/CloudDocsDaemon-Structs.h>
#import <libobjc.A.dylib/BRCProcessMonitorDelegate.h>
#import <libobjc.A.dylib/BRCForegroundClient.h>

@class BRCClientPrivilegesDescriptor, BRCAccountSession, NSCountedSet, NSOperationQueue, NSMutableDictionary, brc_task_tracker, NSXPCConnection, NSString, NSSet;

@interface BRCXPCClient : NSObject <BRCProcessMonitorDelegate, BRCForegroundClient> {

	BRCClientPrivilegesDescriptor* _clientPriviledgesDescriptor;
	BRCAccountSession* _session;
	char _dieOnInvalidate;
	unsigned _isForeground : 1;
	unsigned _invalidated : 1;
	int _clientPid;
	SCD_Struct_BR20 auditToken;
	NSCountedSet* _containers;
	NSOperationQueue* _acceptOperationQueue;
	NSMutableDictionary* _runningAcceptOperations;
	brc_task_tracker* _tracker;
	char _isUsingUbiquity;
	NSXPCConnection* _connection;

}

@property (nonatomic,readonly) NSString * defaultContainerID; 
@property (nonatomic,readonly) NSSet * entitledContainerIDs; 
@property (nonatomic,readonly) NSString * bundleID; 
@property (assign,nonatomic) char isUsingUbiquity;                                      //@synthesize isUsingUbiquity=_isUsingUbiquity - In the implementation block
@property (nonatomic,readonly) char hasPrivateSharingInterfaceEntitlement; 
@property (nonatomic,__weak,readonly) NSXPCConnection * connection;                     //@synthesize connection=_connection - In the implementation block
@property (nonatomic,readonly) char dieOnInvalidate;                                    //@synthesize dieOnInvalidate=_dieOnInvalidate - In the implementation block
@property (nonatomic,retain) BRCAccountSession * session;                               //@synthesize session=_session - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) NSString * identifier; 
-(NSString *)bundleID;
-(BRCAccountSession *)session;
-(NSString *)description;
-(void)invalidate;
-(NSString *)identifier;
-(char)cloudEnabledStatus;
-(NSXPCConnection *)connection;
-(void)setSession:(BRCAccountSession *)arg1 ;
-(void)dumpToContext:(id)arg1 ;
-(void)addContainer:(id)arg1 ;
-(char)hasPrivateSharingInterfaceEntitlement;
-(void)removeContainer:(id)arg1 ;
-(NSSet *)entitledContainerIDs;
-(void)setPrivilegesDescriptor:(id)arg1 ;
-(char)dieOnInvalidate;
-(char)isUsingUbiquity;
-(void)_stopMonitoringProcess;
-(char)_isAutomationEntitled;
-(void)process:(int)arg1 didBecomeForeground:(char)arg2 ;
-(void)_startMonitoringProcessIfNeeded;
-(char)_hasPrivateIPCEntitlementForSelector:(SEL)arg1 error:(id*)arg2 ;
-(char)_isContainerProxyEntitled;
-(char)_hasAccessToContainerID:(id)arg1 error:(id*)arg2 ;
-(char)_canCreateContainerWithID:(id)arg1 error:(id*)arg2 ;
-(char)_isContainerProxyWithError:(id*)arg1 ;
-(void)accessLogicalOrPhysicalURL:(id)arg1 needsWrite:(char)arg2 asynchronously:(char)arg3 handler:(/*^block*/id)arg4 ;
-(char)_entitlementBooleanValueForKey:(id)arg1 ;
-(id)_entitlementValueForKey:(id)arg1 ofClass:(Class)arg2 ;
-(NSString *)defaultContainerID;
-(char)canAccessPath:(const char*)arg1 needsWrite:(char)arg2 ;
-(void)_startDownloadItemsAtURLs:(id)arg1 pos:(unsigned)arg2 options:(unsigned)arg3 error:(id)arg4 reply:(/*^block*/id)arg5 ;
-(id)setupPrivateContainer:(id)arg1 root:(id)arg2 error:(id*)arg3 ;
-(char)canAccessPhysicalURL:(id)arg1 ;
-(id)issueContainerExtensionForURL:(id)arg1 error:(id*)arg2 ;
-(void)_addExternalDocumentReferenceTo:(id)arg1 underParent:(id)arg2 forceReparent:(char)arg3 reply:(/*^block*/id)arg4 ;
-(void)_setupContainerID:(id)arg1 andSendReply:(/*^block*/id)arg2 ;
-(id)_disabledBundleIDs;
-(void)setupNonSandboxedAccessForUbiquityContainers:(id)arg1 forBundleID:(id)arg2 ;
-(void)setIsUsingUbiquity:(char)arg1 ;
-(char)isSandboxed;
-(id)initWithConnection:(id)arg1 ;
-(void)wait;
@end

