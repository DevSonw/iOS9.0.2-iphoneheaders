/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 6, 2015 at 2:38:18 PM Japan Standard Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /System/Library/PrivateFrameworks/CoreSuggestions.framework/suggestd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <libobjc.A.dylib/SGDSuggestManagerProtocol.h>

@protocol OS_dispatch_queue, OS_dispatch_semaphore;
@class SGSqlEntityStore, NSXPCConnection, SGSuggestHistory, NSObject, SGAsset;

@interface SGDSuggestManager : NSObject <SGDSuggestManagerProtocol> {

	SGSqlEntityStore* _harvestStore;
	NSXPCConnection* _connection;
	SGSuggestHistory* _history;
	/*^block*/id _ekStoreFactory;
	NSObject*<OS_dispatch_queue> _frontfillQueue;
	NSObject*<OS_dispatch_queue> _harvestQueue;
	NSObject*<OS_dispatch_semaphore> _frontfillSemaphoreForTesting;
	/*^block*/id _harvestQueueItemProcessedHookForTesting;
	char _dirty;
	char _xpcActivity;
	SGAsset* _asset;
	NSObject*<OS_dispatch_semaphore> _pendingGeocodeSemaphore;

}
+(id)decodeWorkQueueItem:(id)arg1 ;
+(id)_dictionaryFromSearchableItem:(id)arg1 ;
+(id)_searchableItemFromDictionary:(id)arg1 ;
+(void)resetLastFrontfillFinishTimeForTesting;
+(void)resetXpcActivityForTesting;
+(void)initialize;
-(void)_registerForCTSVacuumActivity;
-(id)curatedEventsWithSameOpaqueKeyAsPseudoEvent:(id)arg1 ;
-(void)processPendingGeocodes;
-(id)cachedResultForKey:(id)arg1 generateResult:(/*^block*/id)arg2 validateResult:(/*^block*/id)arg3 ;
-(id)curatedEventKeyForExactMatchOfPseudoEvent:(id)arg1 candidates:(id)arg2 ;
-(void)enqueueSearchableItems:(id)arg1 ;
-(char)_attemptToProcessSearchableItemWithoutDissection:(id)arg1 ;
-(unsigned)drainHarvestQueue:(id)arg1 withKeepGoingCallback:(/*^block*/id)arg2 ;
-(void)resumeFrontfillForTesting;
-(void)suspendFrontfillForTesting;
-(char)canSeeCalendar;
-(id)_maybeFormatString;
-(void)_performAction:(id)arg1 onRecord:(id)arg2 completion:(/*^block*/id)arg3 ;
-(id)duplicateKeyForCuratedEventCreatedFromEmail:(id)arg1 ;
-(char)containsNonCuratedData:(id)arg1 ;
-(id)xpcActivity;
-(id)initWithStore:(id)arg1 xpcActivity:(char)arg2 ;
-(void)_performCTSharvestOfWorkQueue:(id)arg1 xpcActivity:(id)arg2 ;
-(id)initWithConnection:(id)arg1 store:(id)arg2 ;
-(void)_registerForCTSTrimActivity;
-(void)_registerForCTSHarvestActivity;
-(id)fetchEKEventForPseudoEventBySimilarTitleAndStartTime:(id)arg1 entityTitle:(id)arg2 ;
-(void)setupManagerWithConnection:(id)arg1 store:(id)arg2 xpcActivity:(char)arg3 ;
-(void)_performAction:(id)arg1 onContactDetailRecord:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)_suggestionsFromMailMessageWithHeadersHash:(id)arg1 source:(id)arg2 options:(unsigned)arg3 completion:(/*^block*/id)arg4 providedBy:(/*^block*/id)arg5 dissectIfNecessary:(char)arg6 ;
-(id)shortNamesAndRealtimeEventsFromEntity:(id)arg1 enrichments:(id)arg2 store:(id)arg3 ;
-(id)_contactMatchesByPhoneNumber:(id)arg1 ;
-(char)_canBannerUseStoredDissection:(id)arg1 options:(unsigned)arg2 ;
-(void)drainBothQueuesCompletely;
-(void)_adjustCriteriaForCTS;
-(void)waitUntilFrontfillFinishedForTesting;
-(id)dissectSimpleMailMessage:(id)arg1 sourceId:(id)arg2 andStore:(id)arg3 ;
-(void)registerForCTS;
-(id)_contactMatchesByEmailAddress:(id)arg1 ;
-(void)registerForCoreSpotlightIndexing;
-(char)processSearchableItem:(id)arg1 pipeline:(id)arg2 dissectionQueue:(id)arg3 storeQueue:(id)arg4 semaphore:(id)arg5 ;
-(char)_isContactInteresting:(id)arg1 emailEntity:(id)arg2 ;
-(void)_suggestionsFromSearchableItem:(id)arg1 options:(unsigned)arg2 dissectIfNecessary:(char)arg3 withCompletion:(/*^block*/id)arg4 ;
-(id)storageContactFromRecordId:(id)arg1 ;
-(id)_mapToPseudoEvents:(id)arg1 ;
-(id)fetchEKEventForPseudoNLEvent:(id)arg1 entityTitle:(id)arg2 ;
-(void)setHarvestQueueItemProcessedForTesting:(/*^block*/id)arg1 ;
-(void)setEKStoreFactoryForTesting:(/*^block*/id)arg1 ;
-(id)realtimeContactsFromEntity:(id)arg1 enrichments:(id)arg2 store:(id)arg3 ;
-(void)suggestionsFromSearchableItem:(id)arg1 options:(unsigned)arg2 withCompletion:(/*^block*/id)arg3 ;
-(void)dealloc;
-(void)prepareForRealtimeExtraction:(/*^block*/id)arg1 ;
-(void)addSearchableItems:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)contactFromRecordId:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)allContactsLimitedTo:(unsigned)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)rejectEventByRecordId:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)contactMatchesWithMessagingPrefix:(id)arg1 limitTo:(unsigned)arg2 withCompletion:(/*^block*/id)arg3 ;
-(void)contactMatchesWithFullTextSearch:(id)arg1 limitTo:(unsigned)arg2 withCompletion:(/*^block*/id)arg3 ;
-(void)drainBothQueuesCompletelyWithCompletion:(/*^block*/id)arg1 ;
-(void)reportMessagesFound:(id)arg1 lost:(id)arg2 withCompletion:(/*^block*/id)arg3 ;
-(void)confirmEventByRecordId:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)removeAllStoredPseudoContactsWithCompletion:(/*^block*/id)arg1 ;
-(void)eventsStartingAt:(id)arg1 endingAt:(id)arg2 limitTo:(unsigned)arg3 options:(unsigned)arg4 withCompletion:(/*^block*/id)arg5 ;
-(void)addSearchableItemMetadata:(id)arg1 htmlData:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)emailAddressIsSignificant:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)rejectEvent:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)confirmRecord:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)clearCachesFully:(char)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)suggestionsFromEmailContent:(id)arg1 headers:(id)arg2 source:(id)arg3 options:(unsigned)arg4 withCompletion:(/*^block*/id)arg5 ;
-(void)rejectRecord:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)rejectContact:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)cnContactMatchesForRecordIds:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)confirmContact:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)predictedToEmailAddressesWithToAddresses:(id)arg1 ccAddresses:(id)arg2 fromAddress:(id)arg3 date:(double)arg4 bounds:(id)arg5 completion:(/*^block*/id)arg6 ;
-(void)eventFromUniqueId:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)cnContactMatchesForRecordId:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)harvestedSuggestionsFromSearchableItem:(id)arg1 options:(unsigned)arg2 withCompletion:(/*^block*/id)arg3 ;
-(void)predictedCCEmailAddressesWithToAddresses:(id)arg1 ccAddresses:(id)arg2 fromAddress:(id)arg3 date:(double)arg4 bounds:(id)arg5 completion:(/*^block*/id)arg6 ;
-(void)eventFromRecordId:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)contactMatchesOrLookupIdByPhoneNumber:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)isEnabledWithCompletion:(/*^block*/id)arg1 ;
-(void)sendRTCLogsWithCompletion:(/*^block*/id)arg1 ;
-(void)resetConfirmationAndRejectionHistory:(/*^block*/id)arg1 ;
-(void)rejectContactDetailRecord:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)messagesToRefreshWithCompletion:(/*^block*/id)arg1 ;
-(void)suggestionsFromRFC822Data:(id)arg1 source:(id)arg2 options:(unsigned)arg3 withCompletion:(/*^block*/id)arg4 ;
-(void)confirmContactDetailRecord:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)updateMessages:(id)arg1 state:(unsigned)arg2 completion:(/*^block*/id)arg3 ;
-(void)purgeSpotlightReferencesWithBundleIdentifier:(id)arg1 uniqueIdentifiers:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)resolveFullDownloadRequests:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)contactMatchesWithContactIdentifier:(id)arg1 limitTo:(unsigned)arg2 withCompletion:(/*^block*/id)arg3 ;
-(void)eventsStartingAt:(id)arg1 endingAt:(id)arg2 prefix:(id)arg3 limitTo:(unsigned)arg4 options:(unsigned)arg5 withCompletion:(/*^block*/id)arg6 ;
-(void)contactMatchesWithContact:(id)arg1 limitTo:(unsigned)arg2 withCompletion:(/*^block*/id)arg3 ;
-(void)confirmEvent:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)relevantABRecordIDsWithLimit:(int)arg1 completion:(/*^block*/id)arg2 ;
-(void)deleteSpotlightReferencesWithBundleIdentifier:(id)arg1 domainIdentifiers:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)fullDownloadRequestBatch:(unsigned)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)deleteSpotlightReferencesWithBundleIdentifier:(id)arg1 uniqueIdentifiers:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)eventsInFutureLimitTo:(unsigned)arg1 options:(unsigned)arg2 withCompletion:(/*^block*/id)arg3 ;
-(void)keepDirty:(char)arg1 ;
-(void)originFromRecordId:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)deleteSpotlightReferencesWithBundleIdentifier:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)contactMatchesOrLookupIdByEmailAddress:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(id)ekStore;
-(void)namesForDetail:(id)arg1 limitTo:(unsigned)arg2 prependMaybe:(char)arg3 withCompletion:(/*^block*/id)arg4 ;
-(void)contactMatchesByEmailAddress:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)contactMatchesByPhoneNumber:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
@end

