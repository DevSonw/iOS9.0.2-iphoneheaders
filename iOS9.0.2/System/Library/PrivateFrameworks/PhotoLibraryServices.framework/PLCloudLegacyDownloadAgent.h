/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 6, 2015 at 2:33:49 PM Japan Standard Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <PhotoLibraryServices/PhotoLibraryServices-Structs.h>
#import <PhotoLibraryServices/PLCloudScenarioProducer.h>

@protocol OS_dispatch_queue;
@class NSObject, NSDate, PLPhotoLibrary, PLCloudPhotoLibraryManager;

@interface PLCloudLegacyDownloadAgent : PLCloudScenarioProducer {

	NSObject*<OS_dispatch_queue> _agentQueue;
	SCD_Struct_PL27 _walkStatus[6];
	char _waitingForInitialDownloadDone;
	char _initialDownloadDone;
	char _shouldRunAgainWhenFinished;
	char _running;
	NSDate* __lastRunDate;
	PLPhotoLibrary* _localLibrary;
	PLCloudPhotoLibraryManager* _remoteLibrary;

}

@property (copy) NSDate * _lastRunDate;                                     //@synthesize _lastRunDate=__lastRunDate - In the implementation block
@property (assign) char shouldRunAgainWhenFinished;                         //@synthesize shouldRunAgainWhenFinished=_shouldRunAgainWhenFinished - In the implementation block
@property (getter=isRunning) char running;                                  //@synthesize running=_running - In the implementation block
@property (nonatomic,retain) PLPhotoLibrary * localLibrary;                 //@synthesize localLibrary=_localLibrary - In the implementation block
@property (retain) PLCloudPhotoLibraryManager * remoteLibrary;              //@synthesize remoteLibrary=_remoteLibrary - In the implementation block
-(unsigned)batchSize;
-(void)dealloc;
-(id)init;
-(void)activate;
-(char)isRunning;
-(void)systemStarted:(id)arg1 ;
-(void)metadataStable:(id)arg1 ;
-(void)setRunning:(char)arg1 ;
-(void)_runOnAgentQueueWithTransaction:(id)arg1 block:(/*^block*/id)arg2 ;
-(int)typeToIndex:(unsigned)arg1 ;
-(void)_runOnAgentQueueWithTransaction:(id)arg1 delay:(double)arg2 block:(/*^block*/id)arg3 ;
-(void)cplResourcesForFetchRequest:(id)arg1 ofType:(unsigned)arg2 startingAtOffset:(unsigned)arg3 completionHandler:(/*^block*/id)arg4 ;
-(PLCloudPhotoLibraryManager *)remoteLibrary;
-(void)setLocalLibrary:(PLPhotoLibrary *)arg1 ;
-(void)setRemoteLibrary:(PLCloudPhotoLibraryManager *)arg1 ;
-(PLPhotoLibrary *)localLibrary;
-(void)_monitorForCompletion;
-(void)_beginPopulatingResourcesOfType:(unsigned)arg1 withFetchRequest:(id)arg2 startingAtOffset:(unsigned)arg3 then:(/*^block*/id)arg4 ;
-(void)downloadResources:(id)arg1 withCompletionHandler:(/*^block*/id)arg2 ;
-(void)beginPopulatingResourcesOfType:(unsigned)arg1 withFetchRequest:(id)arg2 then:(/*^block*/id)arg3 ;
-(void)_regulatedPrefetch;
-(NSDate *)_lastRunDate;
-(void)_prefetchResources;
-(void)setShouldRunAgainWhenFinished:(char)arg1 ;
-(void)_tryAgainLater;
-(void)_prefetchAllThumbnailsAndLastWeeksFullAndOriginals;
-(void)_prefetchLastWeeksFullAndOriginals;
-(void)_prefetchLastWeeksOriginals;
-(void)_checkWalkStatusIfNeeded;
-(void)_handlePrefetchFinished;
-(char)shouldRunAgainWhenFinished;
-(void)set_lastRunDate:(NSDate *)arg1 ;
-(void)_resetWalkStatus;
-(void)_waitForDownloadDoneIfNeeded;
@end

