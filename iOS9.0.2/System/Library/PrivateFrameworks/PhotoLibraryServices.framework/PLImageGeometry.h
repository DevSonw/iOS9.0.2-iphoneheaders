/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 6, 2015 at 2:33:45 PM Japan Standard Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <PhotoLibraryServices/PhotoLibraryServices-Structs.h>
#import <libobjc.A.dylib/NSCopying.h>

@interface PLImageGeometry : NSObject <NSCopying> {

	int _appliedOrientation;
	CGRect _inputRect;

}

@property (nonatomic,readonly) CGRect inputRect;                                     //@synthesize inputRect=_inputRect - In the implementation block
@property (nonatomic,readonly) CGRect outputRect; 
@property (assign,nonatomic) int appliedOrientation;                                 //@synthesize appliedOrientation=_appliedOrientation - In the implementation block
@property (nonatomic,readonly) CGAffineTransform appliedTransform; 
@property (getter=isSizeInverted,nonatomic,readonly) char sizeInverted; 
@property (getter=isMirrored,nonatomic,readonly) char mirrored; 
+(id)geometryWithInputSize:(CGSize)arg1 initialOrientation:(int)arg2 ;
+(id)geometryWithOutputSize:(CGSize)arg1 appliedOrientation:(int)arg2 ;
-(CGAffineTransform)appliedTransform;
-(void)setAppliedOrientation:(int)arg1 ;
-(char)isSizeInverted;
-(id)initWithInputSize:(CGSize)arg1 ;
-(CGRect)denormalizeRect:(CGRect)arg1 basis:(int)arg2 ;
-(CGRect)normalizeRect:(CGRect)arg1 basis:(int)arg2 ;
-(int)appliedOrientation;
-(CGAffineTransform)transformFromOrientation:(int)arg1 ;
-(void)rotateCounterClockwise;
-(id)init;
-(id)description;
-(id)copyWithZone:(NSZone*)arg1 ;
-(void)applyOrientation:(int)arg1 ;
-(CGRect)inputRect;
-(CGRect)outputRect;
-(CGRect)_basisRect:(int)arg1 ;
-(CGAffineTransform)_transformFromOrientation:(int)arg1 toOrientation:(int)arg2 ;
-(char)isMirrored;
-(void)flipVertically;
-(void)flipHorizontally;
-(void)rotateClockwise;
-(CGRect)inputRectForOutputRect:(CGRect)arg1 ;
-(CGRect)outputRectForInputRect:(CGRect)arg1 ;
-(CGAffineTransform)transformToOrientation:(int)arg1 ;
@end

