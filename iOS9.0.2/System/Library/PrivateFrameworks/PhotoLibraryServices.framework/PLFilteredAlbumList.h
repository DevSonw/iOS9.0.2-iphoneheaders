/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 6, 2015 at 2:33:48 PM Japan Standard Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <PhotoLibraryServices/PhotoLibraryServices-Structs.h>
#import <libobjc.A.dylib/PLAlbumContainer.h>
#import <libobjc.A.dylib/PLIndexMapperDataSource.h>
#import <libobjc.A.dylib/PLIndexMappingCache.h>
#import <libobjc.A.dylib/PLDerivedAlbumListOrigin.h>

@protocol PLIndexMappingCache;
@class PLIndexMapper, NSMutableIndexSet, NSMutableOrderedSet, NSObject, PLManagedAlbumList, NSPredicate, PLPhotoLibrary, NSString, NSIndexSet;

@interface PLFilteredAlbumList : NSObject <PLAlbumContainer, PLIndexMapperDataSource, PLIndexMappingCache, PLDerivedAlbumListOrigin> {

	PLIndexMapper* _indexMapper;
	NSMutableIndexSet* _filteredIndexes;
	NSMutableOrderedSet* _weak_albums;
	NSObject*<PLIndexMappingCache> _derivedAlbumLists[5];
	PLManagedAlbumList* backingAlbumList;
	int filter;
	NSPredicate* predicate;

}

@property (nonatomic,readonly) short albumListType; 
@property (assign,nonatomic) int filter; 
@property (nonatomic,retain,readonly) NSMutableOrderedSet * albums; 
@property (nonatomic,readonly) unsigned unreadAlbumsCount; 
@property (nonatomic,readonly) char canEditAlbums; 
@property (nonatomic,retain,readonly) PLPhotoLibrary * photoLibrary; 
@property (nonatomic,retain,readonly) PLIndexMapper * indexMapper; 
@property (nonatomic,retain) PLManagedAlbumList * backingAlbumList; 
@property (nonatomic,retain) NSPredicate * predicate; 
@property (nonatomic,retain) NSMutableOrderedSet * _albums; 
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) unsigned containersCount; 
@property (nonatomic,readonly) unsigned albumsCount; 
@property (nonatomic,readonly) char isFolder; 
@property (nonatomic,copy,readonly) id albumsSortingComparator; 
@property (nonatomic,retain,readonly) NSString * _prettyDescription; 
@property (nonatomic,retain,readonly) NSString * _typeDescription; 
@property (nonatomic,copy,readonly) NSIndexSet * filteredIndexes; 
@property (nonatomic,copy,readonly) id<NSObject><NSCopying> cachedIndexMapState; 
+(id)filteredAlbumList:(id)arg1 filter:(int)arg2 ;
-(id)containers;
-(char)isFolder;
-(unsigned)containersCount;
-(int)filter;
-(NSMutableOrderedSet *)albums;
-(unsigned)unreadAlbumsCount;
-(PLPhotoLibrary *)photoLibrary;
-(char)canEditContainers;
-(id)containersRelationshipName;
-(short)albumListType;
-(char)hasAtLeastOneAlbum;
-(char)canEditAlbums;
-(char)albumHasFixedOrder:(NSObject*)arg1 ;
-(void)setNeedsReordering;
-(char)needsReordering;
-(void)updateAlbumsOrderIfNeeded;
-(void)preheatAlbumsForProperties:(id)arg1 relationships:(id)arg2 ;
-(void)preheatAlbumsAtIndexes:(id)arg1 forProperties:(id)arg2 relationships:(id)arg3 ;
-(unsigned)albumsCount;
-(id)albumsSortingComparator;
-(NSString *)_prettyDescription;
-(NSString *)_typeDescription;
-(void)dealloc;
-(NSString *)description;
-(id)identifier;
-(char)isEmpty;
-(void)setFilter:(int)arg1 ;
-(void)setPredicate:(NSPredicate *)arg1 ;
-(NSPredicate *)predicate;
-(id)managedObjectContext;
-(void)unregisterAllDerivedAlbums;
-(NSIndexSet *)filteredIndexes;
-(char)shouldIncludeObjectAtIndex:(unsigned)arg1 ;
-(char)mappedDataSourceChanged:(id)arg1 remoteNotificationData:(id)arg2 ;
-(Class)derivedChangeNotificationClass;
-(id<NSObject><NSCopying>)cachedIndexMapState;
-(PLIndexMapper *)indexMapper;
-(void)enumerateDerivedAlbumLists:(/*^block*/id)arg1 ;
-(void)registerDerivedAlbumList:(NSObject*)arg1 ;
-(id)initWithBackingAlbumList:(id)arg1 filter:(int)arg2 ;
-(void)setBackingAlbumList:(PLManagedAlbumList *)arg1 ;
-(PLManagedAlbumList *)backingAlbumList;
-(void)_backingContextDidChange:(id)arg1 ;
-(void)_invalidateFilteredIndexes;
-(NSMutableOrderedSet *)_albums;
-(void)set_albums:(NSMutableOrderedSet *)arg1 ;
-(unsigned)countOfFilteredAlbums;
-(unsigned)indexInFilteredAlbumsOfObject:(id)arg1 ;
-(id)objectInFilteredAlbumsAtIndex:(unsigned)arg1 ;
-(id)filteredAlbumsAtIndexes:(id)arg1 ;
-(void)getFilteredAlbums:(id*)arg1 range:(NSRange)arg2 ;
-(void)insertObject:(id)arg1 inFilteredAlbumsAtIndex:(unsigned)arg2 ;
-(void)removeObjectFromFilteredAlbumsAtIndex:(unsigned)arg1 ;
-(void)insertFilteredAlbums:(id)arg1 atIndexes:(id)arg2 ;
-(void)removeFilteredAlbumsAtIndexes:(id)arg1 ;
-(void)replaceObjectInFilteredAlbumsAtIndex:(unsigned)arg1 withObject:(id)arg2 ;
-(void)replaceFilteredAlbumsAtIndexes:(id)arg1 withFilteredValues:(id)arg2 ;
@end

