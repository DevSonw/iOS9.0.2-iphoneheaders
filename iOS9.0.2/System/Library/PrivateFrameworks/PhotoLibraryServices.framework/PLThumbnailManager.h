/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 6, 2015 at 2:33:46 PM Japan Standard Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


@protocol PLThumbPersistenceManager;
#import <PhotoLibraryServices/PhotoLibraryServices-Structs.h>
@class PLPhotoLibrary, NSLock, NSIndexSet, NSDictionary, NSArray, NSMutableDictionary, PLLargeImageLoader, NSMutableSet, NSMutableArray;

@interface PLThumbnailManager : NSObject {

	PLPhotoLibrary* _photoLibrary;
	NSLock* _lock;
	NSIndexSet* _occupiedIndexes;
	NSDictionary* _changedPhotosMap;
	NSArray* _changedPhotos;
	NSMutableDictionary* _thumbManagersByFormat;
	id<PLThumbPersistenceManager> _lastUsedThumbManager;
	int _lastUsedThumbManagerFormat;
	PLLargeImageLoader* _largeImageLoaderFullSize;
	PLLargeImageLoader* _largeImageLoaderFullScreen;
	PLLargeImageLoader* _largeImageLoaderFilledScreen;
	PLLargeImageLoader* _largeImageLoaderFilledHalfScreen;
	NSMutableSet* _previouslyRequestedThumbnailFixOIDs;
	NSMutableSet* _requestedThumbnailFixAssets;
	NSMutableArray* _alreadyFailedAssetObjectIDsForRebuild;
	FigCascadeContextRef _unicornContextPortrait;
	FigCascadeContextRef _unicornContextLandscape;
	id _observerToken;

}

@property (assign,nonatomic) PLPhotoLibrary * photoLibrary;                                     //@synthesize photoLibrary=_photoLibrary - In the implementation block
@property (nonatomic,retain,readonly) NSMutableDictionary * thumbManagersByFormat;              //@synthesize thumbManagersByFormat=_thumbManagersByFormat - In the implementation block
@property (nonatomic,retain) id observerToken;                                                  //@synthesize observerToken=_observerToken - In the implementation block
+(char)isRidingPowderSnow;
+(id)supportedThumbnailFormats;
+(int)largestNonJPEGThumbnailFormat;
+(char)isMissingThumbnailTables;
+(char)hasObsoleteThumbnailFormats;
+(void)removeObsoleteMetadata;
+(id)defaultThumbnailsDirectoryV2;
+(id)defaultThumbnailsDirectory;
+(char)hasRebuildThumbnailsRequest;
+(int)thumbnailFormat;
+(char)shouldUseLargerNonJPEGThumbnailFormat;
+(id)_allPossibleThumbnailFormats;
+(int)thumbnailVersion;
+(int)thumbnailVersionCurrent;
+(char)_thumbnailChangeContainsOnlyTableDeprecationsFromVersion:(int)arg1 toVersion:(int)arg2 fromFormat:(int)arg3 toFormat:(int)arg4 ;
+(char)useImageTableForFormat:(int)arg1 ;
+(char)hasDeprecationsOnly;
+(void)_removeThumbnailTablesUnsupportedOnly:(char)arg1 ;
+(void)removeRebuildThumbnailsRequest:(const char*)arg1 ;
+(char)isRidingCrudSnow;
+(void)resetThumbnails;
+(void)saveCameraPreviewWellImageForAsset:(id)arg1 ;
+(void)saveCameraPreviewWellImage:(CGImageRef)arg1 uuid:(id)arg2 ;
+(id)cameraPreviewWellImageQueue;
+(void)addRebuildThumbnailsRequest;
+(void)rebuildAllMissingThumbnails;
+(char)isRebuildingThumbnails;
+(char)hasExceededRebuildThumbnailRequestLimit;
+(void)handleRebuildThumbnailRequestPersistentFailure;
+(id)cameraPreviewWellAssetUUID;
-(PLPhotoLibrary *)photoLibrary;
-(void)dealloc;
-(void)setObserverToken:(id)arg1 ;
-(id)observerToken;
-(id)initWithWeakPhotoLibrary:(id)arg1 ;
-(void)clearPhotoLibrary;
-(id)dataForPhoto:(id)arg1 format:(int)arg2 allowPlaceholder:(char)arg3 width:(int*)arg4 height:(int*)arg5 bytesPerRow:(int*)arg6 dataWidth:(int*)arg7 dataHeight:(int*)arg8 imageDataOffset:(int*)arg9 ;
-(id)newImageForPhoto:(id)arg1 withFormat:(int)arg2 allowPlaceholder:(char)arg3 outImageProperties:(const _CFDictionary*)arg4 outDeliveredPlaceholder:(char*)arg5 ;
-(id)beginThumbnailSafePropertyUpdatesOnAsset:(id)arg1 ;
-(void)endThumbnailSafePropertyUpdatesOnAsset:(id)arg1 withToken:(id)arg2 ;
-(id)newImageForPhoto:(id)arg1 withFormat:(int)arg2 allowPlaceholder:(char)arg3 optimalSourcePixelSize:(CGSize)arg4 networkAccessAllowed:(char)arg5 networkAccessForced:(char)arg6 trackCPLDownload:(char)arg7 outImageProperties:(const _CFDictionary*)arg8 outImageDataInfo:(id*)arg9 outCPLDownloadContext:(id*)arg10 ;
-(int)_rebuildAssetThumbnailsWithLimit:(int)arg1 error:(id*)arg2 ;
-(void)_discardAlreadyFailedAssetObjectIDsForRebuild;
-(void)setPhotoLibrary:(PLPhotoLibrary *)arg1 ;
-(char)_canAccessImageForAsset:(id)arg1 ;
-(void)assetsdImageForPhoto:(id)arg1 withFormat:(int)arg2 allowPlaceholder:(char)arg3 wantURLOnly:(char)arg4 optimalSourcePixelSize:(CGSize)arg5 networkAccessAllowed:(char)arg6 networkAccessForced:(char)arg7 trackCPLDownload:(char)arg8 completion:(/*^block*/id)arg9 ;
-(id)_thumbManagerForFormat:(int*)arg1 ;
-(id)_dataForAsset:(id)arg1 format:(int)arg2 width:(int*)arg3 height:(int*)arg4 bytesPerRow:(int*)arg5 dataWidth:(int*)arg6 dataHeight:(int*)arg7 imageDataOffset:(int*)arg8 imageDataFormat:(int*)arg9 ;
-(void)imageForPhoto:(id)arg1 withFormat:(int)arg2 allowPlaceholder:(char)arg3 optimalSourcePixelSize:(CGSize)arg4 networkAccessAllowed:(char)arg5 networkAccessForced:(char)arg6 trackCPLDownload:(char)arg7 completion:(/*^block*/id)arg8 sync:(char)arg9 ;
-(void)_unicorn_setThumbnailsForPhoto:(id)arg1 withImage:(id)arg2 ;
-(void)_horse_setThumbnailsForPhoto:(id)arg1 withImage:(id)arg2 ;
-(id)_anyImageTable;
-(id)_dataForInFlightAsset:(id)arg1 format:(int)arg2 width:(int*)arg3 height:(int*)arg4 bytesPerRow:(int*)arg5 dataWidth:(int*)arg6 dataHeight:(int*)arg7 imageDataOffset:(int*)arg8 imageDataFormat:(int*)arg9 ;
-(id)newImageDataForPhoto:(id)arg1 withFormat:(int)arg2 allowPlaceholder:(char)arg3 wantURLOnly:(char)arg4 networkAccessAllowed:(char)arg5 networkAccessForced:(char)arg6 trackCPLDownload:(char)arg7 outImageDataInfo:(id*)arg8 outCPLDownloadContext:(id*)arg9 ;
-(void)setThumbnails:(CFDictionaryRef)arg1 forPhoto:(id)arg2 ;
-(CFDictionaryRef)placeholderThumbnailDataByFormatID;
-(char)copyThumbnailsFromAsset:(id)arg1 toAsset:(id)arg2 ;
-(void)discardCachedThumbnailDownscalerContexts;
-(void)setThumbnailsForPhoto:(id)arg1 withImage:(id)arg2 ;
-(void)deleteThumbnailsWithIdentifier:(id)arg1 orIndex:(unsigned)arg2 uuid:(id)arg3 ;
-(id)preflightImageTableCompactionForPhotos:(id)arg1 ;
-(id)compactImageTables;
-(id)_tableDescriptions;
-(id)preheatItemSourceForFormat:(int)arg1 ;
-(id)thumbnailJPEGPathForPhoto:(id)arg1 ;
-(NSMutableDictionary *)thumbManagersByFormat;
@end

