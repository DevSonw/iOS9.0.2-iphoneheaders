/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 6, 2015 at 2:32:58 PM Japan Standard Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


#import <GeoServices/GeoServices-Structs.h>
@class GEOComposedRoute, GEOComposedRouteSection, NSArray, GEOMapRequest;

@interface GEOSnappedRoutePath : NSObject {

	GEOComposedRoute* _route;
	GEOComposedRouteSection* _section;
	NSArray* _edges;
	GEOMapRequest* _edgeSearchRequest;
	CFSetRef _observers;
	unique_ptr<geo::RouteMapMatchingSection, std::__1::default_delete<geo::RouteMapMatchingSection> >* _mapMatchingSection;
	char _hasCompletedMapMatching;
	unsigned _routeStartIndex;
	unsigned _routeEndIndex;
	unsigned _unsnappedPointCount;
	SCD_Struct_GE98* _unsnappedPoints;

}

@property (readonly) unsigned routeStartIndex;                                       //@synthesize routeStartIndex=_routeStartIndex - In the implementation block
@property (readonly) unsigned routeEndIndex;                                         //@synthesize routeEndIndex=_routeEndIndex - In the implementation block
@property (readonly) char isMapMatching; 
@property (readonly) char isMapMatched; 
@property (readonly) char hasCompletedMapMatching; 
@property (readonly) NSArray * edges;                                                //@synthesize edges=_edges - In the implementation block
@property (readonly) GEOComposedRouteSection * section;                              //@synthesize section=_section - In the implementation block
@property (readonly) const RouteMapMatchingSection* mapMatchingSection; 
-(void)dealloc;
-(id)description;
-(GEOComposedRouteSection *)section;
-(void)addObserver:(id)arg1 ;
-(char)removeObserver:(id)arg1 ;
-(NSArray *)edges;
-(char)isMapMatched;
-(id)initWithRoute:(id)arg1 section:(id)arg2 routeStartIndex:(unsigned)arg3 routeEndIndex:(unsigned)arg4 ;
-(float)_calculateEdgeLengthFrom:(const Matrix<float, 2, 1>*)arg1 to:(const Matrix<float, 2, 1>*)arg2 startCoord:(const PolylineCoordinate*)arg3 endCoord:(const PolylineCoordinate*)arg4 ;
-(unsigned)routeStartIndex;
-(void)_debugPrintEdge:(id)arg1 ;
-(char)hasObserver:(id)arg1 ;
-(unsigned)routeEndIndex;
-(void)matchWithDecoder:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(char)hasCompletedMapMatching;
-(const RouteMapMatchingSection*)mapMatchingSection;
-(char)isMapMatching;
@end

