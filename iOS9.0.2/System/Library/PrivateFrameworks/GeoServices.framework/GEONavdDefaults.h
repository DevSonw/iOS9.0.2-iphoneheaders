/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 6, 2015 at 2:32:47 PM Japan Standard Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


@interface GEONavdDefaults : NSObject

@property (nonatomic,readonly) double minimumDistanceToGetLocationUpdatesInMeters; 
@property (nonatomic,readonly) double locationUpdatesDesiredAccuracyWhileStationaryForDriving; 
@property (nonatomic,readonly) double locationUpdatesDesiredAccuracyWhileStationaryForWalking; 
@property (nonatomic,readonly) double locationUpdatesDesiredAccuracyForWalking; 
@property (nonatomic,readonly) double locationUpdatesDesiredAccuracyForDriving; 
@property (nonatomic,readonly) double locationUpdateTimerInterval; 
@property (nonatomic,readonly) double staleLocationUseTimerInterval; 
@property (nonatomic,readonly) double locationFreshnessThreshold; 
@property (nonatomic,readonly) double minimumDistanceToCompareAgainstLocationAccuracy; 
@property (nonatomic,readonly) unsigned initialSelfInitiatedHypothesisCacheAccessValue; 
@property (nonatomic,readonly) unsigned initialClientInitiatedHypothesisCacheAccessValue; 
@property (nonatomic,readonly) double hypothesisResponseStaleToRefreshThresholdInSeconds; 
@property (nonatomic,readonly) double hypothesisResponseStaleToPurgeFromDiskThresholdInSeconds; 
@property (nonatomic,readonly) double hypothesisShouldPersistThresholdInSeconds; 
@property (nonatomic,readonly) unsigned maximumNumberOfEntriesInTheCacheUnderMemoryPressure; 
@property (nonatomic,readonly) int maximumNumberOfDestinationsToMonitor; 
@property (nonatomic,readonly) double minimumTimeBetweenConsecutiveLocationUpdatesInSeconds; 
@property (nonatomic,readonly) double maximumTimeBetweenConsecutiveHypothesisUpdatesInSeconds; 
@property (nonatomic,readonly) unsigned accessValueThresholdToUpdateCacheEntries; 
@property (nonatomic,readonly) unsigned maximumNumberOfProcessingLoopRepeats; 
@property (nonatomic,readonly) double refreshTimeIntervalToUseIfError; 
@property (nonatomic,readonly) unsigned refreshEquationConstA; 
@property (nonatomic,readonly) unsigned refreshEquationConstB; 
@property (nonatomic,readonly) unsigned refreshEquationConstC; 
@property (nonatomic,readonly) double maximumRefreshIntervalLeeway; 
@property (nonatomic,readonly) double minimumTimerTimeStampFudge; 
@property (nonatomic,readonly) double refreshTimeIntervalBackoffBase; 
@property (nonatomic,readonly) double refreshTimeIntervalBackoffMax; 
@property (nonatomic,readonly) double predictionsWatchdogInterval; 
@property (nonatomic,readonly) double defaultExpirationOffset; 
@property (nonatomic,readonly) double minimumExpirationOffset; 
@property (nonatomic,readonly) double exitRegionSize; 
@property (nonatomic,readonly) char shouldUseServerSideETAs; 
@property (nonatomic,readonly) double averageWalkingSpeed; 
@property (nonatomic,readonly) double slowWalkingSpeed; 
@property (nonatomic,readonly) double fastWalkingSpeed; 
+(id)sharedInstance;
-(unsigned)maximumNumberOfProcessingLoopRepeats;
-(double)locationUpdatesDesiredAccuracyForDriving;
-(unsigned)initialSelfInitiatedHypothesisCacheAccessValue;
-(unsigned)maximumNumberOfEntriesInTheCacheUnderMemoryPressure;
-(double)refreshTimeIntervalBackoffBase;
-(char)shouldUseServerSideETAs;
-(int)maximumNumberOfDestinationsToMonitor;
-(double)refreshTimeIntervalToUseIfError;
-(double)minimumTimerTimeStampFudge;
-(double)minimumExpirationOffset;
-(double)minimumDistanceToCompareAgainstLocationAccuracy;
-(double)maximumRefreshIntervalLeeway;
-(double)exitRegionSize;
-(double)maximumTimeBetweenConsecutiveHypothesisUpdatesInSeconds;
-(double)locationUpdatesDesiredAccuracyForWalking;
-(unsigned)accessValueThresholdToUpdateCacheEntries;
-(double)hypothesisShouldPersistThresholdInSeconds;
-(double)hypothesisResponseStaleToRefreshThresholdInSeconds;
-(unsigned)refreshEquationConstB;
-(double)minimumTimeBetweenConsecutiveLocationUpdatesInSeconds;
-(double)fastWalkingSpeed;
-(double)defaultExpirationOffset;
-(double)locationFreshnessThreshold;
-(unsigned)refreshEquationConstC;
-(double)averageWalkingSpeed;
-(double)predictionsWatchdogInterval;
-(double)hypothesisResponseStaleToPurgeFromDiskThresholdInSeconds;
-(double)slowWalkingSpeed;
-(double)minimumDistanceToGetLocationUpdatesInMeters;
-(double)locationUpdatesDesiredAccuracyWhileStationaryForWalking;
-(double)locationUpdateTimerInterval;
-(double)refreshTimeIntervalBackoffMax;
-(unsigned)initialClientInitiatedHypothesisCacheAccessValue;
-(double)staleLocationUseTimerInterval;
-(double)locationUpdatesDesiredAccuracyWhileStationaryForDriving;
-(unsigned)refreshEquationConstA;
@end

