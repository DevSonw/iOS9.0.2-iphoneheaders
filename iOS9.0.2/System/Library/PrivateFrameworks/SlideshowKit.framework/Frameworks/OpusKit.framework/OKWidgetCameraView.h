/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 6, 2015 at 2:34:13 PM Japan Standard Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /System/Library/PrivateFrameworks/SlideshowKit.framework/Frameworks/OpusKit.framework/OpusKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <OpusKit/OKWidgetView.h>

@protocol OS_dispatch_queue;
@class NSObject, AVCaptureSession, AVCaptureDeviceInput, OKWidgetCameraPreviewView, NSString;

@interface OKWidgetCameraView : OKWidgetView {

	NSObject*<OS_dispatch_queue> _sessionQueue;
	AVCaptureSession* _session;
	AVCaptureDeviceInput* _videoDeviceInput;
	AVCaptureDeviceInput* _audioDeviceInput;
	char _deviceAuthorized;
	id _runtimeErrorHandlingObserver;
	id _deviceConnectedObserver;
	id _deviceDisconnectedObserver;
	OKWidgetCameraPreviewView* _previewView;
	int _inputType;
	NSString* _inputDeviceName;
	float _volume;

}

@property (assign,getter=isDeviceAuthorized,nonatomic) char deviceAuthorized;                                                  //@synthesize deviceAuthorized=_deviceAuthorized - In the implementation block
@property (getter=isSessionRunningAndDeviceAuthorized,nonatomic,readonly) char sessionRunningAndDeviceAuthorized; 
@property (assign,nonatomic) id deviceConnectedObserver;                                                                       //@synthesize deviceConnectedObserver=_deviceConnectedObserver - In the implementation block
@property (assign,nonatomic) id deviceDisconnectedObserver;                                                                    //@synthesize deviceDisconnectedObserver=_deviceDisconnectedObserver - In the implementation block
+(id)supportedSettings;
+(void)setupJavascriptContext:(id)arg1 ;
+(id)deviceWithInputType:(int)arg1 inputDeviceName:(id)arg2 ;
+(id)keyPathsForValuesAffectingSessionRunningAndDeviceAuthorized;
-(void)dealloc;
-(void)layoutSubviews;
-(char)prepareForDisplay:(char)arg1 ;
-(id)initWithWidget:(id)arg1 ;
-(char)prepareForWarmup:(char)arg1 ;
-(char)prepareForUnload:(char)arg1 ;
-(char)isDeviceAuthorized;
-(void)_prepareSessionIfNeeded;
-(void)__stopRunning;
-(void)checkDeviceAuthorizationStatus;
-(void)_startRunning;
-(void)setDeviceAuthorized:(char)arg1 ;
-(char)isSessionRunningAndDeviceAuthorized;
-(void)setSettingInput:(int)arg1 ;
-(void)setSettingInputDeviceName:(id)arg1 ;
-(void)setSettingVolume:(float)arg1 ;
-(void)_stopRunning;
-(id)deviceConnectedObserver;
-(void)setDeviceConnectedObserver:(id)arg1 ;
-(id)deviceDisconnectedObserver;
-(void)setDeviceDisconnectedObserver:(id)arg1 ;
@end

