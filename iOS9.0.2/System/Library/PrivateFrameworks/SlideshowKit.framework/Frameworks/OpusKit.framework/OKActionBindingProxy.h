/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 6, 2015 at 2:34:15 PM Japan Standard Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /System/Library/PrivateFrameworks/SlideshowKit.framework/Frameworks/OpusKit.framework/OpusKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <OpusKit/OpusKit-Structs.h>
#import <UIKit/UIGestureRecognizerDelegate.h>
#import <libobjc.A.dylib/OKSettingsSupport.h>
#import <libobjc.A.dylib/NSCopying.h>

@protocol OKActionResponder;
@class NSString, NSMutableArray, NSArray;

@interface OKActionBindingProxy : NSObject <UIGestureRecognizerDelegate, OKSettingsSupport, NSCopying> {

	NSString* _name;
	NSString* _actionScript;
	NSMutableArray* _shouldRecognizeSimultaneously;
	char _alwaysRecognizeSimultaneously;
	NSMutableArray* _requireToFail;
	id _target;
	SEL _selector;
	id<OKActionResponder> _actionResponder;
	int _tag;
	char _canBeTriggeredWithoutInteractivity;
	unsigned _scope;

}

@property (nonatomic,copy) NSString * name;                                        //@synthesize name=_name - In the implementation block
@property (nonatomic,copy) NSString * actionScript;                                //@synthesize actionScript=_actionScript - In the implementation block
@property (nonatomic,copy) NSArray * shouldRecognizeSimultaneously;                //@synthesize shouldRecognizeSimultaneously=_shouldRecognizeSimultaneously - In the implementation block
@property (assign,nonatomic) char alwaysRecognizeSimultaneously;                   //@synthesize alwaysRecognizeSimultaneously=_alwaysRecognizeSimultaneously - In the implementation block
@property (nonatomic,copy) NSArray * requireToFail;                                //@synthesize requireToFail=_requireToFail - In the implementation block
@property (assign,nonatomic) char canBeTriggeredWithoutInteractivity;              //@synthesize canBeTriggeredWithoutInteractivity=_canBeTriggeredWithoutInteractivity - In the implementation block
@property (assign,nonatomic) id target;                                            //@synthesize target=_target - In the implementation block
@property (assign,nonatomic) SEL selector;                                         //@synthesize selector=_selector - In the implementation block
@property (readonly) id<OKActionResponder> actionResponder;                        //@synthesize actionResponder=_actionResponder - In the implementation block
@property (readonly) unsigned scope;                                               //@synthesize scope=_scope - In the implementation block
@property (assign,nonatomic) int tag;                                              //@synthesize tag=_tag - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)supportedSettings;
+(id)actionBinding;
+(id)actionBindingWithGestureRecognizer:(id)arg1 fromActionResponder:(id)arg2 ;
-(void)dealloc;
-(id)init;
-(void)setName:(NSString *)arg1 ;
-(NSString *)name;
-(void)setTarget:(id)arg1 ;
-(void)setSelector:(SEL)arg1 ;
-(id)copyWithZone:(NSZone*)arg1 ;
-(id)target;
-(SEL)selector;
-(int)tag;
-(void)setTag:(int)arg1 ;
-(unsigned)scope;
-(id)initWithSettings:(id)arg1 ;
-(void)unload;
-(id)settingObjectForKey:(id)arg1 ;
-(void)setUserSettingObject:(id)arg1 forKey:(id)arg2 ;
-(void)loadForResponder:(id)arg1 scope:(unsigned)arg2 ;
-(char)respondsToAction:(id)arg1 isTouchCountAgnostic:(char)arg2 ;
-(char)ownsGestureRecognizer:(id)arg1 ;
-(char)performAction:(id)arg1 ;
-(id<OKActionResponder>)actionResponder;
-(CGPoint)locationForActionFromGesture:(id)arg1 ;
-(char)canBeTriggeredWithoutInteractivity;
-(NSString *)actionScript;
-(void)setShouldRecognizeSimultaneously:(NSArray *)arg1 ;
-(void)setRequireToFail:(NSArray *)arg1 ;
-(void)prepareAction:(id)arg1 ;
-(void)setActionScript:(NSString *)arg1 ;
-(NSArray *)shouldRecognizeSimultaneously;
-(char)alwaysRecognizeSimultaneously;
-(void)setAlwaysRecognizeSimultaneously:(char)arg1 ;
-(NSArray *)requireToFail;
-(void)setCanBeTriggeredWithoutInteractivity:(char)arg1 ;
@end

