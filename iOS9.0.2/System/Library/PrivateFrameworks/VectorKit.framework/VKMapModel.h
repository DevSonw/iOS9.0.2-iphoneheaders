/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 6, 2015 at 2:18:00 PM Japan Standard Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <VectorKit/VectorKit-Structs.h>
#import <VectorKit/VKModelObject.h>
#import <libobjc.A.dylib/VKOverlayContainerDelegate.h>
#import <libobjc.A.dylib/VKLabelModelDelegate.h>
#import <libobjc.A.dylib/GEOResourceManifestTileGroupObserver.h>
#import <libobjc.A.dylib/VKPolylineOverlayRouteRibbonObserver.h>
#import <libobjc.A.dylib/GEOExperimentConfigurationObserver.h>
#import <libobjc.A.dylib/VKTileProviderClient.h>
#import <libobjc.A.dylib/VKPolylineGroupOverlayObserver.h>

@protocol VKMapModelDelegate, GEORoutePreloadSession, VKMapModeObserver;
@class GEOResourceManifestConfiguration, NSLocale, VKTileProvider, NSMapTable, VKTrafficTileSource, VKRasterOverlayTileSource, VKGridModel, VKSkyModel, VKLabelModel, VKRasterMapModel, VKHybridRasterMapModel, VKRiverMapModel, VKPolygonMapModel, VKRoadMapModel, VKRoadTrafficMapModel, VKRealisticMapModel, VKBuildingFootprintMapModel, VKAnnotationModel, VKOverlayContainerModel, VKRasterOverlayMapModel, VKDebugModel, NSMutableArray, VKMapRasterizer, NSMutableSet, VKTransitLineMapModel, VKSelectedTransitLineMapModel, VKTimedAnimation, VKSharedResources, GEOFeatureStyleAttributes, VKPolylineOverlay, VKMercatorTerrainHeightCache, VKLabelMarker, NSArray, VKAnnotationMarker, NSSet, VKPolylineOverlayPainter, NSString;

@interface VKMapModel : VKModelObject <VKOverlayContainerDelegate, VKLabelModelDelegate, GEOResourceManifestTileGroupObserver, VKPolylineOverlayRouteRibbonObserver, GEOExperimentConfigurationObserver, VKTileProviderClient, VKPolylineGroupOverlayObserver> {

	unsigned _mapPurpose;
	GEOResourceManifestConfiguration* _manifestConfiguration;
	NSLocale* _locale;
	int _tileSize;
	VKTileProvider* _tileProviders[4];
	VKTileProvider* _rasterOverlayProvider[2];
	int _mapMode;
	int _desiredMapMode;
	char _transitioningToNav;
	char _isTransitioningToTransit;
	GEOResourceManifestConfiguration* _additionalManifestConfiguration;
	char _activeMapLayers[4][34];
	NSMapTable* _layerToSourceMaps[4];
	VKTrafficTileSource* _trafficSource;
	VKRasterOverlayTileSource* _rasterOverlayTileSource[2];
	VKGridModel* _gridModel;
	VKSkyModel* _skyModel;
	VKLabelModel* _labelModel;
	VKRasterMapModel* _rasterModel;
	VKHybridRasterMapModel* _hybridRasterModel;
	VKRasterMapModel* _standardRasterModel;
	VKRiverMapModel* _riverLineModel;
	VKPolygonMapModel* _polygonModel;
	VKRoadMapModel* _roadModel;
	VKRoadMapModel* _hybridRoadModel;
	VKRoadTrafficMapModel* _roadTrafficModel;
	VKRealisticMapModel* _realisticModel;
	VKBuildingFootprintMapModel* _buildingFootprintModel;
	VKAnnotationModel* _annotationModel;
	VKOverlayContainerModel* _overlayContainerModel;
	VKRasterOverlayMapModel* _rasterOverlayModel[2];
	VKDebugModel* _debugModel;
	NSMapTable* _tileSources;
	NSMutableArray* _drawOrder;
	NSMutableArray* _mapLayerSubmodels;
	NSMutableArray* _mapTileSubmodels;
	shared_ptr<gss::StyleManager>* _activeStyleManager;
	shared_ptr<gss::StyleManager>* _defaultStyleManager;
	shared_ptr<gss::StyleManager>* _hybridStyleManager;
	shared_ptr<gss::StyleManager>* _satelliteStyleManager;
	shared_ptr<gss::StyleManager>* _realisticStyleManager;
	double _zoomLevel;
	int _mapType;
	id<VKMapModelDelegate> _delegate;
	id<GEORoutePreloadSession> _routePreloadSession;
	char _dynamicMapModesEnabled;
	char _debugDynamicMapModesEnabled;
	char _buildingsAreVisible;
	char _showsBuildings;
	char _fullyDrawn;
	char _shouldNotifyFullyDrawn;
	char _hasFailedTile;
	char _trafficEnabled;
	char _trafficIncidentsEnabled;
	char _shouldRasterize;
	int _loadingCount;
	float _contentScale;
	unsigned char _targetDisplay;
	VehicleState _vehicleState;
	double _lodBias;
	char _disableRoads;
	char _disableLabels;
	char _disablePolygons;
	char _disableBuildingFootprints;
	char _disableRasters;
	char _disableGrid;
	Matrix<float, 4, 1> _clearColor;
	VKMapRasterizer* _rasterizer;
	VKRasterMapModel* _rasterViewer;
	int _annotationMarkerStyle;
	char _limitingNavCameraHeight;
	NSMutableSet* _blockingStylesheetObservers;
	float _styleTransitionProgress;
	NSMutableArray* _externalAnchors;
	double _forcedMaxZoomLevel;
	VKTransitLineMapModel* _transitLineModel;
	VKSelectedTransitLineMapModel* _selectedTransitLineModel;
	char _disableTransitLines;
	VKTimedAnimation* _modeTransitionAnimation;
	char _disableRoadClass[9];
	id<VKMapModeObserver> _mapModeObserver;
	VKSharedResources* _sharedResources;
	shared_ptr<md::DataOverrideManager>* _dataOverrideManager;
	float _navigationPuckSize;
	ClearItem _clearItem;
	GEOFeatureStyleAttributes* _mapFeatureStyleAttributes;
	shared_ptr<gss::StyleQuery>* _styleQuery;
	int _metroArea;
	char _forceMapDrawStyleUpdate;
	NSMutableSet* _polylineOverlays;
	VKPolylineOverlay* _selectedPolyline;

}

@property (nonatomic,retain) GEOResourceManifestConfiguration * additionalManifestConfiguration;              //@synthesize additionalManifestConfiguration=_additionalManifestConfiguration - In the implementation block
@property (nonatomic,readonly) GEOResourceManifestConfiguration * manifestConfiguration;                      //@synthesize manifestConfiguration=_manifestConfiguration - In the implementation block
@property (assign,nonatomic) shared_ptr<gss::StyleManager>* styleManager;                                     //@synthesize activeStyleManager=_activeStyleManager - In the implementation block
@property (nonatomic,readonly) VKSharedResources * sharedResources;                                           //@synthesize sharedResources=_sharedResources - In the implementation block
@property (assign,nonatomic) int mapType;                                                                     //@synthesize mapType=_mapType - In the implementation block
@property (assign,nonatomic) char shouldLoadFallbackTiles; 
@property (assign,nonatomic) unsigned neighborMode; 
@property (assign,nonatomic) int shieldSize; 
@property (assign,nonatomic) int navigationShieldSize; 
@property (assign,nonatomic) int shieldIdiom; 
@property (assign,nonatomic) char showsPointsOfInterest; 
@property (assign,nonatomic) char showsBuildings;                                                             //@synthesize showsBuildings=_showsBuildings - In the implementation block
@property (assign,nonatomic) double lodBias; 
@property (assign,nonatomic) char dynamicMapModesEnabled;                                                     //@synthesize dynamicMapModesEnabled=_dynamicMapModesEnabled - In the implementation block
@property (nonatomic,readonly) int currentMapMode;                                                            //@synthesize mapMode=_mapMode - In the implementation block
@property (assign,nonatomic) char limitingNavCameraHeight;                                                    //@synthesize limitingNavCameraHeight=_limitingNavCameraHeight - In the implementation block
@property (nonatomic,readonly) VKMercatorTerrainHeightCache * terrainHeightCache; 
@property (assign,getter=isTrafficEnabled,nonatomic) char trafficEnabled;                                     //@synthesize trafficEnabled=_trafficEnabled - In the implementation block
@property (assign,getter=isTrafficIncidentsEnabled,nonatomic) char trafficIncidentsEnabled;                   //@synthesize trafficIncidentsEnabled=_trafficIncidentsEnabled - In the implementation block
@property (assign,nonatomic) char localizeLabels; 
@property (assign,nonatomic) unsigned char labelScaleFactor; 
@property (assign,nonatomic) float contentScale;                                                              //@synthesize contentScale=_contentScale - In the implementation block
@property (assign,nonatomic) unsigned char targetDisplay; 
@property (assign,nonatomic) VehicleState vehicleState; 
@property (assign,nonatomic) id<VKMapModelDelegate> delegate;                                                 //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,readonly) VKBuildingFootprintMapModel * buildingFootprintModel;                          //@synthesize buildingFootprintModel=_buildingFootprintModel - In the implementation block
@property (nonatomic,readonly) char buildingsAreVisible;                                                      //@synthesize buildingsAreVisible=_buildingsAreVisible - In the implementation block
@property (nonatomic,readonly) char isFullyDrawn; 
@property (nonatomic,readonly) VKTileProvider * tileProvider; 
@property (nonatomic,readonly) VKLabelMarker * selectedLabelMarker; 
@property (assign,nonatomic) char labelMarkerSelectionEnabled; 
@property (assign,nonatomic) PolylineCoordinate routeUserOffset; 
@property (nonatomic,retain) NSArray * externalTrafficIncidents; 
@property (nonatomic,readonly) VKAnnotationMarker * selectedAnnotationMarker; 
@property (nonatomic,readonly) NSArray * overlays; 
@property (nonatomic,readonly) NSSet * persistentOverlays; 
@property (nonatomic,readonly) NSArray * rasterOverlays; 
@property (nonatomic,retain) VKPolylineOverlayPainter * focusedLabelsPolylinePainter; 
@property (assign,nonatomic) char debugDynamicMapModesEnabled;                                                //@synthesize debugDynamicMapModesEnabled=_debugDynamicMapModesEnabled - In the implementation block
@property (assign,nonatomic) char disableRoads;                                                               //@synthesize disableRoads=_disableRoads - In the implementation block
@property (assign,nonatomic) char disableLabels;                                                              //@synthesize disableLabels=_disableLabels - In the implementation block
@property (assign,nonatomic) char disablePolygons;                                                            //@synthesize disablePolygons=_disablePolygons - In the implementation block
@property (assign,nonatomic) char disableBuildingFootprints;                                                  //@synthesize disableBuildingFootprints=_disableBuildingFootprints - In the implementation block
@property (assign,nonatomic) char disableRasters;                                                             //@synthesize disableRasters=_disableRasters - In the implementation block
@property (assign,nonatomic) char disableRealisticRoads; 
@property (assign,nonatomic) char disableRealisticLand; 
@property (assign,nonatomic) char disableGrid;                                                                //@synthesize disableGrid=_disableGrid - In the implementation block
@property (assign,nonatomic) Matrix<float clearColor;                                                         //@synthesize clearColor=_clearColor - In the implementation block
@property (nonatomic,retain) id<GEORoutePreloadSession> routePreloadSession; 
@property (assign,nonatomic) id<VKRouteMatchedAnnotationPresentation> routeLineSplitAnnotation; 
@property (nonatomic,readonly) NSArray * visibleTileSets; 
@property (assign,nonatomic) id<VKOverlayContainerRouteDelegate> overlayContainerRouteDelegate; 
@property (assign,nonatomic) float navigationPuckSize;                                                        //@synthesize navigationPuckSize=_navigationPuckSize - In the implementation block
@property (nonatomic,readonly) char shouldRasterize;                                                          //@synthesize shouldRasterize=_shouldRasterize - In the implementation block
@property (assign,nonatomic) char disableTransitLines;                                                        //@synthesize disableTransitLines=_disableTransitLines - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(unsigned long)numberOfRoadClasses;
+(const char*)nameForRoadClass:(int)arg1 ;
-(void)_forceLayout;
-(void)setRouteLineSplitAnnotation:(id<VKRouteMatchedAnnotationPresentation>)arg1 ;
-(void)setTrafficIncidentsEnabled:(char)arg1 ;
-(VKLabelMarker *)selectedLabelMarker;
-(char)localizeLabels;
-(void)setLocalizeLabels:(char)arg1 ;
-(void)deselectLabelMarker;
-(void)addExternalAnchor:(id)arg1 ;
-(/*^block*/id)annotationCoordinateTest;
-(void)setVehicleState:(VehicleState)arg1 ;
-(id)labelMarkers;
-(void)addAnnotationMarker:(id)arg1 allowAnimation:(char)arg2 ;
-(void)_setStyleTransitionProgress:(float)arg1 targetStyle:(DisplayStyle)arg2 step:(int)arg3 ;
-(id)attributionsForCurrentRegion;
-(void)setMapType:(int)arg1 animated:(char)arg2 ;
-(void)setShowsPointsOfInterest:(char)arg1 ;
-(void)setApplicationState:(unsigned char)arg1 ;
-(char)isShowingNoDataPlaceholders;
-(void)addPersistentOverlay:(id)arg1 ;
-(void)setShowsBuildings:(char)arg1 ;
-(void)removeExternalAnchor:(id)arg1 ;
-(void)removeAnnotationMarker:(id)arg1 ;
-(void)selectLabelMarker:(id)arg1 ;
-(GEOResourceManifestConfiguration *)additionalManifestConfiguration;
-(void)setShouldLoadFallbackTiles:(char)arg1 ;
-(id)labelMarkerForSelectionAtPoint:(CGPoint)arg1 selectableLabelsOnly:(char)arg2 ;
-(void)setTrafficEnabled:(char)arg1 ;
-(void)setLabelMarkerSelectionEnabled:(char)arg1 ;
-(/*^block*/id)annotationRectTest;
-(char)showsPointsOfInterest;
-(char)showsBuildings;
-(void)removePersistentOverlay:(id)arg1 ;
-(void)setAdditionalManifestConfiguration:(GEOResourceManifestConfiguration *)arg1 ;
-(void)setShieldSize:(int)arg1 ;
-(int)shieldSize;
-(id)transitLineMarkersInCurrentViewport;
-(void)selectTransitLineMarker:(id)arg1 ;
-(void)deselectTransitLineMarker;
-(NSArray *)overlays;
-(void)addOverlay:(id)arg1 ;
-(void)removeOverlay:(id)arg1 ;
-(void)addRasterOverlay:(id)arg1 ;
-(void)insertRasterOverlay:(id)arg1 aboveOverlay:(id)arg2 ;
-(void)insertRasterOverlay:(id)arg1 belowOverlay:(id)arg2 ;
-(void)removeRasterOverlay:(id)arg1 ;
-(void)_resetMaximumZoomLevel;
-(void)_setMaximumZoomLevel:(double)arg1 ;
-(unsigned char)targetDisplay;
-(void)setLabelScaleFactor:(unsigned char)arg1 ;
-(void)setTargetDisplay:(unsigned char)arg1 ;
-(id)transitLineMarkersForSelectionAtPoint:(CGPoint)arg1 ;
-(void)setRouteContext:(id)arg1 ;
-(Matrix<float)clearColor;
-(void)setDelegate:(id<VKMapModelDelegate>)arg1 ;
-(void)dealloc;
-(id<VKMapModelDelegate>)delegate;
-(char)shouldRasterize;
-(void)didReceiveMemoryWarning:(char)arg1 ;
-(int)tileSize;
-(void)setContentScale:(float)arg1 ;
-(float)contentScale;
-(void)resourceManifestManager:(id)arg1 didChangeActiveTileGroup:(id)arg2 fromOldTileGroup:(id)arg3 ;
-(void)resourceManifestManagerWillChangeActiveTileGroup:(id)arg1 ;
-(void)experimentConfigurationDidChange:(id)arg1 ;
-(void)_localeChanged:(id)arg1 ;
-(GEOResourceManifestConfiguration *)manifestConfiguration;
-(int)mapType;
-(void)setMapType:(int)arg1 ;
-(NSArray *)visibleTileSets;
-(id)detailedDescription;
-(VKAnnotationMarker *)selectedAnnotationMarker;
-(char)disableRealisticRoads;
-(VehicleState)vehicleState;
-(DisplayStyle)sourceMapDisplayStyle;
-(void)setDebugDynamicMapModesEnabled:(char)arg1 ;
-(void)setCurrentLocationText:(id)arg1 ;
-(void)selectAnnotationMarker:(id)arg1 ;
-(NSArray *)rasterOverlays;
-(unsigned char)labelScaleFactor;
-(void)setDisableRealisticLand:(char)arg1 ;
-(void)cancelTileRequests;
-(void)resetTileContainers;
-(id<GEORoutePreloadSession>)routePreloadSession;
-(char)disableTransitLines;
-(id)externalAnchors;
-(void)setAnnotationMarkerDeselectionCallback:(/*^block*/id)arg1 ;
-(void)didBeginTransitionToTransit;
-(id)annotationMarkers;
-(char)isRoadClassDisabled:(int)arg1 ;
-(char)debugDynamicMapModesEnabled;
-(void)setStyleManager:(shared_ptr<gss::StyleManager>*)arg1 ;
-(void)deselectAnnotationMarker:(id)arg1 ;
-(/*^block*/id)annotationMarkerDeselectionCallback;
-(void)setExternalTrafficIncidents:(NSArray *)arg1 ;
-(void)finishStyleBlend;
-(void)setRoutePreloadSession:(id<GEORoutePreloadSession>)arg1 ;
-(void)setNavigationShieldSize:(int)arg1 ;
-(char)disableRasters;
-(void)stylesheetAnimationDidEnd:(char)arg1 ;
-(void)setDisableTransitLines:(char)arg1 ;
-(NSArray *)externalTrafficIncidents;
-(void)setFocusedLabelsPolylinePainter:(VKPolylineOverlayPainter *)arg1 ;
-(char)isFullyDrawn;
-(char)disableBuildingFootprints;
-(void)setDisableRealisticRoads:(char)arg1 ;
-(id)closestRoadMarkerForSelectionAtPoint:(CGPoint)arg1 ;
-(void)setDisableBuildingFootprints:(char)arg1 ;
-(int)navigationShieldSize;
-(void)performStylesheetDidChange;
-(char)disableLabels;
-(void)forceMapType:(int)arg1 animated:(char)arg2 ;
-(void)clearScene;
-(PolylineCoordinate)routeUserOffset;
-(int)shieldIdiom;
-(void)reloadStylesheet;
-(char)dynamicMapModesEnabled;
-(void)requestStylesheetAnimation:(id)arg1 targetMapDisplayStyle:(DisplayStyle)arg2 setupHandler:(/*^block*/id)arg3 ;
-(void)setRouteUserOffset:(PolylineCoordinate)arg1 ;
-(void)setDisableGrid:(char)arg1 ;
-(id<VKRouteMatchedAnnotationPresentation>)routeLineSplitAnnotation;
-(void)disableRoadClass:(char)arg1 withRoadClass:(int)arg2 ;
-(void)setDisableLabels:(char)arg1 ;
-(void)setDisablePolygons:(char)arg1 ;
-(void)setDesiredMapMode:(int)arg1 immediate:(char)arg2 ;
-(char)shouldLoadFallbackTiles;
-(char)disablePolygons;
-(VKPolylineOverlayPainter *)focusedLabelsPolylinePainter;
-(shared_ptr<gss::StyleManager>*)styleManager;
-(void)endStyleAnimationGroup;
-(void)stylesheetAnimationDidProgress:(float)arg1 ;
-(void)setDisableRasters:(char)arg1 ;
-(void)setDisableRoads:(char)arg1 ;
-(void)setDynamicMapModesEnabled:(char)arg1 ;
-(char)disableGrid;
-(void)setShieldIdiom:(int)arg1 ;
-(void)beginStyleAnimationGroup;
-(float)_styleTransitionProgress;
-(char)disableRealisticLand;
-(NSSet *)persistentOverlays;
-(char)disableRoads;
-(char)labelMarkerSelectionEnabled;
-(id)buildingMarkerAtScreenPoint:(CGPoint)arg1 groundPoint:(VKPoint)arg2 ;
-(unsigned)neighborMode;
-(void)layoutScene:(id)arg1 withContext:(id)arg2 ;
-(void)setNeighborMode:(unsigned)arg1 ;
-(id)featureMarkerAtScreenPoint:(CGPoint)arg1 groundPoint:(VKPoint)arg2 ;
-(void)setOverlayContainerRouteDelegate:(id<VKOverlayContainerRouteDelegate>)arg1 ;
-(void)flushCaches:(char)arg1 ;
-(void)didEndNavigation;
-(BOOL)supportsMapDisplayStyle:(DisplayStyle)arg1 ;
-(void)addSubmodel:(id)arg1 ;
-(char)isTrafficEnabled;
-(void)gatherNavigationRenderingPreloadItems:(vector<ggl::ShaderLoadItem, std::__1::allocator<ggl::ShaderLoadItem> >Ref)arg1 ;
-(void)setStylesheetMapDisplayStyle:(DisplayStyle)arg1 ;
-(void)stylesheetAnimationWillStartFromStyle:(DisplayStyle)arg1 toStyle:(DisplayStyle)arg2 ;
-(VKSharedResources *)sharedResources;
-(double)heightAtPoint:(VKPoint)arg1 ;
-(id)navTileSource;
-(void)setLimitingNavCameraHeight:(char)arg1 ;
-(void)didBeginTransitionToNavigation;
-(void)debugHighlightLabelAtScreenPoint:(CGPoint)arg1 viewTransform:(id)arg2 ;
-(VKMercatorTerrainHeightCache *)terrainHeightCache;
-(double)northYawAtZoom:(int)arg1 ;
-(void)setNavigationPuckSize:(float)arg1 ;
-(id)initShouldRasterize:(char)arg1 mapPurpose:(unsigned)arg2 manifestConfiguration:(id)arg3 locale:(id)arg4 contentScale:(float)arg5 ;
-(void)sizeDidChange:(CGSize)arg1 ;
-(int)currentMapMode;
-(char)isTrafficIncidentsEnabled;
-(id)roadMarkersForSelectionAtPoint:(CGPoint)arg1 ;
-(id)annotationMarkerForSelectionAtPoint:(VKPoint)arg1 avoidCurrent:(char)arg2 canvasSize:(CGSize)arg3 ;
-(void)gglLayoutScene:(id)arg1 withContext:(id)arg2 renderQueue:(RenderQueue*)arg3 ;
-(int)tileStyleForMapLayer:(unsigned long long)arg1 ;
-(id)labelDebugString;
-(void)willTapZoom;
-(void)performStylesheetWillTransitionToDisplayStyle:(DisplayStyle)arg1 ;
-(void)_tryTransitionAndPreloadIfNecessary:(id)arg1 ;
-(void)performStylesheetDoneChanging;
-(void)_mapConfigurationDidChange;
-(void)_updateZoomLevel:(id)arg1 ;
-(void)startStylesheetAnimation:(id)arg1 targetMapDisplayStyle:(DisplayStyle)arg2 ;
-(double)lodBias;
-(char)buildingsAreVisible;
-(void)didTapZoom;
-(void)_updateRasterOverlayZoomOverride;
-(void)setLodBias:(double)arg1 ;
-(id)sourceForLayer:(unsigned long long)arg1 mode:(int)arg2 ;
-(void)_updateRegularTileProviderMode;
-(void)_updateTileExclusionAreas;
-(void)_setStyleManagerFromMapType:(int)arg1 ;
-(id)_rasterOverlayTileSourceForLevel:(unsigned)arg1 ;
-(float)_tileSelectionScaleForContext:(id)arg1 ;
-(void)foreachActiveLayer:(/*^block*/id)arg1 ;
-(VKBuildingFootprintMapModel *)buildingFootprintModel;
-(void)createTrafficTileSourceIfNecessary:(id)arg1 ;
-(int)buildingsMapMode;
-(void)_updateOverlayTileSource;
-(void)performStylesheetTransitionDidProgress;
-(void)setClearColor:(Matrix<float)arg1 ;
-(void)updateMapDrawStyleWithContext:(id)arg1 ;
-(void)_activateModel:(id)arg1 ;
-(void)shouldFlushCaches:(id)arg1 ;
-(void)polylineGroup:(id)arg1 didRemovePolyline:(id)arg2 ;
-(void)configureTileSources;
-(void)_deactivateModel:(id)arg1 ;
-(double)maxTileHeightAtPoint:(VKPoint)arg1 ;
-(float)ppi;
-(id)createSourceForLayer:(unsigned long long)arg1 tileSet:(id)arg2 mode:(int)arg3 ;
-(char)limitingNavCameraHeight;
-(void)setStyleManager:(shared_ptr<gss::StyleManager>*)arg1 forRealistic:(BOOL)arg2 ;
-(void)_transitionFromMode:(int)arg1 toMode:(int)arg2 animated:(char)arg3 ;
-(float)navigationPuckSize;
-(void)polylineGroup:(id)arg1 didAddPolyline:(id)arg2 ;
-(void)didEndTransitionToTransit;
-(id)roadMarkerForSelectionAtPoint:(CGPoint)arg1 ;
-(void)_transitFadeOutCompletionCallback;
-(id<VKOverlayContainerRouteDelegate>)overlayContainerRouteDelegate;
-(id)tileSetForMapLayer:(unsigned long long)arg1 tileGroup:(id)arg2 ;
-(void)performstylesheetDidReload;
-(void)updateRasterOverlayProviders:(id)arg1 withContext:(id)arg2 ;
-(id)labelModel:(id)arg1 mapTileForTile:(id)arg2 layer:(unsigned long long)arg3 ;
-(VKTileProvider *)tileProvider;
-(int)maximumZoomLevelInView:(id)arg1 ;
-(int)minimumZoomLevelInView:(id)arg1 ;
-(void)labelModel:(id)arg1 selectedLabelMarkerWillDisappear:(id)arg2 ;
-(void)labelModelDidLayoutLabels:(id)arg1 ;
-(void)reserveStencilRangeBetweenPolygonLayersForScene:(id)arg1 context:(id)arg2 renderQueue:(RenderQueue*)arg3 ;
-(void)updateOverlayType;
-(char)overlayContainerIsInRealisticMode:(id)arg1 ;
-(id)overlayContainer:(id)arg1 roadTileForTile:(id)arg2 ;
-(char)overlayContainerIsInTransitMode:(id)arg1 ;
-(id)overlayContainer:(id)arg1 painterForOverlay:(id)arg2 ;
-(void)overlayContainer:(id)arg1 showingRouteInStandardModeDidChange:(char)arg2 ;
-(void)polylineGroup:(id)arg1 didSelectPolyline:(id)arg2 ;
-(void)didStopLoadingTilesWithError:(id)arg1 ;
-(void)tileProviderNeedsUpdate:(id)arg1 ;
-(void)willStartLoadingTiles;
-(char)tileProviderMayUseNetwork:(id)arg1 ;
-(void)polylineOverlay:(id)arg1 didUpdateRouteRibbon:(id)arg2 ;
@end

