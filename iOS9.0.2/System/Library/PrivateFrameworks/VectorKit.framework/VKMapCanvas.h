/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 6, 2015 at 2:18:00 PM Japan Standard Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <VectorKit/VectorKit-Structs.h>
#import <VectorKit/VKScreenCanvas.h>
#import <libobjc.A.dylib/VKMapModelDelegate.h>
#import <libobjc.A.dylib/VKOverlayContainerRouteDelegate.h>
#import <libobjc.A.dylib/VKInteractiveMap.h>

@protocol VKInteractiveMapDelegate;
@class NSArray, GEOMapRegion, VKAnchorWrapper, VKMapModel, VKMapCameraController, VKCamera, GEOResourceManifestConfiguration, VKPolylineOverlayPainter, NSString;

@interface VKMapCanvas : VKScreenCanvas <VKMapModelDelegate, VKOverlayContainerRouteDelegate, VKInteractiveMap> {

	VKMapModel* _map;
	VKMapCameraController* _cameraController;
	id<VKInteractiveMapDelegate> _delegate;
	CGSize _lastCanvasSize;
	VKCamera* _defaultTrackingCamera;
	float _lastValidCanvasSizeZoomLevel;
	char _hasLastValidCanvasSizeZoomLevel;

}

@property (assign,nonatomic) char shouldLoadFallbackTiles; 
@property (assign,nonatomic) char shouldLoadMapMargin; 
@property (assign,nonatomic) id<VKInteractiveMapDelegate> delegate;                                              //@synthesize delegate=_delegate - In the implementation block
@property (assign,nonatomic) char staysCenteredDuringPinch; 
@property (assign,nonatomic) char staysCenteredDuringRotation; 
@property (assign,nonatomic) char isPitchable; 
@property (nonatomic,retain) GEOResourceManifestConfiguration * additionalManifestConfiguration; 
@property (getter=isPitched,nonatomic,readonly) char pitched; 
@property (assign,nonatomic) char trafficEnabled; 
@property (assign,nonatomic) shared_ptr<gss::StyleManager>* styleManager; 
@property (assign,nonatomic) int mapType; 
@property (nonatomic,readonly) double minimumZoomLevel; 
@property (nonatomic,readonly) double maximumZoomLevel; 
@property (assign,nonatomic) char dynamicMapModesEnabled; 
@property (nonatomic,retain) GEOMapRegion * mapRegion; 
@property (nonatomic,readonly) double yaw; 
@property (assign,nonatomic) VKPoint centerCoordinate; 
@property (assign,nonatomic) char allowDatelineWraparound; 
@property (assign,nonatomic) int trackingCameraPanStyle; 
@property (assign,nonatomic) double trackingZoomScale; 
@property (nonatomic,retain) VKCamera * defaultTrackingCamera;                                                   //@synthesize defaultTrackingCamera=_defaultTrackingCamera - In the implementation block
@property (assign,nonatomic) char labelMarkerSelectionEnabled; 
@property (nonatomic,retain) VKPolylineOverlayPainter * focusedLabelsPolylinePainter; 
@property (nonatomic,retain) id<GEORoutePreloadSession> routePreloadSession; 
@property (nonatomic,readonly) VKMapModel * map;                                                                 //@synthesize map=_map - In the implementation block
@property (assign,nonatomic) char debugDynamicMapModesEnabled; 
@property (assign,nonatomic) id<VKRouteMatchedAnnotationPresentation> routeLineSplitAnnotation; 
@property (assign,nonatomic) double userZoomFocusStyleGroundspanMeters; 
@property (assign,nonatomic) double userZoomFocusStyleMinGroundspanMeters; 
@property (assign,nonatomic) double userZoomFocusStyleMaxGroundspanMeters; 
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (assign,nonatomic) char trafficIncidentsEnabled; 
@property (getter=isFullyPitched,nonatomic,readonly) char fullyPitched; 
@property (assign,nonatomic) int shieldSize; 
@property (assign,nonatomic) int navigationShieldSize; 
@property (assign,nonatomic) int shieldIdiom; 
@property (assign,nonatomic) char showsPointsOfInterest; 
@property (assign,nonatomic) char showsBuildings; 
@property (assign,nonatomic) PolylineCoordinate routeUserOffset; 
@property (nonatomic,retain) NSArray * externalTrafficIncidents; 
@property (assign,nonatomic) char localizeLabels; 
@property (assign,nonatomic) unsigned char labelScaleFactor; 
@property (nonatomic,readonly) GEOMapRegion * mapRegionOfInterest; 
@property (nonatomic,readonly) double presentationYaw; 
@property (nonatomic,readonly) double pitch; 
@property (nonatomic,readonly) double altitude; 
@property (assign,nonatomic) int annotationTrackingZoomStyle; 
@property (assign,nonatomic) int annotationTrackingHeadingAnimationDisplayRate; 
@property (getter=isAnimatingToTrackAnnotation,nonatomic,readonly) char animatingToTrackAnnotation; 
@property (nonatomic,readonly) id<VKTrackableAnnotation> trackingAnnotation; 
@property (getter=isTrackingHeading,nonatomic,readonly) char trackingHeading; 
@property (nonatomic,readonly) NSArray * rasterOverlays; 
@property (nonatomic,readonly) NSArray * visibleTileSets; 
@property (getter=isFullyDrawn,nonatomic,readonly) char fullyDrawn; 
@property (nonatomic,readonly) VKAnchorWrapper * externalAnchors; 
+(char)supportsMapType:(int)arg1 scale:(int)arg2 manifestConfiguration:(id)arg3 ;
-(void)setIsPitchable:(char)arg1 ;
-(void)setRouteLineSplitAnnotation:(id<VKRouteMatchedAnnotationPresentation>)arg1 ;
-(void)debugHighlightLabelAtPoint:(CGPoint)arg1 ;
-(id)consoleString:(char)arg1 ;
-(double)topDownMinimumZoomLevelForTileSize:(int)arg1 ;
-(char)shouldHideOffscreenSelectedAnnotation;
-(void)panWithOffset:(CGPoint)arg1 relativeToScreenPoint:(CGPoint)arg2 animated:(char)arg3 duration:(double)arg4 completionHandler:(/*^block*/id)arg5 ;
-(void)setTrafficIncidentsEnabled:(char)arg1 ;
-(void)startTrackingAnnotation:(id)arg1 trackHeading:(char)arg2 animated:(char)arg3 ;
-(char)canEnter3DMode;
-(id)selectedLabelMarker;
-(double)maximumZoomLevelForTileSize:(int)arg1 ;
-(char)localizeLabels;
-(int)annotationTrackingZoomStyle;
-(void)setAnnotationTrackingZoomStyle:(int)arg1 ;
-(char)canZoomInForTileSize:(int)arg1 ;
-(void)setLocalizeLabels:(char)arg1 ;
-(void)deselectLabelMarker;
-(void)addExternalAnchor:(id)arg1 ;
-(/*^block*/id)annotationCoordinateTest;
-(void)updatePanWithTranslation:(CGPoint)arg1 ;
-(GEOMapRegion *)mapRegionOfInterest;
-(void)setYaw:(double)arg1 animated:(char)arg2 ;
-(void)setVehicleState:(VehicleState)arg1 ;
-(double)durationToAnimateToMapRegion:(id)arg1 ;
-(void)setAllowDatelineWraparound:(char)arg1 ;
-(id)labelMarkers;
-(double)presentationYaw;
-(double)yaw;
-(void)addAnnotationMarker:(id)arg1 allowAnimation:(char)arg2 ;
-(void)_setStyleTransitionProgress:(float)arg1 targetStyle:(DisplayStyle)arg2 step:(int)arg3 ;
-(id)attributionsForCurrentRegion;
-(void)animateToMapRegion:(id)arg1 pitch:(double)arg2 yaw:(double)arg3 duration:(double)arg4 completion:(/*^block*/id)arg5 ;
-(void)setMapType:(int)arg1 animated:(char)arg2 ;
-(void)setShowsPointsOfInterest:(char)arg1 ;
-(void)setApplicationState:(unsigned char)arg1 ;
-(double)currentZoomLevelForTileSize:(int)arg1 ;
-(char)isPitchable;
-(void)setCenterCoordinate:(VKPoint)arg1 animated:(char)arg2 ;
-(char)restoreViewportFromInfo:(id)arg1 ;
-(void)stopPanningAtPoint:(CGPoint)arg1 ;
-(char)isShowingNoDataPlaceholders;
-(char)isPitched;
-(void)addPersistentOverlay:(id)arg1 ;
-(void)setShowsBuildings:(char)arg1 ;
-(void)zoom:(double)arg1 withFocusPoint:(CGPoint)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)removeExternalAnchor:(id)arg1 ;
-(char)allowDatelineWraparound;
-(void)setTracePlaybackSpeedMultiplier:(double)arg1 ;
-(void)removeAnnotationMarker:(id)arg1 ;
-(void)selectLabelMarker:(id)arg1 ;
-(void)setStaysCenteredDuringPinch:(char)arg1 ;
-(GEOResourceManifestConfiguration *)additionalManifestConfiguration;
-(void)setShouldLoadFallbackTiles:(char)arg1 ;
-(char)canZoomOutForTileSize:(int)arg1 ;
-(id)labelMarkerForSelectionAtPoint:(CGPoint)arg1 selectableLabelsOnly:(char)arg2 ;
-(void)setTrafficEnabled:(char)arg1 ;
-(void)setLabelMarkerSelectionEnabled:(char)arg1 ;
-(/*^block*/id)annotationRectTest;
-(char)showsPointsOfInterest;
-(void)enter3DMode;
-(char)showsBuildings;
-(char)trafficIncidentsEnabled;
-(void)stopTrackingAnnotation;
-(void)removePersistentOverlay:(id)arg1 ;
-(char)isAnimatingToTrackAnnotation;
-(void)exit3DMode;
-(void)setAdditionalManifestConfiguration:(GEOResourceManifestConfiguration *)arg1 ;
-(void)setShieldSize:(int)arg1 ;
-(int)shieldSize;
-(void)puckAnimatorDidStop:(id)arg1 ;
-(void)puckAnimator:(id)arg1 updatedPosition:(SCD_Struct_VK26*)arg2 ;
-(void)puckAnimator:(id)arg1 updatedTargetPosition:(VKPoint)arg2 ;
-(char)currentZoomLevelAllowsRotation;
-(void)setAnnotationTrackingHeadingAnimationDisplayRate:(int)arg1 ;
-(id)transitLineMarkersInCurrentViewport;
-(void)selectTransitLineMarker:(id)arg1 ;
-(void)deselectTransitLineMarker;
-(id)overlays;
-(void)addOverlay:(id)arg1 ;
-(void)removeOverlay:(id)arg1 ;
-(void)addRasterOverlay:(id)arg1 ;
-(void)insertRasterOverlay:(id)arg1 aboveOverlay:(id)arg2 ;
-(void)insertRasterOverlay:(id)arg1 belowOverlay:(id)arg2 ;
-(void)removeRasterOverlay:(id)arg1 ;
-(double)zoomLevelAdjustmentForTileSize:(int)arg1 ;
-(void)_resetMaximumZoomLevel;
-(void)_setMaximumZoomLevel:(double)arg1 ;
-(char)staysCenteredDuringRotation;
-(void)stopPitchingWithFocusPoint:(CGPoint)arg1 ;
-(void)updatePinchWithFocusPoint:(CGPoint)arg1 oldFactor:(double)arg2 newFactor:(double)arg3 ;
-(void)stopRotatingWithFocusPoint:(CGPoint)arg1 ;
-(void)updatePitchWithFocusPoint:(CGPoint)arg1 translation:(double)arg2 ;
-(void)startPitchingWithFocusPoint:(CGPoint)arg1 ;
-(void)didStartPanningDeceleration;
-(char)isFullyPitched;
-(void)updateRotationWithFocusPoint:(CGPoint)arg1 newValue:(double)arg2 ;
-(char)staysCenteredDuringPinch;
-(void)startPinchingWithFocusPoint:(CGPoint)arg1 ;
-(void)stopPinchingWithFocusPoint:(CGPoint)arg1 ;
-(void)startRotatingWithFocusPoint:(CGPoint)arg1 ;
-(void)stopSnappingAnimations;
-(unsigned char)targetDisplay;
-(void)setLabelScaleFactor:(unsigned char)arg1 ;
-(char)trafficEnabled;
-(void)setTargetDisplay:(unsigned char)arg1 ;
-(char)isPointValidForGesturing:(CGPoint)arg1 ;
-(id)transitLineMarkersForSelectionAtPoint:(CGPoint)arg1 ;
-(void)setRouteContext:(id)arg1 ;
-(void)setNeedsDisplay;
-(void)setDelegate:(id<VKInteractiveMapDelegate>)arg1 ;
-(void)dealloc;
-(void)setHidden:(char)arg1 ;
-(id<VKInteractiveMapDelegate>)delegate;
-(VKEdgeInsets)edgeInsets;
-(void)setContentsScale:(float)arg1 ;
-(void)setEdgeInsets:(VKEdgeInsets)arg1 ;
-(void)setMapRegion:(GEOMapRegion *)arg1 ;
-(GEOMapRegion *)mapRegion;
-(void)stopTracking;
-(double)altitude;
-(id)viewportInfo;
-(VKPoint)centerCoordinate;
-(int)mapType;
-(void)setMapType:(int)arg1 ;
-(NSArray *)visibleTileSets;
-(id)detailedDescription;
-(void)setCenterCoordinate:(VKPoint)arg1 ;
-(shared_ptr<gss::StyleSheet>*)stylesheet;
-(VKMapModel *)map;
-(double)pitch;
-(id)selectedAnnotationMarker;
-(void)setMapRegion:(id)arg1 animated:(char)arg2 ;
-(VehicleState)vehicleState;
-(DisplayStyle)sourceMapDisplayStyle;
-(void)setStylesheetName:(const basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)arg1 ;
-(void)setDebugDynamicMapModesEnabled:(char)arg1 ;
-(void)setShouldLimitTrackingCameraHeight:(char)arg1 ;
-(void)setCurrentLocationText:(id)arg1 ;
-(CGPoint)convertCoordinateToCameraModelPoint:(SCD_Struct_VK25)arg1 ;
-(void)selectAnnotationMarker:(id)arg1 ;
-(NSArray *)rasterOverlays;
-(id<VKTrackableAnnotation>)trackingAnnotation;
-(unsigned char)labelScaleFactor;
-(SCD_Struct_VK25)convertPointToMapPoint:(CGPoint)arg1 ;
-(void)setCenterCoordinate:(SCD_Struct_VK25)arg1 altitude:(double)arg2 yaw:(double)arg3 pitch:(double)arg4 duration:(double)arg5 animationStyle:(int)arg6 timingCurve:(/*^block*/id)arg7 completion:(/*^block*/id)arg8 ;
-(char)shouldLoadMapMargin;
-(double)userZoomFocusStyleMaxGroundspanMeters;
-(void)resetTileContainers;
-(id<GEORoutePreloadSession>)routePreloadSession;
-(VKAnchorWrapper *)externalAnchors;
-(void)setCanonicalSkyHeight:(double)arg1 ;
-(void)setAnnotationMarkerDeselectionCallback:(/*^block*/id)arg1 ;
-(void)didBeginTransitionToTransit;
-(id)annotationMarkers;
-(id)roadMarkersForSelectionAtScreenPoint:(CGPoint)arg1 ;
-(void)transitionToTracking:(char)arg1 mapMode:(int)arg2 pounceCompletionHandler:(/*^block*/id)arg3 ;
-(char)debugDynamicMapModesEnabled;
-(void)setStyleManager:(shared_ptr<gss::StyleManager>*)arg1 ;
-(void)deselectAnnotationMarker:(id)arg1 ;
-(/*^block*/id)annotationMarkerDeselectionCallback;
-(void)setUserZoomFocusStyleMaxGroundspanMeters:(double)arg1 ;
-(void)setExternalTrafficIncidents:(NSArray *)arg1 ;
-(void)setRoutePreloadSession:(id<GEORoutePreloadSession>)arg1 ;
-(void)setNavigationShieldSize:(int)arg1 ;
-(double)maximumZoomLevel;
-(CGPoint)convertMapPointToPoint:(SCD_Struct_VK25)arg1 ;
-(shared_ptr<gss::CartoStyle>*)styleForFeature:(id)arg1 ;
-(void)stylesheetAnimationDidEnd:(char)arg1 ;
-(NSArray *)externalTrafficIncidents;
-(void)setFocusedLabelsPolylinePainter:(VKPolylineOverlayPainter *)arg1 ;
-(void)forceSceneLoad;
-(char)isFullyDrawn;
-(void)edgeInsetsDidEndAnimating;
-(void)pauseTracking;
-(id)closestRoadMarkerForSelectionAtPoint:(CGPoint)arg1 ;
-(double)userZoomFocusStyleMinGroundspanMeters;
-(int)navigationShieldSize;
-(void)setTrackingZoomScale:(double)arg1 ;
-(void)clearScene;
-(char)currentSceneRequiresMSAA;
-(PolylineCoordinate)routeUserOffset;
-(void)setMapRegion:(id)arg1 pitch:(double)arg2 yaw:(double)arg3 animated:(char)arg4 ;
-(int)shieldIdiom;
-(void)reloadStylesheet;
-(char)dynamicMapModesEnabled;
-(void)requestStylesheetAnimation:(id)arg1 targetMapDisplayStyle:(DisplayStyle)arg2 setupHandler:(/*^block*/id)arg3 ;
-(id)buildingMarkerAtScreenPoint:(CGPoint)arg1 ;
-(void)setRouteUserOffset:(PolylineCoordinate)arg1 ;
-(void)goToTileX:(int)arg1 Y:(int)arg2 Z:(int)arg3 tileSize:(int)arg4 ;
-(id<VKRouteMatchedAnnotationPresentation>)routeLineSplitAnnotation;
-(void)setStaysCenteredDuringRotation:(char)arg1 ;
-(void)preloadNavigationSceneResourcesWithDevice:(const shared_ptr<ggl::Device>*)arg1 ;
-(void)setCenterCoordinate3D:(VKPoint)arg1 altitude:(double)arg2 yaw:(double)arg3 pitch:(double)arg4 duration:(double)arg5 animationStyle:(int)arg6 timingCurve:(/*^block*/id)arg7 completion:(/*^block*/id)arg8 ;
-(id)featureMarkerAtScreenPoint:(CGPoint)arg1 ;
-(void)setDesiredMapMode:(int)arg1 immediate:(char)arg2 ;
-(char)shouldLoadFallbackTiles;
-(void)setUserZoomFocusStyleMinGroundspanMeters:(double)arg1 ;
-(double)currentZoomLevel;
-(id)annotationMarkerForSelectionAtPoint:(CGPoint)arg1 avoidCurrent:(char)arg2 ;
-(int)annotationTrackingHeadingAnimationDisplayRate;
-(double)trackingZoomScale;
-(VKPolylineOverlayPainter *)focusedLabelsPolylinePainter;
-(int)trackingCameraPanStyle;
-(shared_ptr<gss::StyleManager>*)styleManager;
-(void)endStyleAnimationGroup;
-(CGPoint)convertCoordinateToPoint:(SCD_Struct_VK25)arg1 ;
-(double)userZoomFocusStyleGroundspanMeters;
-(void)setMapRegion:(id)arg1 pitch:(double)arg2 yaw:(double)arg3 animated:(char)arg4 completion:(/*^block*/id)arg5 ;
-(void)startPanningAtPoint:(CGPoint)arg1 panAtStartPoint:(char)arg2 ;
-(void)stylesheetAnimationDidProgress:(float)arg1 ;
-(double)minimumZoomLevel;
-(void)setDynamicMapModesEnabled:(char)arg1 ;
-(id)initShouldRasterize:(char)arg1 contentScale:(float)arg2 target:(id)arg3 device:(const shared_ptr<ggl::Device>*)arg4 inBackground:(char)arg5 manifestConfiguration:(id)arg6 locale:(id)arg7 ;
-(SCD_Struct_VK25)convertPointToCoordinate:(CGPoint)arg1 ;
-(void)updateCameraContext:(id)arg1 ;
-(void)updateCameraForFrameResize;
-(void)resetRenderQueue:(shared_ptr<ggl::RenderQueue>*)arg1 ;
-(void)setShieldIdiom:(int)arg1 ;
-(void)transferCamera:(id)arg1 ;
-(void)beginStyleAnimationGroup;
-(float)_styleTransitionProgress;
-(double)minimumZoomLevelForTileSize:(int)arg1 ;
-(void)edgeInsetsWillBeginAnimating;
-(char)isTrackingHeading;
-(id)persistentOverlays;
-(void)setUserZoomFocusStyleGroundspanMeters:(double)arg1 ;
-(void)setCameraHorizontalOffset:(double)arg1 duration:(double)arg2 timingFunction:(id)arg3 ;
-(void)setTrackingCameraPanStyle:(int)arg1 ;
-(char)labelMarkerSelectionEnabled;
-(void)zoomToLevel:(double)arg1 withFocusPoint:(CGPoint)arg2 ;
-(void)setShouldLoadMapMargin:(char)arg1 ;
-(double)mapModelZoomScale:(id)arg1 ;
-(void)clearSceneIsEffectivelyHidden:(char)arg1 ;
-(void)setDefaultTrackingCamera:(VKCamera *)arg1 ;
-(char)trackingCanZoomIn;
-(char)mapModelInNav:(id)arg1 ;
-(void)mapModel:(id)arg1 needsPanByOffset:(CGPoint)arg2 relativeToScreenPoint:(CGPoint)arg3 animated:(char)arg4 duration:(double)arg5 completionHandler:(/*^block*/id)arg6 ;
-(char)supportsMapDisplayStyle:(DisplayStyle)arg1 ;
-(void)setStylesheetMapDisplayStyle:(DisplayStyle)arg1 ;
-(void)stylesheetAnimationWillStartFromStyle:(DisplayStyle)arg1 toStyle:(DisplayStyle)arg2 ;
-(id)navTileSource;
-(shared_ptr<gss::CartoStyle>*)styleAtScreenPoint:(CGPoint)arg1 ;
-(VKPoint)screenPointForPoint:(CGPoint)arg1 ;
-(void)stopRegionAnimation;
-(char)trackingCanZoomOut;
-(void)_updateViewTransform;
-(char)mapModelInNavAtDefaultZoom:(id)arg1 ;
-(void)mapModelDidUpdateMinMaxZoomLevel:(id)arg1 ;
-(void)mapModelDidStartLoadingTiles:(id)arg1 ;
-(void)mapModelDidFinishLoadingTiles:(id)arg1 ;
-(void)mapModelWillBecomeFullyDrawn:(id)arg1 ;
-(void)mapModelDidBecomeFullyDrawn:(id)arg1 hasFailedTiles:(char)arg2 ;
-(void)mapModelDidFailLoadingTiles:(id)arg1 withError:(id)arg2 ;
-(void)mapModel:(id)arg1 didUpdateContainsOverlay:(char)arg2 ;
-(void)mapModelDidBecomePartiallyDrawn:(id)arg1 ;
-(void)mapModel:(id)arg1 didUpdateNavigationPuckSize:(float)arg2 ;
-(void)mapModelLabelsDidLayout:(id)arg1 ;
-(void)mapModel:(id)arg1 willTransitionFrom:(int)arg2 to:(int)arg3 duration:(double)arg4 ;
-(void)mapModelDidReloadStylesheet:(id)arg1 ;
-(id)mapModel:(id)arg1 painterForOverlay:(id)arg2 ;
-(void)mapModel:(id)arg1 selectedLabelMarkerWillDisappear:(id)arg2 ;
-(void)gglWillDrawWithTimestamp;
-(void)cameraController:(id)arg1 didChangeRegionAnimated:(char)arg2 ;
-(void)cameraController:(id)arg1 willChangeRegionAnimated:(char)arg2 ;
-(void)cameraController:(id)arg1 canEnter3DModeDidChange:(char)arg2 ;
-(void)cameraControllerDidChangeCameraState:(id)arg1 ;
-(CGPoint)_centerScreenPoint;
-(void)cameraController:(id)arg1 pouncingToCameraPosition:(VKPoint)arg2 orientation:(const SCD_Struct_VK6*)arg3 ;
-(void)cameraController:(id)arg1 didBecomePitched:(char)arg2 ;
-(void)cameraController:(id)arg1 canZoomOutDidChange:(char)arg2 ;
-(void)cameraController:(id)arg1 canZoomInDidChange:(char)arg2 ;
-(VKCamera *)defaultTrackingCamera;
-(id)cameraController:(id)arg1 presentationForAnnotation:(id)arg2 ;
-(void)overlayContainer:(id)arg1 updatedMatchedSection:(fast_shared_ptr<vk::RouteLineSection>*)arg2 index:(PolylineCoordinate*)arg3 ;
-(void)cameraControllerDidFinishInitialTrackingAnimation:(id)arg1 ;
@end

