/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 6, 2015 at 2:39:05 PM Japan Standard Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /System/Library/PrivateFrameworks/PairedSync.framework/Support/pairedsyncd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <pairedsyncd/PSDActivityDelegate.h>

@protocol OS_dispatch_queue;
@class NSObject, NSMutableArray, PSDActivity, NSError, PSDProgress, PSYOptions, PSDResumeContext, NSEnumerator, NSMutableDictionary, PSYActivityInfo, NSString;

@interface PSDScheduler : NSObject <PSDActivityDelegate> {

	NSObject*<OS_dispatch_queue> _queue;
	NSObject*<OS_dispatch_queue> _alertQueue;
	NSMutableArray* _progressDelegates;
	NSMutableArray* _schedulingObservers;
	NSMutableArray* _activityQueue;
	PSDActivity* _currentActivity;
	NSError* _activityError;
	PSDProgress* _progress;
	PSYOptions* _options;
	PSDResumeContext* _resumeContext;
	NSEnumerator* _testInputsEnumerator;
	NSMutableDictionary* _timeoutTimers;

}

@property (nonatomic,readonly) PSYActivityInfo * currentActivityInfo; 
@property (nonatomic,readonly) float currentActivityProgress; 
@property (nonatomic,readonly) float totalProgress; 
@property (nonatomic,retain) NSMutableArray * progressDelegates;                   //@synthesize progressDelegates=_progressDelegates - In the implementation block
@property (nonatomic,retain) NSMutableArray * schedulingObservers;                 //@synthesize schedulingObservers=_schedulingObservers - In the implementation block
@property (nonatomic,retain) NSMutableArray * activityQueue;                       //@synthesize activityQueue=_activityQueue - In the implementation block
@property (nonatomic,retain) PSDActivity * currentActivity;                        //@synthesize currentActivity=_currentActivity - In the implementation block
@property (nonatomic,retain) NSError * activityError;                              //@synthesize activityError=_activityError - In the implementation block
@property (nonatomic,retain) PSDProgress * progress;                               //@synthesize progress=_progress - In the implementation block
@property (nonatomic,retain) PSYOptions * options;                                 //@synthesize options=_options - In the implementation block
@property (nonatomic,retain) PSDResumeContext * resumeContext;                     //@synthesize resumeContext=_resumeContext - In the implementation block
@property (nonatomic,retain) NSEnumerator * testInputsEnumerator;                  //@synthesize testInputsEnumerator=_testInputsEnumerator - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * timeoutTimers;                  //@synthesize timeoutTimers=_timeoutTimers - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(char)_isSyncShameDisabled;
+(char)_isInternalInstall;
+(id)sharedScheduler;
-(void)addSchedulingObserver:(id)arg1 ;
-(char)scheduleActivitiesWithOptions:(id)arg1 ;
-(void)cancelScheduledActivities;
-(void)deviceSyncStateDidBecomeAvailable:(id)arg1 ;
-(void)setupResumeContextIfNeeded;
-(NSMutableArray *)progressDelegates;
-(void)setTestInputsEnumerator:(NSEnumerator *)arg1 ;
-(char)canResumePendingActivitiesForOptions:(id)arg1 ;
-(PSDResumeContext *)resumeContext;
-(id)activityInfoDirectoryForOptions:(id)arg1 ;
-(id)sortedActivityInfos:(id)arg1 ;
-(id)filteredEligibleActivityInfos:(id)arg1 forOptions:(id)arg2 ;
-(char)saveResumeContext;
-(id)activitiesForActivityInfos:(id)arg1 ;
-(void)logSessionStartedWithActivityCount:(unsigned)arg1 isResuming:(char)arg2 ;
-(void)_tellDelegatesProgressStateDidChange;
-(void)_dequeueNextActivity;
-(void)_cancelAllActivityTimers;
-(void)setCurrentActivity:(PSDActivity *)arg1 ;
-(float)_totalProgress;
-(int)_currentProgressState;
-(NSError *)activityError;
-(void)setActivityError:(NSError *)arg1 ;
-(void)_tellDelegatesActivityDidFinish:(id)arg1 withError:(id)arg2 nextActivity:(id)arg3 ;
-(void)_startActivity:(id)arg1 ;
-(void)_scheduledActivitiesDidComplete;
-(id)_syncOptionsForActivity:(id)arg1 ;
-(void)logActivityStarted:(id)arg1 ;
-(void)_scheduleTimeoutForActivity:(id)arg1 ;
-(void)_finishActivity:(id)arg1 success:(char)arg2 error:(id)arg3 ;
-(void)_activityWasInterrupted:(id)arg1 ;
-(void)_clearActivityTimer:(id)arg1 ;
-(char)_shouldHandleCallbackForActivity:(id)arg1 ;
-(void)logActivityEnded:(id)arg1 success:(char)arg2 error:(id)arg3 ;
-(char)_canAttemptRetryForActivity:(id)arg1 ;
-(void)_takeStackshotSequenceWithLabel:(id)arg1 ;
-(void)_popATimeoutAlert:(id)arg1 ;
-(double)_timeoutForActivity:(id)arg1 ;
-(void)_activityTimeoutHandler:(id)arg1 ;
-(void)_activityDidTimeout:(id)arg1 ;
-(unsigned)_maximumInterruptionCountForActivity:(id)arg1 ;
-(char)shouldLaunchAsDryRun;
-(NSEnumerator *)testInputsEnumerator;
-(void)logSessionEnded;
-(void)_tellDelegateDidComplete;
-(void)_enumerateProgressDelegatesWithBlock:(/*^block*/id)arg1 ;
-(void)_tellDelegateActivityProgressDidUpdate:(float)arg1 ;
-(void)_evaluateTestingParametersIfNeeded;
-(void)enumerateSchedulingObserversWithBlock:(/*^block*/id)arg1 ;
-(void)_currentProgressUpdated:(float)arg1 ;
-(void)activityDidCompleteSending:(id)arg1 ;
-(void)activity:(id)arg1 didUpdateProgress:(float)arg2 ;
-(void)addProgressDelegate:(id)arg1 ;
-(void)removeProgressDelegate:(id)arg1 ;
-(float)currentActivityProgress;
-(PSYActivityInfo *)currentActivityInfo;
-(void)logActivityDidCompleteSending:(id)arg1 ;
-(void)setProgressDelegates:(NSMutableArray *)arg1 ;
-(NSMutableArray *)schedulingObservers;
-(void)setSchedulingObservers:(NSMutableArray *)arg1 ;
-(void)setResumeContext:(PSDResumeContext *)arg1 ;
-(NSMutableDictionary *)timeoutTimers;
-(void)setTimeoutTimers:(NSMutableDictionary *)arg1 ;
-(void)setActivityQueue:(NSMutableArray *)arg1 ;
-(NSMutableArray *)activityQueue;
-(id)init;
-(void)setProgress:(PSDProgress *)arg1 ;
-(void)_cleanup;
-(PSDProgress *)progress;
-(void)setOptions:(PSYOptions *)arg1 ;
-(PSYOptions *)options;
-(PSDActivity *)currentActivity;
-(void)clearCurrentResumeContext;
-(void)getCurrentStateWithCompletion:(/*^block*/id)arg1 ;
-(float)totalProgress;
-(id)_localizedString:(id)arg1 ;
@end

