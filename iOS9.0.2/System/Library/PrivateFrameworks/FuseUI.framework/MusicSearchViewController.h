/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 6, 2015 at 2:32:43 PM Japan Standard Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /System/Library/PrivateFrameworks/FuseUI.framework/FuseUI
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <FuseUI/FuseUI-Structs.h>
#import <StoreKitUI/SKUIScrollingSegmentedController.h>
#import <libobjc.A.dylib/MusicJSNativeViewControllerFactory.h>
#import <libobjc.A.dylib/MusicJSSearchNativeViewControllerDelegate.h>
#import <libobjc.A.dylib/MusicLibrarySearchResultsViewControllerDelegate.h>
#import <libobjc.A.dylib/MusicSearchBarDelegate.h>
#import <libobjc.A.dylib/MusicSearchHintsViewControllerDelegate.h>
#import <libobjc.A.dylib/MusicSearchRecentsViewControllerDelegate.h>
#import <libobjc.A.dylib/SKUIScrollingSegmentedControllerDelegate.h>
#import <libobjc.A.dylib/MusicClientContextConsuming.h>
#import <UIKit/UIViewControllerTransitioningDelegate.h>

@protocol MusicSearchViewControllerMediaPickerDelegate;
@class MusicLibrarySearchResultsViewController, _UINavigationControllerPalette, MusicSearchBar, MusicSearchHintsViewController, UIViewController, NSString, MusicClientContext, UISearchBar, SKUIClientContext;

@interface MusicSearchViewController : SKUIScrollingSegmentedController <MusicJSNativeViewControllerFactory, MusicJSSearchNativeViewControllerDelegate, MusicLibrarySearchResultsViewControllerDelegate, MusicSearchBarDelegate, MusicSearchHintsViewControllerDelegate, MusicSearchRecentsViewControllerDelegate, SKUIScrollingSegmentedControllerDelegate, MusicClientContextConsuming, UIViewControllerTransitioningDelegate> {

	char _allowsAllContentInStoreSearch;
	char _allowsRadioContentInStoreSearch;
	char _didInsertStoreSearchResultsDocument;
	char _didMakeSearchBarFirstResponder;
	MusicLibrarySearchResultsViewController* _librarySearchResultsViewController;
	_UINavigationControllerPalette* _palette;
	MusicSearchBar* _searchBar;
	MusicSearchHintsViewController* _searchHintsViewController;
	UIViewController* _storeSearchResultsViewController;
	NSString* _partialSearchString;
	char _storeSearchViewNeedsChangeUponAppearance;
	char _storeSearchViewNeedsSubmitUponAppearance;
	char _mediaPickerAllowsLocalSearchOnly;
	char _mediaPickerAllowsMultipleSelection;
	char _mediaPickerIncludePlaylists;
	char _shouldUseMediaPickerViewConfiguration;
	char _storeSearchViewIsVisible;
	MusicClientContext* _clientContext;
	id<MusicSearchViewControllerMediaPickerDelegate> _mediaPickerDelegate;
	unsigned _searchOptions;

}

@property (assign,nonatomic,__weak) id<MusicSearchViewControllerMediaPickerDelegate> mediaPickerDelegate;              //@synthesize mediaPickerDelegate=_mediaPickerDelegate - In the implementation block
@property (assign,nonatomic) unsigned searchOptions;                                                                   //@synthesize searchOptions=_searchOptions - In the implementation block
@property (assign,nonatomic) char storeSearchViewIsVisible;                                                            //@synthesize storeSearchViewIsVisible=_storeSearchViewIsVisible - In the implementation block
@property (nonatomic,readonly) UISearchBar * searchBar; 
@property (nonatomic,copy) NSString * searchTerm; 
@property (nonatomic,readonly) float searchNavigationBarPaletteHeight; 
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,retain) SKUIClientContext * clientContext; 
+(id)mediaPickerSearchViewControllerWithSearchBar:(id)arg1 allowLocalSearchOnly:(char)arg2 allowMultipleSelection:(char)arg3 includePlaylists:(char)arg4 presentingViewController:(id)arg5 ;
+(id)defaultSearchBarWithTraitCollection:(id)arg1 ;
+(id)_defaultSearchNavigationControllerWithSearchViewController:(id)arg1 ;
+(id)_defaultSearchViewControllerForPresentingViewController:(id)arg1 ;
+(id)searchViewControllerForPresentingViewController:(id)arg1 withSearchBar:(id)arg2 ;
-(void)dealloc;
-(id)initWithNibName:(id)arg1 bundle:(id)arg2 ;
-(void)viewWillAppear:(char)arg1 ;
-(void)viewDidLoad;
-(void)viewWillDisappear:(char)arg1 ;
-(void)viewDidDisappear:(char)arg1 ;
-(id)presentationControllerForPresentedViewController:(id)arg1 presentingViewController:(id)arg2 sourceViewController:(id)arg3 ;
-(id)animationControllerForPresentedController:(id)arg1 presentingController:(id)arg2 sourceController:(id)arg3 ;
-(id)animationControllerForDismissedController:(id)arg1 ;
-(UISearchBar *)searchBar;
-(void)searchBar:(id)arg1 textDidChange:(id)arg2 ;
-(void)searchBarCancelButtonClicked:(id)arg1 ;
-(void)searchBarBookmarkButtonClicked:(id)arg1 ;
-(void)searchBarTextDidEndEditing:(id)arg1 ;
-(void)searchBarSearchButtonClicked:(id)arg1 ;
-(void)librarySearchResultsViewController:(id)arg1 didSelectResultWithTitle:(id)arg2 ;
-(void)searchBarDidLayoutSubviews:(id)arg1 ;
-(id)loadJSNativeViewControllerWithAppContext:(id)arg1 ;
-(void)setSearchOptions:(unsigned)arg1 ;
-(unsigned)searchOptions;
-(void)setMediaPickerDelegate:(id<MusicSearchViewControllerMediaPickerDelegate>)arg1 ;
-(id<MusicSearchViewControllerMediaPickerDelegate>)mediaPickerDelegate;
-(void)_handleCanShowSubscriptionContentDidChangeNotification:(id)arg1 ;
-(void)_handleCanShowRadioDidChangeNotification:(id)arg1 ;
-(char)_allowsLocalSearchOnly;
-(UIEdgeInsets)_searchSegmentedControlContentEdgeInsets;
-(id)_storeSearchSegmentTitle;
-(id)_extraInfoForStoreSearchEvent;
-(void)_attachPaletteIfNecessary;
-(void)_detachPalette;
-(void)_recordSearchRecent:(id)arg1 ;
-(void)_dispatchSearchTextChangeWithTerm:(id)arg1 usingSubmitEventType:(char)arg2 ;
-(void)setStoreSearchViewIsVisible:(char)arg1 ;
-(id)initForMediaPickerUseAllowLocalSearchOnly:(char)arg1 allowMultipleSelection:(char)arg2 includePlaylists:(char)arg3 ;
-(void)_updateForStoreContentAvailabilityChange;
-(void)jsSearchNativeViewController:(id)arg1 setStoreSearchResultsDocument:(id)arg2 options:(id)arg3 ;
-(void)jsSearchNativeViewController:(id)arg1 setSearchTerm:(id)arg2 ;
-(void)jsSearchNativeViewController:(id)arg1 selectMediaPickerItem:(id)arg2 ;
-(void)searchHintsViewController:(id)arg1 didSelectSearchHintWithText:(id)arg2 URL:(id)arg3 index:(int)arg4 ;
-(void)searchRecentsViewController:(id)arg1 didSelectSearchTerm:(id)arg2 ;
-(float)searchNavigationBarPaletteHeight;
-(char)storeSearchViewIsVisible;
-(void)setClientContext:(SKUIClientContext *)arg1 ;
-(SKUIClientContext *)clientContext;
-(void)scrollingSegmentedController:(id)arg1 willDisplayViewControllerAtIndex:(unsigned)arg2 ;
-(void)scrollingSegmentedController:(id)arg1 didEndDisplayingViewControllerAtIndex:(unsigned)arg2 ;
-(void)setSearchTerm:(NSString *)arg1 ;
-(NSString *)searchTerm;
@end

