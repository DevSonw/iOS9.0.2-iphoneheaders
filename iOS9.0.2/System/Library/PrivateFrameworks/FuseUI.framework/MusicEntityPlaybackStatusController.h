/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 6, 2015 at 2:32:44 PM Japan Standard Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /System/Library/PrivateFrameworks/FuseUI.framework/FuseUI
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <libobjc.A.dylib/MusicPlaybackProgressScrubbing.h>

@class MPUContentItemIdentifierCollection, NSHashTable, MusicPlaybackProgressScrubberController, MPAVController, NSString;

@interface MusicEntityPlaybackStatusController : NSObject <MusicPlaybackProgressScrubbing> {

	char _alwaysLive;
	MPUContentItemIdentifierCollection* _currentContainerIdentifierCollection;
	MPUContentItemIdentifierCollection* _currentItemIdentifierCollection;
	double _playbackCurrentTime;
	double _playbackCurrentTimeOriginatingTime;
	int _playbackDisplayState;
	double _playbackDuration;
	float _playbackRate;
	NSHashTable* _observers;
	MusicPlaybackProgressScrubberController* _playbackProgressScrubberController;
	MPAVController* _player;

}

@property (nonatomic,readonly) MPAVController * player;                                                      //@synthesize player=_player - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (assign,getter=isAlwaysLive,nonatomic) char alwaysLive; 
@property (nonatomic,readonly) int currentScrubSpeed; 
@property (assign,nonatomic,__weak) id<MusicPlaybackProgressScrubberDelegate> scrubberDelegate; 
@property (nonatomic,readonly) double effectiveCurrentTime; 
@property (assign,nonatomic) float rate; 
@property (assign,getter=isScrubbingEnabled,nonatomic) char scrubbingEnabled; 
@property (assign,nonatomic) double totalDuration; 
-(id)initWithPlayer:(id)arg1 ;
-(int)currentScrubSpeed;
-(void)setCurrentTime:(double)arg1 ;
-(id<MusicPlaybackProgressScrubberDelegate>)scrubberDelegate;
-(void)setScrubberDelegate:(id<MusicPlaybackProgressScrubberDelegate>)arg1 ;
-(float)rate;
-(char)_setCurrentTime:(double)arg1 ;
-(MPAVController *)player;
-(void)dealloc;
-(double)playbackCurrentTime;
-(void)addPlaybackStatusObserver:(id)arg1 ;
-(void)removePlaybackStatusObserver:(id)arg1 ;
-(id)playbackStatusForContainerIdentifierCollection:(id)arg1 itemIdentifierCollection:(id)arg2 ;
-(void)_enumerateObserversUsingBlock:(/*^block*/id)arg1 ;
-(void)_playerContentsDidChangeNotification:(id)arg1 ;
-(double)effectiveCurrentTime;
-(void)cancelScrubbing;
-(void)setAlwaysLive:(char)arg1 ;
-(char)isScrubbingEnabled;
-(void)setScrubbingEnabled:(char)arg1 ;
-(double)totalDuration;
-(void)setTotalDuration:(double)arg1 ;
-(void)_playerPlaybackStateDidChangeNotification:(id)arg1 ;
-(void)_itemContentItemIdentifierCollectionDidChangeNotification:(id)arg1 ;
-(void)_feederContentItemIdentifierCollectionDidChangeNotification:(id)arg1 ;
-(void)_getContainerIdentifierCollection:(out id*)arg1 itemIdentifierCollection:(out id*)arg2 forItem:(id)arg3 ;
-(void)_sendPlaybackStatusDidChange;
-(id)_playbackStatusForPlaybackDisplayState:(int)arg1 ;
-(void)_updateCurrentPlaybackIdentifierSet;
-(void)setRate:(float)arg1 ;
-(void)_playerItemWillChangeNotification:(id)arg1 ;
-(char)isAlwaysLive;
@end

