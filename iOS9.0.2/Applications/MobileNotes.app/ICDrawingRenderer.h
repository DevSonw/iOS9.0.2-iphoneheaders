/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 6, 2015 at 5:12:41 PM Japan Standard Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /Applications/MobileNotes.app/MobileNotes
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


#import <MobileNotes/MobileNotes-Structs.h>
@class ICDrawingCommand, ICGLContext, TSDGLFrameBuffer, ICDrawingResourceHandler, ICDrawingContour, TSDGLDataBuffer, ICDrawing;

@interface ICDrawingRenderer : NSObject {

	ICDrawingCommand* _currentCommand;
	ICGLContext* _glContext;
	TSDGLFrameBuffer* _paintFramebuffer;
	TSDGLFrameBuffer* _paintFramebufferAccumulator;
	TSDGLFrameBuffer* _originalBackFramebuffer;
	char _hasRenderedIntoPaintAccumulator;
	GLsyncRef _finishRenderingFence;
	ICDrawingResourceHandler* _resourceHandler;
	float _segmentedDistanceToNextPoint;
	unsigned _segmentedRandomSeed;
	int _backingWidth;
	int _backingHeight;
	CGRect _clipRect;
	ICDrawingContour* _penContour;
	char _inDrawingMode;
	CGSize _drawingSize;
	CGSize _actualSize;
	float _fromCommandSpaceScale;
	CGRect _contentsBounds;
	TSDGLDataBuffer* _strokeBuffer;
	char _cancelRendering;
	ICDrawing* _drawing;
	CGAffineTransform _transform;

}

@property (assign,nonatomic,__weak) ICDrawing * drawing;               //@synthesize drawing=_drawing - In the implementation block
@property (nonatomic,readonly) ICGLContext * glContext;                //@synthesize glContext=_glContext - In the implementation block
@property (assign,nonatomic) CGAffineTransform transform;              //@synthesize transform=_transform - In the implementation block
@property (assign,nonatomic) char cancelRendering;                     //@synthesize cancelRendering=_cancelRendering - In the implementation block
-(void)setCancelRendering:(char)arg1 ;
-(char)cancelRendering;
-(void)renderImage:(CGImageRef)arg1 ;
-(CGImageRef)newCGImage;
-(void)releaseDrawingFramebuffers;
-(void)releaseStrokeBuffer;
-(float)renderPencilStrokeFrom:(_wrap_iter<const ICDrawingOutputPoint *>*)arg1 to:(_wrap_iter<const ICDrawingOutputPoint *>*)arg2 command:(id)arg3 distanceToNextPoint:(float)arg4 randomSeed:(unsigned*)arg5 ;
-(float)renderMarkerStrokeFrom:(_wrap_iter<const ICDrawingOutputPoint *>*)arg1 to:(_wrap_iter<const ICDrawingOutputPoint *>*)arg2 starts:(char)arg3 ends:(char)arg4 command:(id)arg5 distanceToNextPoint:(float)arg6 randomSeed:(unsigned*)arg7 ;
-(float)renderPenStrokeFrom:(_wrap_iter<const ICDrawingOutputPoint *>*)arg1 to:(_wrap_iter<const ICDrawingOutputPoint *>*)arg2 command:(id)arg3 distanceToNextPoint:(float)arg4 randomSeed:(unsigned*)arg5 ;
-(float)renderEraserStrokeFrom:(_wrap_iter<const ICDrawingOutputPoint *>*)arg1 to:(_wrap_iter<const ICDrawingOutputPoint *>*)arg2 command:(id)arg3 distanceToNextPoint:(float)arg4 randomSeed:(unsigned*)arg5 ;
-(float)renderPenStrokeFrom:(_wrap_iter<const ICDrawingOutputPoint *>*)arg1 to:(_wrap_iter<const ICDrawingOutputPoint *>*)arg2 distanceToNextPoint:(float)arg3 randomSeed:(unsigned*)arg4 alpha:(float)arg5 ;
-(void)setupStrokeBufferIfNecessary;
-(float)renderParticleStrokeFrom:(_wrap_iter<const ICDrawingOutputPoint *>*)arg1 to:(_wrap_iter<const ICDrawingOutputPoint *>*)arg2 starts:(char)arg3 ends:(char)arg4 distanceToNextPoint:(float)arg5 randomSeed:(unsigned*)arg6 alpha:(float)arg7 particleTexture:(unsigned)arg8 spacing:(float)arg9 count:(unsigned)arg10 size:(CGSize)arg11 rotateEachParticle:(char)arg12 ;
-(void)renderStrokeVertices:(StrokeVertex*)arg1 numVertices:(unsigned long)arg2 buffer:(id)arg3 particleTexture:(unsigned)arg4 shader:(id)arg5 ;
-(void)renderFullscreenQuadWithShader:(id)arg1 transform:(CGAffineTransform)arg2 flipped:(char)arg3 ;
-(void)renderCommand:(id)arg1 withTransform:(CGAffineTransform)arg2 onPaper:(char)arg3 flipped:(char)arg4 ;
-(void)setupDrawingFramebuffersIfNecessary;
-(void)drawingVertexReplay:(const vector<ICDrawingOutputPoint, std::__1::allocator<ICDrawingOutputPoint> >*)arg1 fromIndex:(unsigned)arg2 ;
-(void)renderVerticies:(const vector<ICDrawingOutputPoint, std::__1::allocator<ICDrawingOutputPoint> >*)arg1 fromIndex:(unsigned)arg2 ;
-(float)renderStroke:(Contour*)arg1 starts:(char)arg2 ends:(char)arg3 command:(id)arg4 distanceToNextPoint:(float)arg5 randomSeed:(unsigned*)arg6 ;
-(void)renderTexture:(unsigned)arg1 flipped:(char)arg2 ;
-(void)finishRendering;
-(void)finishRenderingNoTeardownForCommand:(id)arg1 ;
-(CGImageRef)newCGImageFromGL;
-(void)applyCommandSpaceClipRect:(CGRect)arg1 ;
-(unsigned)renderCommands:(id)arg1 isClipped:(char)arg2 renderedBlock:(/*^block*/id)arg3 ;
-(unsigned)renderCommands:(id)arg1 renderedBlock:(/*^block*/id)arg2 ;
-(id)initWithDrawingPixelSize:(CGSize)arg1 actualSize:(CGSize)arg2 ;
-(void)setupOpenGL;
-(void)setViewport;
-(void)renderWithTransform:(CGAffineTransform)arg1 onPaper:(char)arg2 ;
-(void)drawingRenderPoints:(const vector<ICDrawingOutputPoint, std::__1::allocator<ICDrawingOutputPoint> >*)arg1 fromIndex:(unsigned)arg2 ;
-(void)printPath;
-(void)printSVGFile;
-(CGRect)contentsBoundsInCommandSpace;
-(void)renderImage:(CGImageRef)arg1 clippedToCommandSpaceRect:(CGRect)arg2 ;
-(char)renderCommands:(id)arg1 clippedToCommandSpaceRect:(CGRect)arg2 renderedBlock:(/*^block*/id)arg3 ;
-(char)clearAndRenderCommands:(id)arg1 clippedToCommandSpaceRect:(CGRect)arg2 renderedBlock:(/*^block*/id)arg3 ;
-(ICGLContext *)glContext;
-(void)dealloc;
-(void)setTransform:(CGAffineTransform)arg1 ;
-(CGAffineTransform)transform;
-(void)clear;
-(void)drawingBeganWithCommand:(id)arg1 ;
-(void)drawingEnded;
-(void)drawingCancelled;
-(ICDrawing *)drawing;
-(void)setDrawing:(ICDrawing *)arg1 ;
@end

