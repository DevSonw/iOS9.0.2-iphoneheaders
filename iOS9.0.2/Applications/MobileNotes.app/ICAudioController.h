/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 6, 2015 at 5:12:43 PM Japan Standard Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /Applications/MobileNotes.app/MobileNotes
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <MobileNotes/ICAudioCaptureSessionObserver.h>

@class AVPlayer, ICAttachment, ICAudioCaptureSession, NSObject, NSString;

@interface ICAudioController : NSObject <ICAudioCaptureSessionObserver> {

	int _AVCaptureState;
	AVPlayer* _currentPlayer;
	ICAttachment* _currentAttachment;
	ICAudioCaptureSession* _currentCaptureSession;
	NSObject* _playbackTimeObserver;

}

@property (nonatomic,retain) AVPlayer * currentPlayer;                                   //@synthesize currentPlayer=_currentPlayer - In the implementation block
@property (nonatomic,retain) ICAttachment * currentAttachment;                           //@synthesize currentAttachment=_currentAttachment - In the implementation block
@property (nonatomic,readonly) char isPlaying; 
@property (nonatomic,retain) ICAudioCaptureSession * currentCaptureSession;              //@synthesize currentCaptureSession=_currentCaptureSession - In the implementation block
@property (assign,nonatomic) int AVCaptureState;                                         //@synthesize AVCaptureState=_AVCaptureState - In the implementation block
@property (nonatomic,retain) NSObject * playbackTimeObserver;                            //@synthesize playbackTimeObserver=_playbackTimeObserver - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)sharedAudioController;
+(void)pauseIfPlaying;
-(ICAttachment *)currentAttachment;
-(void)updateTime:(double)arg1 duration:(double)arg2 ;
-(void)attachmentWillBeDeletedNotification:(id)arg1 ;
-(void)startOrResumeRecording;
-(void)finishRecording;
-(id)finalizedRecordingAssetURL;
-(void)closeRecordingSession;
-(void)skipBackByInterval:(double)arg1 ;
-(void)skipAheadByInterval:(double)arg1 ;
-(int)remotePause:(id)arg1 ;
-(int)remotePlay:(id)arg1 ;
-(int)remoteStop:(id)arg1 ;
-(int)remoteTogglePlayPause:(id)arg1 ;
-(int)remoteSkipBackward:(id)arg1 ;
-(int)remoteSkipForward:(id)arg1 ;
-(void)notifyPlaying;
-(void)updateNowPlayingInfo;
-(void)notifyPaused;
-(void)notifyStopped;
-(void)setCurrentAttachment:(ICAttachment *)arg1 ;
-(void)updateRecordingDuration:(id)arg1 ;
-(void)pauseRecording;
-(void)seekToTime:(double)arg1 ;
-(void)play;
-(char)isPlaying;
-(void)setPlaybackTimeObserver:(NSObject *)arg1 ;
-(NSObject *)playbackTimeObserver;
-(void)dealloc;
-(id)init;
-(void)stop;
-(void)pause;
-(ICAudioCaptureSession *)currentCaptureSession;
-(void)setCurrentCaptureSession:(ICAudioCaptureSession *)arg1 ;
-(void)togglePlayPause;
-(AVPlayer *)currentPlayer;
-(void)setCurrentPlayer:(AVPlayer *)arg1 ;
-(void)play:(id)arg1 ;
-(void)captureSession:(id)arg1 destinationFragmentDurationDidChangeToDuration:(double)arg2 ;
-(void)captureSession:(id)arg1 rateDidChangeToRate:(float)arg2 ;
-(void)captureSession:(id)arg1 didFinishWithSuccess:(char)arg2 ;
-(void)setAVCaptureState:(int)arg1 ;
-(int)AVCaptureState;
@end

