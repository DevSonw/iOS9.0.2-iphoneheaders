/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 6, 2015 at 5:12:57 PM Japan Standard Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /Applications/Reminders.app/Reminders
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <Reminders/Reminders-Structs.h>
#import <UIKit/UIViewController.h>
#import <UIKit/UITableViewDataSource.h>
#import <UIKit/UITableViewDelegate.h>
#import <UIKit/UITextFieldDelegate.h>
#import <Reminders/RemindersListPickerModelDelegate.h>
#import <UIKit/UIPopoverControllerDelegate.h>

@protocol RemindersListPickerDelegate;
@class UITableView, RemindersListPickerModel, UIBarButtonItem, UITextField, NSIndexPath, NSMutableDictionary, EKCalendar, UIPopoverController, UIColor, NSString;

@interface RemindersListPicker : UIViewController <UITableViewDataSource, UITableViewDelegate, UITextFieldDelegate, RemindersListPickerModelDelegate, UIPopoverControllerDelegate> {

	UITableView* _tableView;
	RemindersListPickerModel* _model;
	unsigned _editing : 1;
	unsigned _needsReloadAfterEndingEditing : 1;
	unsigned _isEmpty : 1;
	unsigned _shouldIgnoreNextEventStoreChange : 1;
	int _style;
	UIBarButtonItem* _editButton;
	UITextField* _currentlyEditingTextField;
	NSIndexPath* _indexPathToDelete;
	char _hasSwipedRow;
	id<RemindersListPickerDelegate> _delegate;
	float _keyboardHeightOnScreen;
	NSMutableDictionary* _textFieldToIDs;
	CGColorRef _newCalendarColorRef;
	EKCalendar* _cachedInvitation;
	EKCalendar* _sharingCalendar;
	UIPopoverController* _sharingPopoverController;
	UIColor* _currentCalendarColor;

}

@property (nonatomic,retain) id<RemindersListPickerDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,retain) UIColor * currentCalendarColor;                        //@synthesize currentCalendarColor=_currentCalendarColor - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)_showExtraWarningForDualTypeCalendar:(id)arg1 ;
-(void)selectCalendar:(id)arg1 ;
-(void)selectScheduled;
-(id)initWithEventStore:(id)arg1 style:(int)arg2 ;
-(char)isScheduledSelected;
-(void)cacheInvitation:(id)arg1 ;
-(void)deleteInvitation:(id)arg1 ;
-(void)selectFirstAvailableCalendar;
-(void)listPickerModelDidChangeSelectedCalendar:(id)arg1 ;
-(void)_reloadCalendars;
-(void)_updateTableSelection;
-(void)highlightCell:(id)arg1 ;
-(void)_actuallyDeleteCalendar:(id)arg1 atIndexPath:(id)arg2 fromEventStore:(char)arg3 ;
-(char)_isEllipsisRowAtIndexPath:(id)arg1 ;
-(void)unhighlightCell:(id)arg1 ;
-(char)_isScheduledRowAtIndexPath:(id)arg1 ;
-(id)_calendarForIndexPath:(id)arg1 ;
-(char)_isCalendarRowAtIndexPath:(id)arg1 ;
-(id)_sourceInfoForSection:(int)arg1 ;
-(char)_assignDisplayOrdersToListsAndCommit:(id)arg1 ;
-(void)_rollBackEventStoreIncludingCalendars:(id)arg1 ;
-(int)_numberOfSectionsWhenEditing:(char)arg1 ;
-(int)_numberOfRowsInSection:(int)arg1 whenEditing:(char)arg2 ;
-(id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2 style:(int)arg3 reuseIdentifier:(id)arg4 ;
-(id)subtitleStringWithInformationalText:(id)arg1 overdueCount:(int)arg2 ;
-(void)_attemptToDeleteCalendarAtIndexPath:(id)arg1 ;
-(id)_indexPathForCalendar:(id)arg1 ;
-(int)_sectionForSourceInfo:(id)arg1 ;
-(id)_sourceInfoForSection:(int)arg1 whenEditing:(char)arg2 ;
-(id)_sortedDisplayOrdersForLists:(id)arg1 ;
-(int)_highestDisplayOrderInSource:(id)arg1 ;
-(void)_cancelDeleteRowAtIndexPath:(id)arg1 ;
-(void)_handleAnimationsDictionary:(id)arg1 ;
-(void)handleDelete:(id)arg1 ;
-(char)_needsReloadForChangedObjectIDs:(id)arg1 ;
-(void)updateTableViewContentInset;
-(void)handleKeyboardTransition;
-(void)resignEditingTextField;
-(void)_adjustForKeyboard:(id)arg1 ;
-(UIColor *)currentCalendarColor;
-(void)setCurrentCalendarColor:(UIColor *)arg1 ;
-(id)eventStore;
-(id)selectedCalendar;
-(void)_eventStoreChanged:(id)arg1 ;
-(CGSize)calculatePreferredContentSize;
-(id)_selectedIndexPath;
-(void)setDelegate:(id<RemindersListPickerDelegate>)arg1 ;
-(void)dealloc;
-(void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3 ;
-(float)tableView:(id)arg1 heightForHeaderInSection:(int)arg2 ;
-(float)tableView:(id)arg1 estimatedHeightForRowAtIndexPath:(id)arg2 ;
-(id)tableView:(id)arg1 viewForHeaderInSection:(int)arg2 ;
-(id)tableView:(id)arg1 willSelectRowAtIndexPath:(id)arg2 ;
-(void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2 ;
-(int)tableView:(id)arg1 editingStyleForRowAtIndexPath:(id)arg2 ;
-(void)tableView:(id)arg1 willBeginEditingRowAtIndexPath:(id)arg2 ;
-(void)tableView:(id)arg1 didEndEditingRowAtIndexPath:(id)arg2 ;
-(id)tableView:(id)arg1 targetIndexPathForMoveFromRowAtIndexPath:(id)arg2 toProposedIndexPath:(id)arg3 ;
-(int)tableView:(id)arg1 numberOfRowsInSection:(int)arg2 ;
-(id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2 ;
-(int)numberOfSectionsInTableView:(id)arg1 ;
-(char)tableView:(id)arg1 canMoveRowAtIndexPath:(id)arg2 ;
-(void)tableView:(id)arg1 commitEditingStyle:(int)arg2 forRowAtIndexPath:(id)arg3 ;
-(void)tableView:(id)arg1 moveRowAtIndexPath:(id)arg2 toIndexPath:(id)arg3 ;
-(id<RemindersListPickerDelegate>)delegate;
-(void)loadView;
-(char)isEditing;
-(void)viewWillTransitionToSize:(CGSize)arg1 withTransitionCoordinator:(id)arg2 ;
-(CGSize)preferredContentSize;
-(void)beginEditing;
-(void)endEditing;
-(void)textFieldDidBeginEditing:(id)arg1 ;
-(void)textFieldDidEndEditing:(id)arg1 ;
-(void)viewDidLoad;
-(void)viewDidUnload;
-(void)_setEditing:(char)arg1 ;
-(id)titleForHeaderInSection:(int)arg1 ;
@end

