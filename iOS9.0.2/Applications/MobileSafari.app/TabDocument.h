/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 6, 2015 at 5:12:46 PM Japan Standard Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /Applications/MobileSafari.app/MobileSafari
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <MobileSafari/MobileSafari-Structs.h>
#import <libobjc.A.dylib/_SFSafeBrowsingControllerDelegate.h>
#import <libobjc.A.dylib/_SFPageLoadErrorControllerDelegate.h>
#import <MobileSafari/AppBannerMetaTagContentObserver.h>
#import <MobileSafari/FindOnPageToolbarDelegate.h>
#import <MobileSafari/LoadingControllerDelegate.h>
#import <MobileSafari/QuickWebsiteSearchEventListener.h>
#import <MobileSafari/RequestDesktopSiteUIProcessListener.h>
#import <MobileSafari/StoreBannerDelegate.h>
#import <libobjc.A.dylib/WBSFluidProgressStateSource.h>
#import <libobjc.A.dylib/WBSFluidProgressControllerWindowDelegate.h>
#import <libobjc.A.dylib/WBUFormAutoFillControllerDelegate.h>
#import <libobjc.A.dylib/WKNavigationDelegatePrivate.h>
#import <libobjc.A.dylib/WKUIDelegatePrivate.h>
#import <MobileSafari/_WKFindDelegate.h>
#import <libobjc.A.dylib/_WKFormDelegate.h>
#import <MobileSafari/_WKDiagnosticLoggingDelegate.h>

@protocol TabDocumentDelegate, RequestDesktopSiteWebProcessPlugInListener;
@class BrowserController, QuickLookDocumentController, TabBarItem, LoadingController, QuickLookDocument, WBSFluidProgressState, WBSFluidProgressController, ReaderContextWK2, NSTimer, PageLoadTestStatistics, PageLoadTest, NSDictionary, WBSHistoryVisit, SafariWebView, NSString, NSUserActivity, NSError, _SFURLSpoofingMitigator, _WKSessionState, _WKRemoteObjectInterface, SafariSharingExtensionController, QuickLookDocumentWriter, WBUInjectedJavaScriptController, WBUWebClipMetadataFetcher, NSMutableArray, FindOnPageCompletionProvider, WBUFormAutoFillController, NSMutableSet, _SFFluidProgressView, _SFNavigationBarItem, _SFJavaScriptDialogManager, NSURL, WebBookmark, WKBackForwardListItem, StoreBanner, PinnableBanner, _WKDownload, UIImage, _SFDownloadController, TabOverviewItem, TiltedTabItem, WBSAutomaticReadingListItem, _SFPageLoadErrorController, _SFSafeBrowsingController, NSUUID, LinkPreviewViewController, UIView;

@interface TabDocument : NSObject <_SFSafeBrowsingControllerDelegate, _SFPageLoadErrorControllerDelegate, AppBannerMetaTagContentObserver, FindOnPageToolbarDelegate, LoadingControllerDelegate, QuickWebsiteSearchEventListener, RequestDesktopSiteUIProcessListener, StoreBannerDelegate, WBSFluidProgressStateSource, WBSFluidProgressControllerWindowDelegate, WBUFormAutoFillControllerDelegate, WKNavigationDelegatePrivate, WKUIDelegatePrivate, _WKFindDelegate, _WKFormDelegate, _WKDiagnosticLoggingDelegate> {

	id<TabDocumentDelegate> _delegate;
	BrowserController* _browserController;
	QuickLookDocumentController* _quickLookDocumentController;
	TabBarItem* _tabBarItem;
	LoadingController* _loadingController;
	QuickLookDocument* _quickLookDocument;
	char _suspended;
	char _hibernated;
	char _allowURLAsTitle;
	char _loadWasUserDriven;
	WBSFluidProgressState* _fluidProgressState;
	WBSFluidProgressController* _fluidProgressController;
	long long _downloadBytesExpected;
	unsigned _downloadBytesLoaded;
	char _isActive;
	char _isPagePaused;
	char _isClosed;
	char _frozenForNavigationGesture;
	ReaderContextWK2* _readerContext;
	char _hasDoneReaderAvailabilityDetection;
	NSTimer* _readerAvailabilityDetectionTimer;
	char _userHasManipulatedVisibleRegion;
	char _wasOpenedFromLink;
	char _wasOpenedFromHistory;
	unsigned _downloadBackgroundTaskIdentifier;
	double _pageLoadStartTime;
	double _firstVisualLayoutTime;
	double _pageLoadStopTime;
	PageLoadTestStatistics* _pageLoadStatistics;
	PageLoadTest* _pageLoadTest;
	double _lastLoadCommittedTime;
	char _goingBackAfterQuickStop;
	char _clearVisitedLinkStyleAfterQuickStop;
	char _showingReader;
	char _shouldRestoreReader;
	int _readerViewTopScrollOffset;
	int _externalAppRedirectState;
	NSDictionary* _initialArticleScrollDictionaryForCloudTab;
	WBSHistoryVisit* _lastVisit;
	SafariWebView* _readerWebView;
	unsigned _progressAnimationSuppressedCount;
	char _EVOrganizationNameIsValid;
	NSString* _EVOrganizationName;
	NSUserActivity* _continuityActivity;
	SafariWebView* _webView;
	NSError* _lastLoadError;
	_SFURLSpoofingMitigator* _URLSpoofingMitigator;
	_WKSessionState* _savedSessionState;
	_WKRemoteObjectInterface* _siteSpecificSearchEventListenerInterface;
	_WKRemoteObjectInterface* _appBannerMetaTagContentObserverInterface;
	SafariSharingExtensionController* _sharingExtensionController;
	QuickLookDocumentWriter* _quickLookDocumentWriter;
	WBUInjectedJavaScriptController* _activityJSController;
	WBUWebClipMetadataFetcher* _webClipMetadataFetcher;
	char _processingUserGesture;
	NSMutableArray* _fallbackURLs;
	NSString* _findString;
	SafariWebView* _findingInWebView;
	FindOnPageCompletionProvider* _findCompletionProvider;
	unsigned _numberOfFindMatches;
	int _highlightedMatchIndex;
	WBUFormAutoFillController* _autoFillController;
	_WKRemoteObjectInterface* _requestDesktopSiteUIProcessPlugInListenerInterface;
	id<RequestDesktopSiteWebProcessPlugInListener> _requestDesktopSiteWebProcessPlugInListener;
	NSMutableSet* _domainsNeedingDesktopUserAgent;
	_SFFluidProgressView* _progressView;
	_SFNavigationBarItem* _navigationBarItem;
	char _displayingStandaloneImage;
	char _displayingStandaloneMedia;
	char _quickLookDocumentCheckCompleted;
	char _privateBrowsingEnabled;
	char _restoringSessionState;
	char _didFirstPaint;
	_SFJavaScriptDialogManager* _javaScriptDialogManager;
	char _shouldResetJavaScriptDialogManagerOnNextCommit;
	NSURL* _fileDownloadSourceURL;
	WebBookmark* _bookmarkForIconFetching;
	WKBackForwardListItem* _backForwardListItemForCurrentAppLinkBannerCheck;
	StoreBanner* _storeBannerPendingAppLinkBannerCheck;
	PinnableBanner* _appBannerPendingFirstPaint;
	char _sourceApplicationIsValid;
	char siteCustomIconPrecomposed;
	char _shouldRevealAppLinkBannerForNextCommit;
	char _storeBannersAreDisabled;
	char _showingErrorPage;
	char _suppressingProgressAnimationForNavigationGesture;
	char _wantsReaderWhenActivated;
	char _hibernatedDueToMemoryWarning;
	char _showingContinuous;
	char _blankDocument;
	char _preparingForNewUserActivity;
	char _didFinishDocumentLoad;
	char _didFirstLayout;
	char _didFirstVisuallyNonEmptyLayout;
	char _downloadedFileTypeIsQuickLookDocument;
	_WKDownload* _fileDownload;
	NSString* _fileDownloadPath;
	UIImage* siteCustomIcon;
	_SFDownloadController* _downloadController;
	PinnableBanner* _appBanner;
	NSString* _sourceApplicationBundleIdentifierForNextCommit;
	TabOverviewItem* _tabOverviewItem;
	TiltedTabItem* _tiltedTabItem;
	WebBookmark* _readingListBookmark;
	unsigned _lastRenderTreeSize;
	WBSAutomaticReadingListItem* _automaticReadingListItem;
	NSURL* _webFeedURL;
	NSURL* _URLFromExternalApplication;
	_SFPageLoadErrorController* _pageLoadErrorController;
	_SFSafeBrowsingController* _safeBrowsingController;
	NSURL* _tabReuseURL;
	NSUUID* _UUID;
	LinkPreviewViewController* _previewViewController;
	CGPoint _scrollPoint;
	double _lastViewedTime;

}

@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,retain) _SFDownloadController * downloadController;                                            //@synthesize downloadController=_downloadController - In the implementation block
@property (nonatomic,retain) _WKDownload * fileDownload;                                                            //@synthesize fileDownload=_fileDownload - In the implementation block
@property (nonatomic,retain) NSString * fileDownloadPath;                                                           //@synthesize fileDownloadPath=_fileDownloadPath - In the implementation block
@property (nonatomic,retain) QuickLookDocument * quickLookDocument;                                                 //@synthesize quickLookDocument=_quickLookDocument - In the implementation block
@property (assign,nonatomic) char wasOpenedFromLink;                                                                //@synthesize wasOpenedFromLink=_wasOpenedFromLink - In the implementation block
@property (nonatomic,retain,readonly) QuickLookDocumentController * quickLookDocumentController;                    //@synthesize quickLookDocumentController=_quickLookDocumentController - In the implementation block
@property (assign,getter=isShowingReader,nonatomic) char showingReader;                                             //@synthesize showingReader=_showingReader - In the implementation block
@property (assign,nonatomic) char shouldRestoreReader;                                                              //@synthesize shouldRestoreReader=_shouldRestoreReader - In the implementation block
@property (assign,nonatomic) int readerViewTopScrollOffset;                                                         //@synthesize readerViewTopScrollOffset=_readerViewTopScrollOffset - In the implementation block
@property (nonatomic,retain) PinnableBanner * appBanner;                                                            //@synthesize appBanner=_appBanner - In the implementation block
@property (assign,nonatomic) char shouldRevealAppLinkBannerForNextCommit;                                           //@synthesize shouldRevealAppLinkBannerForNextCommit=_shouldRevealAppLinkBannerForNextCommit - In the implementation block
@property (nonatomic,copy) NSString * sourceApplicationBundleIdentifierForNextCommit;                               //@synthesize sourceApplicationBundleIdentifierForNextCommit=_sourceApplicationBundleIdentifierForNextCommit - In the implementation block
@property (assign,nonatomic) char storeBannersAreDisabled;                                                          //@synthesize storeBannersAreDisabled=_storeBannersAreDisabled - In the implementation block
@property (assign,nonatomic) int externalAppRedirectState;                                                          //@synthesize externalAppRedirectState=_externalAppRedirectState - In the implementation block
@property (nonatomic,retain) UIImage * siteCustomIcon; 
@property (assign,nonatomic) char siteCustomIconPrecomposed; 
@property (assign,nonatomic) char showingErrorPage;                                                                 //@synthesize showingErrorPage=_showingErrorPage - In the implementation block
@property (nonatomic,readonly) TabOverviewItem * tabOverviewItem;                                                   //@synthesize tabOverviewItem=_tabOverviewItem - In the implementation block
@property (nonatomic,readonly) TiltedTabItem * tiltedTabItem;                                                       //@synthesize tiltedTabItem=_tiltedTabItem - In the implementation block
@property (nonatomic,retain) WebBookmark * readingListBookmark;                                                     //@synthesize readingListBookmark=_readingListBookmark - In the implementation block
@property (assign,nonatomic) char suppressingProgressAnimationForNavigationGesture;                                 //@synthesize suppressingProgressAnimationForNavigationGesture=_suppressingProgressAnimationForNavigationGesture - In the implementation block
@property (assign,nonatomic) char wantsReaderWhenActivated;                                                         //@synthesize wantsReaderWhenActivated=_wantsReaderWhenActivated - In the implementation block
@property (nonatomic,readonly) char privateBrowsingEnabled;                                                         //@synthesize privateBrowsingEnabled=_privateBrowsingEnabled - In the implementation block
@property (nonatomic,readonly) NSString * currentHistoryItemOriginalURLString; 
@property (assign,getter=isDisplayingStandaloneImage,nonatomic) char displayingStandaloneImage;                     //@synthesize displayingStandaloneImage=_displayingStandaloneImage - In the implementation block
@property (assign,getter=isDisplayingStandaloneMedia,nonatomic) char displayingStandaloneMedia;                     //@synthesize displayingStandaloneMedia=_displayingStandaloneMedia - In the implementation block
@property (assign,getter=wasHibernatedDueToMemoryWarning,nonatomic) char hibernatedDueToMemoryWarning;              //@synthesize hibernatedDueToMemoryWarning=_hibernatedDueToMemoryWarning - In the implementation block
@property (assign,getter=isRestoringSessionState,nonatomic) char restoringSessionState;                             //@synthesize restoringSessionState=_restoringSessionState - In the implementation block
@property (assign,nonatomic) unsigned lastRenderTreeSize;                                                           //@synthesize lastRenderTreeSize=_lastRenderTreeSize - In the implementation block
@property (nonatomic,retain) PageLoadTestStatistics * pageLoadStatistics;                                           //@synthesize pageLoadStatistics=_pageLoadStatistics - In the implementation block
@property (nonatomic,readonly) WBSFluidProgressState * progressState;                                               //@synthesize fluidProgressState=_fluidProgressState - In the implementation block
@property (nonatomic,retain,readonly) WBSAutomaticReadingListItem * automaticReadingListItem;                       //@synthesize automaticReadingListItem=_automaticReadingListItem - In the implementation block
@property (assign,getter=isShowingContinuous,nonatomic) char showingContinuous;                                     //@synthesize showingContinuous=_showingContinuous - In the implementation block
@property (nonatomic,retain) NSURL * webFeedURL;                                                                    //@synthesize webFeedURL=_webFeedURL - In the implementation block
@property (nonatomic,readonly) SafariSharingExtensionController * sharingExtensionController; 
@property (nonatomic,readonly) WBUInjectedJavaScriptController * activityJSController; 
@property (nonatomic,retain) NSURL * URLFromExternalApplication;                                                    //@synthesize URLFromExternalApplication=_URLFromExternalApplication - In the implementation block
@property (nonatomic,readonly) WBUWebClipMetadataFetcher * webClipMetadataFetcher; 
@property (nonatomic,readonly) _SFPageLoadErrorController * pageLoadErrorController;                                //@synthesize pageLoadErrorController=_pageLoadErrorController - In the implementation block
@property (nonatomic,readonly) SafariWebView * webView;                                                             //@synthesize webView=_webView - In the implementation block
@property (nonatomic,readonly) UIView * frontView; 
@property (assign,getter=isBlankDocument,nonatomic) char blankDocument;                                             //@synthesize blankDocument=_blankDocument - In the implementation block
@property (assign,getter=isPreparingForNewUserActivity,nonatomic) char preparingForNewUserActivity;                 //@synthesize preparingForNewUserActivity=_preparingForNewUserActivity - In the implementation block
@property (nonatomic,readonly) TabBarItem * tabBarItem;                                                             //@synthesize tabBarItem=_tabBarItem - In the implementation block
@property (nonatomic,readonly) _SFNavigationBarItem * navigationBarItem; 
@property (nonatomic,readonly) _SFSafeBrowsingController * safeBrowsingController;                                  //@synthesize safeBrowsingController=_safeBrowsingController - In the implementation block
@property (getter=isAlive,nonatomic,readonly) char alive; 
@property (nonatomic,readonly) _WKSessionState * sessionState; 
@property (assign,nonatomic) CGPoint scrollPoint;                                                                   //@synthesize scrollPoint=_scrollPoint - In the implementation block
@property (nonatomic,copy) NSURL * tabReuseURL;                                                                     //@synthesize tabReuseURL=_tabReuseURL - In the implementation block
@property (nonatomic,copy) NSUUID * UUID;                                                                           //@synthesize UUID=_UUID - In the implementation block
@property (nonatomic,readonly) char loadedUsingDesktopUserAgent; 
@property (assign,nonatomic) double lastViewedTime;                                                                 //@synthesize lastViewedTime=_lastViewedTime - In the implementation block
@property (nonatomic,retain) WBSHistoryVisit * lastVisit;                                                           //@synthesize lastVisit=_lastVisit - In the implementation block
@property (nonatomic,copy) NSString * customUserAgent; 
@property (nonatomic,readonly) NSString * findOnPageSearchText;                                                     //@synthesize findString=_findString - In the implementation block
@property (nonatomic,readonly) char didFinishDocumentLoad;                                                          //@synthesize didFinishDocumentLoad=_didFinishDocumentLoad - In the implementation block
@property (nonatomic,readonly) char didFirstLayout;                                                                 //@synthesize didFirstLayout=_didFirstLayout - In the implementation block
@property (nonatomic,readonly) char didFirstVisuallyNonEmptyLayout;                                                 //@synthesize didFirstVisuallyNonEmptyLayout=_didFirstVisuallyNonEmptyLayout - In the implementation block
@property (nonatomic,retain) LinkPreviewViewController * previewViewController;                                     //@synthesize previewViewController=_previewViewController - In the implementation block
@property (assign,nonatomic) char downloadedFileTypeIsQuickLookDocument;                                            //@synthesize downloadedFileTypeIsQuickLookDocument=_downloadedFileTypeIsQuickLookDocument - In the implementation block
+(id)tabDocumentForWKWebView:(id)arg1 ;
-(id)URLForSharing;
-(id)titleForSharing;
-(id)readerContext;
-(SafariSharingExtensionController *)sharingExtensionController;
-(void)preparePrintInteractionController:(id)arg1 withPageRenderer:(id)arg2 frame:(id)arg3 printFooter:(char)arg4 ;
-(char)isPDFDocument;
-(void)clearReaderView;
-(void)invalidateSourceApplication;
-(void)setSiteCustomIcon:(UIImage *)arg1 ;
-(void)didFailToContinueUserActivity;
-(id)loadURL:(id)arg1 userDriven:(char)arg2 ;
-(id)loadCloudTab:(id)arg1 ;
-(void)updateInternalPreferences;
-(void)doneWaitingToContinueUserActivity;
-(void)prepareToContinueUserActivity;
-(void)updateTabTitle;
-(char)isBlankDocument;
-(id)initWithBrowserController:(id)arg1 ;
-(void)setBlankDocument:(char)arg1 ;
-(void)setPreparingForNewUserActivity:(char)arg1 ;
-(_SFNavigationBarItem *)navigationBarItem;
-(double)lastPageVisualLayoutTime;
-(double)lastPageLoadTime;
-(void)setPageLoadStatistics:(PageLoadTestStatistics *)arg1 ;
-(void)loadTestURL:(id)arg1 withCallback:(/*^block*/id)arg2 ;
-(id)_backForwardList;
-(char)canSubscribeToWebFeed;
-(id)titleForNewBookmark;
-(unsigned)readingListBookmarkID;
-(WBSAutomaticReadingListItem *)automaticReadingListItem;
-(void)clearBrowserController;
-(_SFPageLoadErrorController *)pageLoadErrorController;
-(PinnableBanner *)appBanner;
-(char)hasQuickLookContent;
-(char)isPreparingForNewUserActivity;
-(void)endSuppressingProgressAnimation;
-(void)beginSuppressingProgressAnimation;
-(char)isProcessingUserGesture;
-(void)becomeFirstResponderWithSelectionMovingForward:(char)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)setURLFromExternalApplication:(NSURL *)arg1 ;
-(void)setTabReuseURL:(NSURL *)arg1 ;
-(void)hibernate;
-(void)setShouldRestoreReader:(char)arg1 ;
-(void)restoreSessionState:(id)arg1 andNavigate:(char)arg2 ;
-(void)setShouldRevealAppLinkBannerForNextCommit:(char)arg1 ;
-(void)setSourceApplicationBundleIdentifierForNextCommit:(NSString *)arg1 ;
-(char)showingErrorPage;
-(_SFSafeBrowsingController *)safeBrowsingController;
-(QuickLookDocument *)quickLookDocument;
-(QuickLookDocumentController *)quickLookDocumentController;
-(void)setUserHasManipulatedVisibleRegion:(char)arg1 ;
-(void)setSuppressingProgressAnimationForNavigationGesture:(char)arg1 ;
-(id)loadRequest:(id)arg1 userDriven:(char)arg2 ;
-(char)quickLookDocumentIsReady;
-(void)clearBackForwardList;
-(void)setAppBanner:(PinnableBanner *)arg1 ;
-(void)setClosed:(char)arg1 userDriven:(char)arg2 ;
-(void)willClose;
-(id)initWithTitle:(id)arg1 URL:(id)arg2 UUID:(id)arg3 privateBrowsingEnabled:(char)arg4 hibernated:(char)arg5 bookmark:(id)arg6 browserController:(id)arg7 relatedWebView:(id)arg8 ;
-(void)unhibernateWithRelatedWebView:(id)arg1 ;
-(void)animateProgressForCompletedDocument;
-(void)dismissFindOnPage;
-(void)createBrowserReaderViewIfNeeded;
-(void)setShowingReader:(char)arg1 ;
-(void)setReaderViewTopScrollOffset:(int)arg1 ;
-(int)readerViewTopScrollOffset;
-(char)hasDoneReaderDetection;
-(char)addReadingListBookmarkWithBlock:(/*^block*/id)arg1 ;
-(char)isHibernated;
-(void)reinsertQuickLookDocumentView;
-(void)freezeForNavigationGesture;
-(char)mustShowBarsForBackForwardListItem:(id)arg1 ;
-(void)unfreezeAfterNavigationGesture:(char)arg1 ;
-(void)performAutoFillAction;
-(void)reloadWithoutContentBlockers;
-(void)subscribeToWebFeed;
-(void)prepareFindOnPageWithString:(id)arg1 ;
-(void)findOnPageCompletionProvider:(id)arg1 setStringToComplete:(id)arg2 ;
-(void)setDownloadedFileTypeIsQuickLookDocument:(char)arg1 ;
-(void)_closeTabDocumentAnimated:(char)arg1 ;
-(void)_showProfileInstallAlert;
-(void)readerContentIsReadyForDisplay;
-(void)endSuppressingProgressAnimationAnimated:(char)arg1 ;
-(char)isDisplayingStandaloneMedia;
-(id)backListControllerWithLimit:(int)arg1 ;
-(id)forwardListControllerWithLimit:(int)arg1 ;
-(id)loadURL:(id)arg1 fromBookmark:(id)arg2 ;
-(id)loadAutomaticReadingListItem:(id)arg1 ;
-(NSURL *)webFeedURL;
-(NSString *)findOnPageSearchText;
-(id)dataForDisplayedPDF;
-(id)suggestedFilenameForDisplayedPDF;
-(void)setLastViewedTime:(double)arg1 ;
-(void)updateContinuityActivity;
-(char)shouldRestoreReader;
-(char)shouldShowReaderOnActivate;
-(char)loadedUsingDesktopUserAgent;
-(void)requestDesktopSiteWithURL:(id)arg1 ;
-(void)setWasOpenedFromLink:(char)arg1 ;
-(void)setAutomaticReadingListItem:(WBSAutomaticReadingListItem *)arg1 ;
-(char)hasMatches;
-(void)getShortMatchLabelText:(id*)arg1 longMatchLabelText:(id*)arg2 ;
-(id)textForToolbarLabel;
-(void)updateSearchText:(id)arg1 ;
-(WBUInjectedJavaScriptController *)activityJSController;
-(void)requestDesktopSite;
-(char)isRestoringSessionState;
-(char)currentPageLoadedFromReadingList;
-(id)customUserVisibleStringForReadingListBookmarkURL:(id)arg1 ;
-(void)loadingController:(id)arg1 willLoadRequest:(id)arg2 userDriven:(char)arg3 ;
-(void)loadingControllerWillStartUserDrivenLoad:(id)arg1 ;
-(id)standaloneImageData;
-(void)setOverlaidAccessoryViewsInset:(CGSize)arg1 ;
-(char)isAlive;
-(WebBookmark *)readingListBookmark;
-(void)setStoreBannersAreDisabled:(char)arg1 ;
-(void)clearBackForwardListKeepingCurrentItem;
-(PageLoadTestStatistics *)pageLoadStatistics;
-(void)didDeactivateReaderWithMode:(unsigned)arg1 ;
-(char)isShowingReadingListArchive;
-(id)readerPageArchiveURL;
-(void)didClickLinkRequestingNewWindowInReaderWithRequest:(id)arg1 ;
-(void)didClickLinkInReaderWithRequest:(id)arg1 ;
-(id)actionsForElement:(id)arg1 defaultActions:(id)arg2 ;
-(char)wasHibernatedDueToMemoryWarning;
-(double)lastViewedTime;
-(TiltedTabItem *)tiltedTabItem;
-(TabOverviewItem *)tabOverviewItem;
-(void)becameActive;
-(void)setNeedsNewTabSnapshot;
-(char)wasOpenedFromLink;
-(NSURL *)tabReuseURL;
-(id)initWithTitle:(id)arg1 URL:(id)arg2 UUID:(id)arg3 privateBrowsingEnabled:(char)arg4 hibernated:(char)arg5 bookmark:(id)arg6 browserController:(id)arg7 ;
-(id)rawTitle;
-(unsigned)lastRenderTreeSize;
-(char)isDisplayingStandaloneImage;
-(void)setReadingListBookmark:(WebBookmark *)arg1 ;
-(void)setDisplayingStandaloneImage:(char)arg1 ;
-(void)setLastRenderTreeSize:(unsigned)arg1 ;
-(void)_destroyDocumentView;
-(void)clearReaderContext;
-(void)invalidateContinuityActivity;
-(void)clearPageLoadStatistics;
-(id)_titleIncludeLoading:(char)arg1 allowURLStringFallback:(char)arg2 allowUntitled:(char)arg3 ;
-(id)_titleIncludeLoading:(char)arg1 allowURLStringFallback:(char)arg2 ;
-(id)_addTitlePrefixToString:(id)arg1 ;
-(id)tabBarTitle;
-(void)_updateNavigationBarItem;
-(void)_searchEngineControllerDidBecomeAvailable:(id)arg1 ;
-(void)_updateStackName;
-(void)_createDocumentViewRelatedTo:(id)arg1 ;
-(id)_initWithTitle:(id)arg1 URL:(id)arg2 UUID:(id)arg3 privateBrowsingEnabled:(char)arg4 bookmark:(id)arg5 browserController:(id)arg6 createDocumentView:(/*^block*/id)arg7 ;
-(void)_setNeedsNewTabSnapshotAndRemoveOld:(char)arg1 ;
-(void)unhibernate;
-(void)setSiteCustomIconPrecomposed:(char)arg1 ;
-(char)shouldActivateReaderWhenAvailable;
-(void)setWebFeedURL:(NSURL *)arg1 ;
-(void)_updateInitialZoomScaleForPPT;
-(void)_showQuickLookDocumentView;
-(void)setQuickLookDocument:(QuickLookDocument *)arg1 ;
-(void)_hideQuickLookDocumentView;
-(void)clearTabReuseURL;
-(void)setQuickLookDocumentFromCurrentBackForwardListItem:(id)arg1 ;
-(id)quickLookDocumentFromCurrentBackForwardListItem;
-(void)snapshotForWebClipIcon:(/*^block*/id)arg1 ;
-(id)_loadURLInternal:(id)arg1 userDriven:(char)arg2 ;
-(id)loadWebClip:(id)arg1 userDriven:(char)arg2 ;
-(void)restoreScrollPositionWithCloudTab:(id)arg1 ;
-(void)clearReaderScrollInformation;
-(void)_updateShowingContinuous;
-(void)setShowingContinuous:(char)arg1 ;
-(id)_backListWithLimit:(unsigned)arg1 ;
-(id)_forwardListWithLimit:(unsigned)arg1 ;
-(void)setExternalAppRedirectState:(int)arg1 ;
-(void)_redirectToExternalNavigationResult:(id)arg1 fromOriginalRequest:(id)arg2 promptPolicy:(int)arg3 isMainFrame:(char)arg4 ;
-(int)externalAppRedirectState;
-(void)_didRedirectToAnotherApp:(id)arg1 userCancelled:(char)arg2 ;
-(char)_shouldPromptUserForExternalNavigationResult:(id)arg1 policy:(int)arg2 ;
-(void)_queueAlertForRedirectToExternalNavigationResult:(id)arg1 fromOriginalRequest:(id)arg2 isMainFrame:(char)arg3 promptPolicy:(int)arg4 ;
-(void)_clearNavigationSource;
-(void)_forceStopLoading;
-(void)finishSimulatedClick;
-(char)_shouldAskAboutInsecureFormSubmissionForAction:(id)arg1 andURL:(id)arg2 ;
-(id)_readingListArchiveNextPageLinkForRequest:(id)arg1 ;
-(id)_resultOfLoadingRequest:(id)arg1 inMainFrame:(char)arg2 ;
-(char)_navigationIsRedirectToAppStore:(id)arg1 ;
-(void)_addNoFeedAppSupportAlert;
-(char)isSimulatingClick;
-(void)_loadStartedDuringSimulatedClickForURL:(id)arg1 ;
-(void)_cancelAntiPhishingCheckAndInvalidateSafeBrowsingObserver;
-(void)_createDocumentViewWithConfiguration:(id)arg1 ;
-(void)_loadingControllerEstimatedProgressChangedTo:(double)arg1 ;
-(void)_loadingControllerDidStartLoading;
-(void)_loadingControllerDidStopLoadingWithError:(id)arg1 ;
-(void)_startedLoadingResources;
-(void)_stoppedLoadingResources;
-(void)_updateFallbackURLsForUserTypedAddress:(id)arg1 ;
-(id)_loadNextFallbackURLWithWebClip:(id)arg1 ;
-(void)didMarkURLAsNeedingDesktopUserAgent:(id)arg1 ;
-(NSString *)currentHistoryItemOriginalURLString;
-(id)_webViewConfiguration;
-(void)didAutoDetectSiteSpecificSearchProviderWithOriginatingURL:(id)arg1 searchURLTemplate:(id)arg2 ;
-(void)didFindAppBannerWithContent:(id)arg1 ;
-(void)_fetchIconURLsWithCompletion:(/*^block*/id)arg1 ;
-(void)_setAppBannerWhenPainted:(id)arg1 ;
-(void)_decidePolicyForAction:(id)arg1 request:(id)arg2 inMainFrame:(char)arg3 forNewWindow:(char)arg4 currentURLIsFileURL:(char)arg5 decisionHandler:(/*^block*/id)arg6 ;
-(void)_decidePolicyForResponse:(id)arg1 request:(id)arg2 inMainFrame:(char)arg3 decisionHandler:(/*^block*/id)arg4 ;
-(void)_notifyPageLoadDidFinishIfNecessary;
-(void)_webViewDidCommitLoadForMainFrame;
-(void)_clearAppBanner;
-(void)_checkForAppLink;
-(id)_initWithBrowserController:(id)arg1 configuration:(id)arg2 ;
-(id)tabDocumentForPreviewURL:(id)arg1 relatedToWebView:(id)arg2 ;
-(id)_actionsForElement:(id)arg1 defaultActions:(id)arg2 previewViewController:(id)arg3 ;
-(void)_willCommitPreviewViewController:(id)arg1 ;
-(WBUWebClipMetadataFetcher *)webClipMetadataFetcher;
-(void)_updateSnapshotForWebClip:(id)arg1 ;
-(void)setHibernatedDueToMemoryWarning:(char)arg1 ;
-(void)setLoading;
-(CGRect)_convertRectFromDocumentToWebView:(CGRect)arg1 ;
-(void)_animateElement:(id)arg1 toToolbarButton:(int)arg2 ;
-(id)resultOfLoadingURL:(id)arg1 ;
-(id)_openInNewPageActionForElement:(id)arg1 previewViewController:(id)arg2 ;
-(id)_addToReadingListActionForElement:(id)arg1 withURL:(id)arg2 ;
-(void)_loadingControllerWillLoadRequest:(id)arg1 userDriven:(char)arg2 ;
-(void)_setFindingInWebViewIfNecessary;
-(char)didFirstLayout;
-(char)didFinishDocumentLoad;
-(void)dismissStoreBanner:(id)arg1 ;
-(void)setStoreBanner:(id)arg1 isPinned:(char)arg2 ;
-(char)loadWasUserDriven;
-(char)supportsFindOnPage;
-(void)beginSimulatedClickForURL:(id)arg1 ;
-(void)_setRenderTreeSizeThresholdForReset:(unsigned)arg1 ;
-(void)saveWebArchiveToPath:(id)arg1 completion:(/*^block*/id)arg2 ;
-(_WKDownload *)fileDownload;
-(void)setFileDownload:(_WKDownload *)arg1 ;
-(UIImage *)siteCustomIcon;
-(char)siteCustomIconPrecomposed;
-(_SFDownloadController *)downloadController;
-(void)setDownloadController:(_SFDownloadController *)arg1 ;
-(char)shouldRevealAppLinkBannerForNextCommit;
-(NSString *)sourceApplicationBundleIdentifierForNextCommit;
-(char)storeBannersAreDisabled;
-(void)setShowingErrorPage:(char)arg1 ;
-(char)suppressingProgressAnimationForNavigationGesture;
-(char)wantsReaderWhenActivated;
-(void)setWantsReaderWhenActivated:(char)arg1 ;
-(void)setDisplayingStandaloneMedia:(char)arg1 ;
-(void)setRestoringSessionState:(char)arg1 ;
-(char)isShowingContinuous;
-(NSURL *)URLFromExternalApplication;
-(char)downloadedFileTypeIsQuickLookDocument;
-(void)collectReadingListItemInfo;
-(void)didActivateReader;
-(void)updateReadingListItemPreviewText:(id)arg1 ;
-(LinkPreviewViewController *)previewViewController;
-(void)setPreviewViewController:(LinkPreviewViewController *)arg1 ;
-(id)readerWebView;
-(void)pageLoadErrorControllerDidShowAlert:(id)arg1 ;
-(void)pageLoadErrorController:(id)arg1 setAllowsSpecificHTTPSCertificate:(id)arg2 forHost:(id)arg3 ;
-(void)pageLoadErrorControllerWillShowPrintingDuringLoadAlert:(id)arg1 action:(int)arg2 ;
-(void)pageLoadErrorController:(id)arg1 didChooseOnlyAvailableIdentityForAuthenticationChallenge:(id)arg2 ;
-(void)pageLoadErrorControllerDidShowErrorPage:(id)arg1 ;
-(char)pageLoadErrorControllerShouldHandleCertificateError:(id)arg1 ;
-(void)pageLoadErrorController:(id)arg1 loadFailedRequestAfterError:(id)arg2 ;
-(void)safeBrowsingControllerDidShowSecurityWarningPage:(id)arg1 ;
-(void)safeBrowsingController:(id)arg1 didIgnoreWarningWithURL:(id)arg2 ;
-(void)safeBrowsingControllerGoBack:(id)arg1 ;
-(void)cancelCheckForFraudulentWebsites;
-(void)startCheckingFraudulentWebSitesWithURL:(id)arg1 ;
-(void)didDetermineReaderAvailability:(char)arg1 ;
-(char)isReaderAvailable;
-(char)formAutoFillControllerCanPrefillForm:(id)arg1 ;
-(id)formAutoFillControllerURLForFormAutoFill:(id)arg1 ;
-(char)formAutoFillControllerShouldDisableAutoFill:(id)arg1 ;
-(id)_EVOrganizationName;
-(void)_performSafeBrowsingCheckForURL:(id)arg1 ;
-(void)_invalidateEVOrganizationName;
-(void)_showGenericDownloadAlert;
-(void)next;
-(void)previous;
-(void)setDelegate:(id)arg1 ;
-(void)dealloc;
-(NSString *)description;
-(void)reload;
-(id)title;
-(char)_isSecure;
-(NSUUID *)UUID;
-(TabBarItem *)tabBarItem;
-(void)setActive:(char)arg1 ;
-(SafariWebView *)webView;
-(void)setCustomUserAgent:(NSString *)arg1 ;
-(id)URL;
-(void)done;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(unsigned)_renderTreeSize;
-(char)didFirstVisuallyNonEmptyLayout;
-(id)_webView:(id)arg1 previewViewControllerForURL:(id)arg2 ;
-(char)isLoading;
-(id)pdfView;
-(char)canGoBack;
-(char)canGoForward;
-(NSString *)customUserAgent;
-(void)stopLoading;
-(void)goBack;
-(void)goForward;
-(id)URLString;
-(id)loadUserTypedAddress:(id)arg1 ;
-(double)estimatedProgress;
-(UIView *)frontView;
-(void)_webView:(id)arg1 logDiagnosticMessage:(id)arg2 description:(id)arg3 ;
-(void)_webView:(id)arg1 logDiagnosticMessageWithResult:(id)arg2 description:(id)arg3 result:(int)arg4 ;
-(void)_webView:(id)arg1 logDiagnosticMessageWithValue:(id)arg2 description:(id)arg3 value:(id)arg4 ;
-(void)_webView:(id)arg1 didCountMatches:(unsigned)arg2 forString:(id)arg3 ;
-(void)_webView:(id)arg1 didFindMatches:(unsigned)arg2 forString:(id)arg3 withMatchIndex:(int)arg4 ;
-(void)_webView:(id)arg1 didFailToFindString:(id)arg2 ;
-(void)_webView:(id)arg1 navigation:(id)arg2 didFailProvisionalLoadInSubframe:(id)arg3 withError:(id)arg4 ;
-(void)_webView:(id)arg1 navigationDidFinishDocumentLoad:(id)arg2 ;
-(void)_webView:(id)arg1 navigation:(id)arg2 didSameDocumentNavigation:(int)arg3 ;
-(void)_webView:(id)arg1 renderingProgressDidChange:(unsigned)arg2 ;
-(id)_webCryptoMasterKeyForWebView:(id)arg1 ;
-(void)_webViewDidBeginNavigationGesture:(id)arg1 ;
-(void)_webViewWillEndNavigationGesture:(id)arg1 withNavigationToBackForwardListItem:(id)arg2 ;
-(void)_webViewDidEndNavigationGesture:(id)arg1 withNavigationToBackForwardListItem:(id)arg2 ;
-(void)_webView:(id)arg1 willSnapshotBackForwardListItem:(id)arg2 ;
-(void)_webView:(id)arg1 didStartLoadForQuickLookDocumentInMainFrameWithFileName:(id)arg2 uti:(id)arg3 ;
-(void)_webView:(id)arg1 didFinishLoadForQuickLookDocumentInMainFrame:(id)arg2 ;
-(id)webView:(id)arg1 createWebViewWithConfiguration:(id)arg2 forNavigationAction:(id)arg3 windowFeatures:(id)arg4 ;
-(void)webView:(id)arg1 runJavaScriptAlertPanelWithMessage:(id)arg2 initiatedByFrame:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)webView:(id)arg1 runJavaScriptConfirmPanelWithMessage:(id)arg2 initiatedByFrame:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)webView:(id)arg1 runJavaScriptTextInputPanelWithPrompt:(id)arg2 defaultText:(id)arg3 initiatedByFrame:(id)arg4 completionHandler:(/*^block*/id)arg5 ;
-(void)_webView:(id)arg1 decideDatabaseQuotaForSecurityOrigin:(id)arg2 currentQuota:(unsigned long long)arg3 currentOriginUsage:(unsigned long long)arg4 currentDatabaseUsage:(unsigned long long)arg5 expectedUsage:(unsigned long long)arg6 decisionHandler:(/*^block*/id)arg7 ;
-(void)_webView:(id)arg1 decideWebApplicationCacheQuotaForSecurityOrigin:(id)arg2 currentQuota:(unsigned long long)arg3 totalBytesNeeded:(unsigned long long)arg4 decisionHandler:(/*^block*/id)arg5 ;
-(void)_webView:(id)arg1 printFrame:(id)arg2 ;
-(void)_webViewClose:(id)arg1 ;
-(void)_webViewFullscreenMayReturnToInline:(id)arg1 ;
-(void)_webViewDidEnterFullscreen:(id)arg1 ;
-(void)_webViewDidExitFullscreen:(id)arg1 ;
-(char)_webView:(id)arg1 shouldIncludeAppLinkActionsForElement:(id)arg2 ;
-(id)_webView:(id)arg1 actionsForElement:(id)arg2 defaultActions:(id)arg3 ;
-(void)_webView:(id)arg1 didNotHandleTapAsClickAtPoint:(CGPoint)arg2 ;
-(void)_webView:(id)arg1 mediaDocumentNaturalSizeChanged:(CGSize)arg2 ;
-(void)goToBackForwardListItem:(id)arg1 ;
-(void)_webView:(id)arg1 accessoryViewCustomButtonTappedInFormInputSession:(id)arg2 ;
-(void)_webView:(id)arg1 didStartInputSession:(id)arg2 ;
-(void)_webView:(id)arg1 commitPreviewedImageWithURL:(id)arg2 ;
-(id)_webView:(id)arg1 previewViewControllerForAnimatedImageAtURL:(id)arg2 defaultActions:(id)arg3 elementInfo:(id)arg4 imageSize:(CGSize)arg5 ;
-(id)_webView:(id)arg1 previewViewControllerForURL:(id)arg2 defaultActions:(id)arg3 elementInfo:(id)arg4 ;
-(void)_webView:(id)arg1 willPreviewImageWithURL:(id)arg2 ;
-(void)_webView:(id)arg1 commitPreviewedViewController:(id)arg2 ;
-(void)_webView:(id)arg1 didDismissPreviewViewController:(id)arg2 ;
-(UIEdgeInsets)_webView:(id)arg1 finalObscuredInsetsForScrollView:(id)arg2 withVelocity:(CGPoint)arg3 targetContentOffset:(inout CGPoint*)arg4 ;
-(void)_webView:(id)arg1 willSubmitFormValues:(id)arg2 userObject:(id)arg3 submissionHandler:(/*^block*/id)arg4 ;
-(NSString *)fileDownloadPath;
-(void)setFileDownloadPath:(NSString *)arg1 ;
-(void)setClosed:(char)arg1 ;
-(char)isClosed;
-(_WKSessionState *)sessionState;
-(void)setUUID:(NSUUID *)arg1 ;
-(char)isShowingReader;
-(WBSFluidProgressState *)progressState;
-(id)expectedOrCurrentURL;
-(id)currentFluidProgressStateSource;
-(void)clearFluidProgressState;
-(char)createFluidProgressState;
-(char)hasFailedURL;
-(void)fluidProgressRocketAnimationDidComplete;
-(id)committedURL;
-(WBSHistoryVisit *)lastVisit;
-(void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 decisionHandler:(/*^block*/id)arg3 ;
-(void)webView:(id)arg1 decidePolicyForNavigationResponse:(id)arg2 decisionHandler:(/*^block*/id)arg3 ;
-(void)webView:(id)arg1 didStartProvisionalNavigation:(id)arg2 ;
-(void)webView:(id)arg1 didReceiveServerRedirectForProvisionalNavigation:(id)arg2 ;
-(void)webView:(id)arg1 didFailProvisionalNavigation:(id)arg2 withError:(id)arg3 ;
-(void)webView:(id)arg1 didCommitNavigation:(id)arg2 ;
-(void)webView:(id)arg1 didFinishNavigation:(id)arg2 ;
-(void)webView:(id)arg1 didFailNavigation:(id)arg2 withError:(id)arg3 ;
-(void)webView:(id)arg1 didReceiveAuthenticationChallenge:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)_webViewWebProcessDidCrash:(id)arg1 ;
-(void)loadAlternateHTMLString:(id)arg1 baseURL:(id)arg2 forUnreachableURL:(id)arg3 ;
-(CGPoint)scrollPoint;
-(void)setScrollPoint:(CGPoint)arg1 ;
-(char)privateBrowsingEnabled;
-(void)setAllowsRemoteInspection:(char)arg1 ;
-(SecTrustRef)_serverTrust;
-(void)setLastVisit:(WBSHistoryVisit *)arg1 ;
@end

