/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 6, 2015 at 5:12:01 PM Japan Standard Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /Applications/Diagnostics.app/Diagnostics
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

typedef struct __MTDevice* MTDeviceRef;

typedef struct {
	/*function pointer*/void* sessionEvent;
} SCD_Struct_OS1;

typedef struct {
	/*function pointer*/void* statusEvent;
	/*function pointer*/void* discoveryEvent;
} SCD_Struct_OS2;

typedef struct {
	/*function pointer*/void* statusEvent;
	/*function pointer*/void* leTestStopped;
	/*function pointer*/void* afhMapChanged;
} SCD_Struct_OS3;

typedef struct BTSessionImpl* BTSessionImplRef;

typedef struct BTLocalDeviceImpl* BTLocalDeviceImplRef;

typedef struct BTDiscoveryAgentImpl* BTDiscoveryAgentImplRef;

typedef struct __IOHIDServiceClient* IOHIDServiceClientRef;

typedef struct __CFString* CFStringRef;

typedef struct __IOHIDEventSystemClient* IOHIDEventSystemClientRef;

typedef struct __CFArray* CFArrayRef;

typedef struct OpaqueFigCaptureDevice* OpaqueFigCaptureDeviceRef;

typedef struct opaqueCMBufferQueue* opaqueCMBufferQueueRef;

typedef struct opaqueCMBufferQueueTriggerToken* opaqueCMBufferQueueTriggerTokenRef;

typedef struct _CAImageQueue* CAImageQueueRef;

typedef struct {
	char* field1;
	char* field2;
	char* field3;
	int field4;
	char* field5;
} SCD_Struct_OS15;

typedef struct opaqueCMSampleBuffer* opaqueCMSampleBufferRef;

typedef struct OpaqueAUGraph* OpaqueAUGraphRef;

typedef struct AURenderCallbackStruct {
	/*function pointer*/void* inputProc;
	void inputProcRefCon;
} AURenderCallbackStruct;

typedef struct OpaqueAudioFileID* OpaqueAudioFileIDRef;

typedef struct OpaqueAudioComponentInstance* OpaqueAudioComponentInstanceRef;

typedef struct OpaqueExtAudioFile* OpaqueExtAudioFileRef;

typedef struct CGPoint {
	float x;
	float y;
} CGPoint;

typedef struct _compressed_pair<float **, std::__1::allocator<float *> > {
	float __first_;
} compressed_pair<float **, std::__1::allocator<float *> >;

typedef struct _compressed_pair<unsigned long, std::__1::allocator<float> > {
	unsigned long __first_;
} compressed_pair<unsigned long, std::__1::allocator<float> >;

typedef struct _split_buffer<float *, std::__1::allocator<float *> > {
	float __first_;
	float __begin_;
	float __end_;
	compressed_pair<float **, std::__1::allocator<float *> > __end_cap_;
} split_buffer<float *, std::__1::allocator<float *> >;

typedef struct deque<float, std::__1::allocator<float> > {
	split_buffer<float *, std::__1::allocator<float *> > __map_;
	unsigned __start_;
	compressed_pair<unsigned long, std::__1::allocator<float> > __size_;
} deque<float, std::__1::allocator<float> >;

typedef struct CLRunningBufferStats<float> {
	/*function pointer*/void* _vptr$CLRunningBufferStats;
	unsigned fSize;
	float fRunningSum;
	float fRunningSumSquared;
	deque<float, std::__1::allocator<float> > fSamples;
} CLRunningBufferStats<float>;

typedef struct CLRunningVector3d<float> {
	/*function pointer*/void* _vptr$CLRunningVector3d;
	unsigned fSize;
	CLRunningBufferStats<float> fRunningX;
	CLRunningBufferStats<float> fRunningY;
	CLRunningBufferStats<float> fRunningZ;
} CLRunningVector3d<float>;

typedef struct __CFRunLoop* CFRunLoopRef;

typedef struct CGSize {
	float width;
	float height;
} CGSize;

typedef struct CGRect {
	CGPoint origin;
	CGSize size;
} CGRect;

typedef struct __IOHIDEvent* IOHIDEventRef;

