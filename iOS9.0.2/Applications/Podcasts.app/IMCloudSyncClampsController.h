/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 6, 2015 at 5:12:55 PM Japan Standard Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /Applications/Podcasts.app/Podcasts
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


@class NSMutableDictionary;

@interface IMCloudSyncClampsController : NSObject {

	NSMutableDictionary* _transactionClamps;
	double _dsidCheckTimestamp;
	double _authenticationNeededTimestamp;
	double _userAcceptedSyncTimestamp;
	double _networkingBlockedUntil;
	double _backOffUntil;
	double _userCancelledSignInBackOffUntil;

}

@property (nonatomic,retain) NSMutableDictionary * transactionClamps;              //@synthesize transactionClamps=_transactionClamps - In the implementation block
@property (assign) double dsidCheckTimestamp;                                      //@synthesize dsidCheckTimestamp=_dsidCheckTimestamp - In the implementation block
@property (assign) double authenticationNeededTimestamp;                           //@synthesize authenticationNeededTimestamp=_authenticationNeededTimestamp - In the implementation block
@property (assign) double userAcceptedSyncTimestamp;                               //@synthesize userAcceptedSyncTimestamp=_userAcceptedSyncTimestamp - In the implementation block
@property (assign) double networkingBlockedUntil;                                  //@synthesize networkingBlockedUntil=_networkingBlockedUntil - In the implementation block
@property (assign) double backOffUntil;                                            //@synthesize backOffUntil=_backOffUntil - In the implementation block
@property (assign) double userCancelledSignInBackOffUntil;                         //@synthesize userCancelledSignInBackOffUntil=_userCancelledSignInBackOffUntil - In the implementation block
-(char)_canScheduleTransactionBasedOnDSIDCheck:(id)arg1 error:(id*)arg2 ;
-(void)clearDSIDCheckTimestamp;
-(void)setDsidCheckTimestamp:(double)arg1 ;
-(double)dsidCheckTimestamp;
-(void)setDSIDCheckTimestamp;
-(void)dealloc;
-(id)init;
-(id)description;
-(void)reset;
-(NSMutableDictionary *)transactionClamps;
-(char)_canScheduleTransactionBasedOfNetworkingBlocked:(id)arg1 error:(id*)arg2 ;
-(char)_canScheduleTransactionBasedOnBackOff:(id)arg1 error:(id*)arg2 ;
-(char)_canScheduleTransactionBasedOnUserCancelledSignIn:(id)arg1 error:(id*)arg2 ;
-(char)_canScheduleTransactionBasedOnType:(id)arg1 error:(id*)arg2 ;
-(void)clearAuthenticationRequest;
-(void)clearBackOff;
-(void)clearNetworkingBlocked;
-(void)clearUserAcceptedSyncTimestamp;
-(void)clearUserCancelledSignIn;
-(id)_keyForTransaction:(id)arg1 ;
-(double)_rightNow;
-(void)setAuthenticationNeededTimestamp:(double)arg1 ;
-(double)authenticationNeededTimestamp;
-(void)setUserAcceptedSyncTimestamp:(double)arg1 ;
-(double)userAcceptedSyncTimestamp;
-(void)setUserCancelledSignInBackOffUntil:(double)arg1 ;
-(void)setBackOffUntil:(double)arg1 ;
-(void)setNetworkingBlockedUntil:(double)arg1 ;
-(double)networkingBlockedUntil;
-(void)clearTimestampForTransaction:(id)arg1 ;
-(char)isNetworkingBlocked;
-(double)backOffUntil;
-(double)userCancelledSignInBackOffUntil;
-(char)canScheduleTransaction:(id)arg1 error:(id*)arg2 ;
-(void)setTimestampForTransaction:(id)arg1 ;
-(void)setAuthenticationRequest;
-(char)hasAuthenticatedTooRecentlyForTransaction:(id)arg1 error:(id*)arg2 ;
-(void)setUserAcceptedSyncTimestamp;
-(char)hasUserRecentlyAcceptedSync;
-(void)setUserCancelledSignIn;
-(void)backOffForTimeInterval:(double)arg1 ;
-(void)setNetworkingBlocked;
-(void)setTransactionClamps:(NSMutableDictionary *)arg1 ;
@end

