/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 6, 2015 at 5:12:52 PM Japan Standard Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /Applications/Podcasts.app/Podcasts
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <Podcasts/Podcasts-Structs.h>
#import <Podcasts/MTTableView.h>
#import <Podcasts/MTTableViewRowDataDelegate.h>

@protocol MTLockupHeaderViewProtocol;
@class UIView, NSString;

@interface MTLockupHeaderTableView : MTTableView <MTTableViewRowDataDelegate> {

	char _needsToUpdateLayout;
	char _forcePinned;
	char _forceTucked;
	CGPoint _forcedContentOffset;
	char _alwaysPinnedToTop;
	char _lockupViewShouldPin;
	char _headerPinned;
	float _heightForLockupViewPinning;
	UIView*<MTLockupHeaderViewProtocol> _lockupHeaderView;
	UIView* _tuckingHeaderView;
	float _navBarMaxY;

}

@property (assign,nonatomic,__weak) id<MTLockupHeaderTableViewDelegate> delegate; 
@property (nonatomic,retain) UIView*<MTLockupHeaderViewProtocol> lockupHeaderView;              //@synthesize lockupHeaderView=_lockupHeaderView - In the implementation block
@property (nonatomic,retain) UIView * tuckingHeaderView;                                        //@synthesize tuckingHeaderView=_tuckingHeaderView - In the implementation block
@property (assign,nonatomic) char alwaysPinnedToTop;                                            //@synthesize alwaysPinnedToTop=_alwaysPinnedToTop - In the implementation block
@property (assign,nonatomic) char lockupViewShouldPin;                                          //@synthesize lockupViewShouldPin=_lockupViewShouldPin - In the implementation block
@property (assign,nonatomic) float heightForLockupViewPinning;                                  //@synthesize heightForLockupViewPinning=_heightForLockupViewPinning - In the implementation block
@property (assign,getter=isTuckingEnabled,nonatomic) char tuckingEnabled; 
@property (getter=isHeaderPinned,nonatomic,readonly) char headerPinned;                         //@synthesize headerPinned=_headerPinned - In the implementation block
@property (nonatomic,readonly) float navBarMaxY;                                                //@synthesize navBarMaxY=_navBarMaxY - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(float)heightForLockupViewPinning;
-(void)setPinsHeaderToTop:(char)arg1 animated:(char)arg2 ;
-(void)setPinnableHeaderView:(id)arg1 ;
-(void)setPinsHeaderToTop:(char)arg1 ;
-(void)setNeedsToUpdateLayout;
-(void)_clearForcedFlags;
-(CGPoint)contentOffsetForTuckingHeaderTucked;
-(CGPoint)contentOffsetForTuckingHeaderVisible;
-(CGPoint)contentOffsetForPinningHeaderPinned;
-(void)updateNavBarMaxY;
-(void)updateLayoutForCurrentContentOffset;
-(UIView *)tuckingHeaderView;
-(UIView*<MTLockupHeaderViewProtocol>)lockupHeaderView;
-(float)navBarHeight;
-(char)lockupViewShouldPin;
-(void)setHeightForLockupViewPinning:(float)arg1 ;
-(void)setTuckingEnabled:(char)arg1 ;
-(void)reorderHeadersIfNeeded;
-(void)_reorderHeaders;
-(float)tabBarHeight;
-(char)isTuckingEnabled;
-(void)scrollHeaderTuckedAnimated:(char)arg1 ;
-(void)setHeaderPinned:(char)arg1 ;
-(void)setNavBarMaxY:(float)arg1 ;
-(float)navBarMaxY;
-(char)_needsToReorderHeader;
-(CGRect)adjustedVisibleRect:(CGRect)arg1 forFloatingSectionHeaderInTableView:(id)arg2 ;
-(void)scrollHeaderVisibleAnimated:(char)arg1 ;
-(void)scrollHeaderPinnedAnimated:(char)arg1 ;
-(void)setContentOffsetForced:(CGPoint)arg1 ;
-(void)setLockupViewShouldPin:(char)arg1 ;
-(void)setAlwaysPinnedToTop:(char)arg1 ;
-(void)setLockupHeaderView:(UIView*<MTLockupHeaderViewProtocol>)arg1 ;
-(void)setTuckingHeaderView:(UIView *)arg1 ;
-(char)alwaysPinnedToTop;
-(char)isHeaderPinned;
-(void)setFrame:(CGRect)arg1 ;
-(void)layoutSubviews;
-(void)setBounds:(CGRect)arg1 ;
-(void)traitCollectionDidChange:(id)arg1 ;
-(char)gestureRecognizerShouldBegin:(id)arg1 ;
-(void)scrollRectToVisible:(CGRect)arg1 animated:(char)arg2 ;
-(void)setContentOffset:(CGPoint)arg1 ;
-(void)_notifyDidScroll;
-(void)_updateVisibleHeadersAndFootersNow:(char)arg1 ;
-(void)scrollToRowAtIndexPath:(id)arg1 atScrollPosition:(int)arg2 animated:(char)arg3 ;
-(void)updateLayout;
@end

