/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 6, 2015 at 5:12:25 PM Japan Standard Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /Applications/Maps.app/Maps
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <Maps/Maps-Structs.h>
#import <UIKit/UIAlertControllerSystemProvidedPresentationDelegate.h>
#import <UIKit/UIGestureRecognizerDelegatePrivate.h>
#import <libobjc.A.dylib/MKPlaceHeaderViewDelegate.h>
#import <libobjc.A.dylib/MKPlaceHeaderViewDelegate.h>

@protocol OS_dispatch_group, QuickActionMenuPresenterDelegate;
@class VKLabelMarker, SearchResult, MKMapItem, UIAlertController, UIGestureRecognizer, UIView, GEOPlaceActionDetails, UIViewController, MKPlaceHeaderView, NSString, QuickActionMenuAnchorView, UITapGestureRecognizer, UIAlertAction, NSObject;

@interface QuickActionMenuPresenter : NSObject <UIAlertControllerSystemProvidedPresentationDelegate, UIGestureRecognizerDelegatePrivate, MKPlaceHeaderViewDelegate, MKPlaceHeaderViewDelegate> {

	VKLabelMarker* _labelMarker;
	SearchResult* _searchResult;
	MKMapItem* _resolvedMapItem;
	UIAlertController* _alertController;
	UIGestureRecognizer* _orbGesture;
	CGPoint _gestureLocationInMap;
	UIView* _gestureSourceView;
	CGRect _gestureSourceRect;
	int _uiTarget;
	GEOPlaceActionDetails* _actionDetails;
	UIViewController* _presentingViewController;
	UIView* _gestureView;
	UIView* _anchorViewContainer;
	MKPlaceHeaderView* _headerView;
	NSString* _distanceInfo;
	QuickActionMenuAnchorView* _anchorView;
	UITapGestureRecognizer* _tapGesture;
	UIAlertAction* _directionsAction;
	UIAlertAction* _callAction;
	UIAlertAction* _webAction;
	UIAlertAction* _shareAction;
	UIAlertAction* _removeDroppedPinAction;
	UIAlertAction* _cancelAction;
	NSObject*<OS_dispatch_group> _resolveGroup;
	id<QuickActionMenuPresenterDelegate> _delegate;

}

@property (assign,nonatomic,__weak) id<QuickActionMenuPresenterDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,retain) SearchResult * searchResult;                                       //@synthesize searchResult=_searchResult - In the implementation block
@property (nonatomic,retain) VKLabelMarker * labelMarker;                                       //@synthesize labelMarker=_labelMarker - In the implementation block
@property (nonatomic,retain) MKMapItem * resolvedMapItem;                                       //@synthesize resolvedMapItem=_resolvedMapItem - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)imageForStyleAttributes:(id)arg1 ;
-(void)setLabelMarker:(VKLabelMarker *)arg1 ;
-(void)updateForLabelMarker:(id)arg1 ;
-(void)createAlertControllerIfNeeded;
-(void)_updateHeaderViewWithDistanceInfo:(id)arg1 ;
-(void)_setupAnchorView;
-(void)actionMenuDidFinish;
-(void)cancelPresentationGesture;
-(char)_shouldBeginOrbGestureAtLocation:(CGPoint)arg1 inView:(id)arg2 ;
-(id)initWithPresentingViewController:(id)arg1 inView:(id)arg2 ;
-(void)_updateHeaderView;
-(void)_setHeaderViewSubtitle;
-(void)handleTapInAnchorView:(id)arg1 ;
-(void)_setHeaderViewMapItem:(id)arg1 ;
-(MKMapItem *)resolvedMapItem;
-(void)customDismissAlertControllerWithCompletion:(/*^block*/id)arg1 ;
-(void)updateForSearchResult:(id)arg1 ;
-(VKLabelMarker *)labelMarker;
-(void)willDismissAlertController;
-(void)setResolvedMapItem:(MKMapItem *)arg1 ;
-(void)dismissAnimated:(char)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)headerViewWasDoubleClicked:(id)arg1 ;
-(void)headerViewWasSingleClicked:(id)arg1 ;
-(char)headerViewshouldShowTitleSubtitleAndStarRatings:(id)arg1 ;
-(void)setDelegate:(id<QuickActionMenuPresenterDelegate>)arg1 ;
-(void)dealloc;
-(id)init;
-(id<QuickActionMenuPresenterDelegate>)delegate;
-(void)applicationDidEnterBackground:(id)arg1 ;
-(void)reset;
-(id)_presentingViewControllerForSystemProvidedPresentationOfAlertController:(id)arg1 ;
-(void)_willBeginSystemProvidedPresentationOfAlertController:(id)arg1 ;
-(char)_shouldPerformSystemProvidedPresentationOfAlertController:(id)arg1 atSystemProvidedPresentationRegisteredViewLocation:(CGPoint)arg2 ;
-(void)_didEndSystemProvidedPresentationOfAlertController:(id)arg1 wasSuccessful:(char)arg2 ;
-(void)setSearchResult:(SearchResult *)arg1 ;
-(SearchResult *)searchResult;
-(void)performAction:(id)arg1 ;
@end

