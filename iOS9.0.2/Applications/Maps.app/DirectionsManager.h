/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 6, 2015 at 5:12:26 PM Japan Standard Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /Applications/Maps.app/Maps
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <Maps/Maps-Structs.h>
#import <Maps/RoutePickingSelectionDelegate.h>
#import <Maps/MNWaypointsLoaderDelegate.h>
#import <Maps/GEONavigationObserver.h>
#import <libobjc.A.dylib/PBRequesterDelegate.h>
#import <Maps/MNNavigationSessionUIDelegate.h>
#import <libobjc.A.dylib/MKLocationManagerObserver.h>

@protocol DirectionsManagerDelegate;
@class NSMutableArray, DirectionsWaypoint, CLLocation, GEOURLRouteHandle, MNTracePlayer, GEODirectionsRequestFeedback, NSInvocation, MNWaypointsLoader, BKSProcessAssertion, MNDirectionsSession, NSDictionary, DirectionsHistoryItem, NSDate, NSData, NSString, MNRouteManager, RouteSet, MNRoute;

@interface DirectionsManager : NSObject <RoutePickingSelectionDelegate, MNWaypointsLoaderDelegate, GEONavigationObserver, PBRequesterDelegate, MNNavigationSessionUIDelegate, MKLocationManagerObserver> {

	NSMutableArray* _observers;
	id<DirectionsManagerDelegate> _delegate;
	DirectionsWaypoint* _startWaypoint;
	DirectionsWaypoint* _endWaypoint;
	CLLocation* _currentLocation;
	GEOURLRouteHandle* _routeHandle;
	MNTracePlayer* _tracePlayer;
	GEODirectionsRequestFeedback* _feedback;
	NSInvocation* _readyToStartRouteInvocation;
	MNWaypointsLoader* _waypointsLoader;
	SCD_Struct_Di18 _timepointForLoadingRequest;
	BKSProcessAssertion* _assertion;
	int _auxiliaryControlsOrigin;
	unsigned _hasSeenInitialPageLoad : 1;
	unsigned _isLoading : 1;
	unsigned _shouldStartRoute : 1;
	unsigned _isUpdatingCurrentLocation : 1;
	unsigned _isResetting : 1;
	char _shouldClearWatchPreviewRouteContextOnReset;
	char _canStart;
	char _startingRoutesLoadAfterReset;
	char _usingCacheForLastLoadingRequest;
	MNDirectionsSession* _directionsSession;
	unsigned _transportType;
	NSDictionary* _userInfo;
	DirectionsHistoryItem* _historyItem;
	NSDate* _requestDate;
	NSData* _watchPreviewRouteContext;
	int _avoidedTransitModes;
	int _sortOption;

}

@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (assign,nonatomic,__weak) id<DirectionsManagerDelegate> delegate;                                //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,readonly) MNDirectionsSession * directionsSession;                                    //@synthesize directionsSession=_directionsSession - In the implementation block
@property (nonatomic,readonly) MNRouteManager * currentRouteManager; 
@property (nonatomic,readonly) RouteSet * currentRouteSet; 
@property (nonatomic,retain) MNRoute * currentRoute; 
@property (nonatomic,readonly) int currentStepIndex; 
@property (nonatomic,readonly) int currentLegIndex; 
@property (nonatomic,readonly) DirectionsWaypoint * startWaypoint;                                         //@synthesize startWaypoint=_startWaypoint - In the implementation block
@property (nonatomic,readonly) DirectionsWaypoint * endWaypoint;                                           //@synthesize endWaypoint=_endWaypoint - In the implementation block
@property (assign,nonatomic) unsigned transportType;                                                       //@synthesize transportType=_transportType - In the implementation block
@property (nonatomic,readonly) SCD_Struct_Ro12 timePoint; 
@property (nonatomic,readonly) NSDate * requestDate;                                                       //@synthesize requestDate=_requestDate - In the implementation block
@property (nonatomic,readonly) int avoidedTransitModes;                                                    //@synthesize avoidedTransitModes=_avoidedTransitModes - In the implementation block
@property (nonatomic,readonly) int sortOption;                                                             //@synthesize sortOption=_sortOption - In the implementation block
@property (nonatomic,readonly) GEOURLRouteHandle * routeHandle;                                            //@synthesize routeHandle=_routeHandle - In the implementation block
@property (nonatomic,readonly) MNTracePlayer * tracePlayer;                                                //@synthesize tracePlayer=_tracePlayer - In the implementation block
@property (nonatomic,readonly) GEODirectionsRequestFeedback * feedback;                                    //@synthesize feedback=_feedback - In the implementation block
@property (getter=isLoadingRoutes,nonatomic,readonly) char loadingRoutes; 
@property (getter=isUpdatingCurrentLocation,nonatomic,readonly) char updatingCurrentLocation;              //@synthesize isUpdatingCurrentLocation=_isUpdatingCurrentLocation - In the implementation block
@property (nonatomic,readonly) char canRunNavigationForSelectedRoute; 
@property (nonatomic,readonly) char canStart;                                                              //@synthesize canStart=_canStart - In the implementation block
@property (nonatomic,readonly) NSDictionary * userInfo;                                                    //@synthesize userInfo=_userInfo - In the implementation block
@property (nonatomic,retain) DirectionsHistoryItem * historyItem;                                          //@synthesize historyItem=_historyItem - In the implementation block
@property (nonatomic,retain) NSData * watchPreviewRouteContext;                                            //@synthesize watchPreviewRouteContext=_watchPreviewRouteContext - In the implementation block
@property (assign,nonatomic) char startingRoutesLoadAfterReset;                                            //@synthesize startingRoutesLoadAfterReset=_startingRoutesLoadAfterReset - In the implementation block
@property (nonatomic,readonly) char usingCacheForLastLoadingRequest;                                       //@synthesize usingCacheForLastLoadingRequest=_usingCacheForLastLoadingRequest - In the implementation block
+(id)sharedDirectionsManager;
+(int)sortOptionFromDefaults;
+(int)avoidedTransitModesFromDefaults;
-(void)setTracePlayer:(MNTracePlayer *)arg1 ;
-(MNTracePlayer *)tracePlayer;
-(void)setHistoryItem:(DirectionsHistoryItem *)arg1 ;
-(void)navigationSession:(id)arg1 displayPrimaryStepManeuverType:(int)arg2 junctionType:(int)arg3 junctionElements:(SCD_Struct_Di20*)arg4 count:(unsigned long)arg5 instructions:(id)arg6 shorterAlternativeInstructions:(id)arg7 shieldType:(int)arg8 shieldText:(id)arg9 drivingSide:(int)arg10 maneuverStepIndex:(unsigned)arg11 isSynthetic:(char)arg12 ;
-(void)waypointsLoader:(id)arg1 didLoadWaypointsForStart:(id)arg2 end:(id)arg3 ;
-(RouteSet *)currentRouteSet;
-(void)navigationSession:(id)arg1 currentStepIndex:(unsigned)arg2 distanceUntilManeuver:(double)arg3 timeUntilManeuver:(double)arg4 ;
-(void)waypointsLoader:(id)arg1 didFailWithError:(id)arg2 ;
-(char)isLoadingRoutes;
-(void)navigationSession:(id)arg1 updateETA:(id)arg2 ;
-(char)canRunNavigationForSelectedRoute;
-(void)directionsSessionUpdatedTrafficIncidents:(id)arg1 ;
-(id)_startLocation;
-(void)navigationSession:(id)arg1 proceedToRouteDistance:(double)arg2 displayString:(id)arg3 eta:(id)arg4 closestStepIndex:(unsigned)arg5 ;
-(void)navigationSession:(id)arg1 startingStepIndex:(unsigned)arg2 ;
-(int)avoidedTransitModes;
-(char)canRunNavigationForRoute:(id)arg1 ;
-(void)startDirectionsToSelectedRouteWithOptions:(int)arg1 ;
-(void)directionsSessionUpdatedETA:(id)arg1 ;
-(char)cacheIsAvailableForWaypoints:(id)arg1 ;
-(void)directionsSession:(id)arg1 didChangeRoutePreloadSession:(id)arg2 ;
-(void)navigationSession:(id)arg1 updatePointOfInterest:(SCD_Struct_RA7)arg2 focusStyle:(int)arg3 ;
-(void)directionsSessionDidCancelRoute:(id)arg1 ;
-(void)navigationSession:(id)arg1 ignoredLocation:(id)arg2 ;
-(void)directionsSession:(id)arg1 didSwitchToNewRoute:(id)arg2 ;
-(int)_geoTransportType;
-(void)navigationSession:(id)arg1 didChangeState:(int)arg2 ;
-(void)directionsSessionDidCancelRecalculate:(id)arg1 ;
-(void)directionsSession:(id)arg1 didRecalculateNewRoute:(id)arg2 ;
-(char)isUpdatingCurrentLocation;
-(void)navigationSession:(id)arg1 updatedMatchedLocation:(id)arg2 ;
-(MNRouteManager *)currentRouteManager;
-(void)directionsSessionWillRecalculateRoute:(id)arg1 ;
-(void)navigationSession:(id)arg1 failedWithErrorCode:(int)arg2 ;
-(void)directionsSessionDidFailToReceiveRoute:(id)arg1 error:(id)arg2 ;
-(char)startingRoutesLoadAfterReset;
-(unsigned)numberOfRoutes;
-(void)directionsSessionWillRequestRoute:(id)arg1 ;
-(id)_currentNavigator;
-(int)sortOption;
-(void)setStartingRoutesLoadAfterReset:(char)arg1 ;
-(void)directionsSession:(id)arg1 didReceiveRouteSet:(id)arg2 ;
-(void)navigationSession:(id)arg1 didEnableGuidance:(char)arg2 ;
-(void)directionsSession:(id)arg1 didAppendRoutesInRouteSet:(id)arg2 ;
-(NSDate *)requestDate;
-(void)navigationSession:(id)arg1 willStartForRoute:(id)arg2 ;
-(NSData *)watchPreviewRouteContext;
-(/*^block*/id)_routeRecorderErrorHandler;
-(char)canStart;
-(void)_startLoadNewRouteSet;
-(void)_loadRoutesInNewSessionWithStartGEOWaypoint:(id)arg1 endGEOWaypoint:(id)arg2 useCache:(char)arg3 traits:(id)arg4 ;
-(unsigned)routesPerInitialPage;
-(void)navigationSessionWillEnd:(id)arg1 ;
-(void)_updateForCurrentLocation;
-(void)directionsSessionDidFailToRecordTrace:(id)arg1 ;
-(unsigned)routesPerEarlierPage;
-(void)_failDuringLocationFindingWithError:(id)arg1 ;
-(void)_performReset;
-(void)navigationSessionDidStart:(id)arg1 ;
-(char)usingCacheForLastLoadingRequest;
-(unsigned)routesPerLaterPage;
-(void)beginLoadingWithRequest:(id)arg1 ;
-(void)navigationSessionWillResumeNavigatorFromPause:(id)arg1 ;
-(void)directionsSession:(id)arg1 failedWithError:(id)arg2 ;
-(void)navigationSessionWillStopNavigator:(id)arg1 ;
-(void)beginLoadingRoutesFromWaypoint:(id)arg1 toWaypoint:(id)arg2 mode:(unsigned)arg3 traits:(id)arg4 timepoint:(SCD_Struct_Ro12)arg5 avoidedTransitModes:(int)arg6 sortOption:(int)arg7 routeHandle:(id)arg8 tracePlayer:(id)arg9 withFeedback:(id)arg10 withUserInfo:(id)arg11 ;
-(void)navigationSession:(id)arg1 matchedToStepIndex:(unsigned)arg2 andLegIndex:(unsigned)arg3 ;
-(void)setWatchPreviewRouteContext:(NSData *)arg1 ;
-(void)navigationSessionWillPauseNavigator:(id)arg1 ;
-(void)navigationSession:(id)arg1 willStartNavigatorForRoute:(id)arg2 ;
-(id)_endLocation;
-(void)navigationSessionHasReachedEndOfLeg:(id)arg1 willContinueGuidance:(char)arg2 ;
-(void)navigationSessionHasArrived:(id)arg1 ;
-(unsigned)_requestMaxRouteCount;
-(void)_recordOriginDestinationSearchResultsInTrace;
-(void)_succeedLoading;
-(void)navigationSessionTransportTypeChanged:(id)arg1 newTransportType:(int)arg2 ;
-(void)navigationSessionDetectedNewTransportType:(id)arg1 newTransportType:(int)arg2 ;
-(unsigned)indexOfRoute:(id)arg1 ;
-(void)setCurrentRoute:(MNRoute *)arg1 ;
-(void)cancelLoadingRoutes;
-(void)navigationSessionHideSecondaryStep:(id)arg1 ;
-(void)navigationSession:(id)arg1 displayManeuverAlertForAnnouncementStage:(unsigned)arg2 ;
-(void)navigationSession:(id)arg1 displaySecondaryStepManeuverType:(int)arg2 junctionType:(int)arg3 junctionElements:(SCD_Struct_Di20*)arg4 count:(unsigned long)arg5 instructions:(id)arg6 shorterAlternativeInstructions:(id)arg7 shieldType:(int)arg8 shieldText:(id)arg9 drivingSide:(int)arg10 ;
-(MNDirectionsSession *)directionsSession;
-(void)_setUpdatingCurrentLocation:(char)arg1 ;
-(id)selectedRoute;
-(void)setSelectedRoute:(id)arg1 ;
-(void)locationManager:(id)arg1 didUpdateVehicleSpeed:(double)arg2 timestamp:(id)arg3 ;
-(void)locationManagerUpdatedLocation:(id)arg1 ;
-(char)locationManagerShouldPauseLocationUpdates:(id)arg1 ;
-(void)locationManagerDidReset:(id)arg1 ;
-(void)locationManagerFailedToUpdateLocation:(id)arg1 withError:(id)arg2 ;
-(void)locationManager:(id)arg1 didUpdateVehicleHeading:(double)arg2 timestamp:(id)arg3 ;
-(void)setDelegate:(id<DirectionsManagerDelegate>)arg1 ;
-(void)dealloc;
-(id)init;
-(id<DirectionsManagerDelegate>)delegate;
-(void)addObserver:(id)arg1 ;
-(void)reset;
-(void)removeObserver:(id)arg1 ;
-(NSDictionary *)userInfo;
-(void)navigationDidChangeNavigationState:(id)arg1 ;
-(GEOURLRouteHandle *)routeHandle;
-(void)setTransportType:(unsigned)arg1 ;
-(unsigned)transportType;
-(GEODirectionsRequestFeedback *)feedback;
-(id)routeAtIndex:(unsigned)arg1 ;
-(id)routes;
-(SCD_Struct_Ro12)timePoint;
-(DirectionsWaypoint *)startWaypoint;
-(DirectionsWaypoint *)endWaypoint;
-(int)defaultOptions;
-(DirectionsHistoryItem *)historyItem;
-(void)locationManagerDidPauseLocationUpdates:(id)arg1 ;
-(void)locationManagerDidResumeLocationUpdates:(id)arg1 ;
-(int)currentLegIndex;
-(int)currentStepIndex;
-(MNRoute *)currentRoute;
@end

