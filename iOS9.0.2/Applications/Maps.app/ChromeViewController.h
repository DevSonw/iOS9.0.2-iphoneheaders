/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 6, 2015 at 5:12:32 PM Japan Standard Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /Applications/Maps.app/Maps
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <Maps/Maps-Structs.h>
#import <UIKit/UIViewController.h>
#import <libobjc.A.dylib/MKMapViewDelegate.h>
#import <Maps/MKMapViewDelegatePrivate.h>
#import <Maps/MapsChromeViews.h>
#import <libobjc.A.dylib/MKMapViewDelegate.h>
#import <Maps/MKMapViewDelegatePrivate.h>

@class MKMapView, UIView, NSMutableArray, UserLocationView, NSMutableSet, NSDate, NSTimer, NSString, NSArray, MapsChromeViewItem;

@interface ChromeViewController : UIViewController <MKMapViewDelegate, MKMapViewDelegatePrivate, MapsChromeViews, MKMapViewDelegate, MKMapViewDelegatePrivate> {

	NSMutableArray* _itemsStack;
	UserLocationView* _userLocationView;
	MKMapView* _mapView;
	char _isViewLoading;
	UIView* _mapViewReplacement;
	char _topModeWasSentModeWillDidAppear;
	char _chromeDidReceiveModeWillAppear;
	char _chromeDidReceiveModeDidAppear;
	char _isAnyModeCurrent;
	char _isTopModeBecomingCurrent;
	char _isMapViewDisownedByPrepareMethods;
	char _isBecomingSuppressed;
	char _animatingMapInsets;
	double _reAnimateMapInsetsRequestedWithDuration;
	int _currentlyRunningLabelEdgeInsetsAnimationsCount;
	NSMutableSet* _modesBeingRemoved;
	unsigned _clientsAllowingInsetsAnimation;
	char _hasAttemptedLoadingViewportChangeDateFromDefaults;
	char _hasEverScheduledSavingViewportChangeDateInDefaults;
	NSDate* _lastViewportChangeDate;
	NSTimer* _lastViewportSaveTimer;
	unsigned _layoutsCount;
	UIView* _containingView;
	char _suppressed;
	char _forceAccessoryAnimationForNextPush;
	char _changingCurrentMode;
	NSString* _searchContextDefaultsKeysPrefix;

}

@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,copy) NSArray * modes; 
@property (nonatomic,readonly) id<ChromeModeController> currentMode; 
@property (nonatomic,readonly) id<ChromeModeController> topMode; 
@property (nonatomic,readonly) CGRect unobscuredBoundsInContainingView; 
@property (nonatomic,readonly) UserLocationView * userLocationView; 
@property (nonatomic,readonly) UserLocationView * userLocationViewIfExists; 
@property (assign,getter=isSuppressed,nonatomic) char suppressed;                                  //@synthesize suppressed=_suppressed - In the implementation block
@property (nonatomic,readonly) char supportsSuppression; 
@property (nonatomic,copy) NSString * searchContextDefaultsKeysPrefix;                             //@synthesize searchContextDefaultsKeysPrefix=_searchContextDefaultsKeysPrefix - In the implementation block
@property (assign,nonatomic) char forceAccessoryAnimationForNextPush;                              //@synthesize forceAccessoryAnimationForNextPush=_forceAccessoryAnimationForNextPush - In the implementation block
@property (nonatomic,readonly) MapsChromeViewItem * topItem; 
@property (nonatomic,readonly) NSArray * itemsStack; 
@property (nonatomic,retain) MKMapView * mapView; 
@property (nonatomic,retain) UIView * containingView;                                              //@synthesize containingView=_containingView - In the implementation block
@property (getter=isChangingCurrentMode,nonatomic,readonly) char changingCurrentMode;              //@synthesize changingCurrentMode=_changingCurrentMode - In the implementation block
@property (nonatomic,retain) UIView * mapViewReplacement;                                          //@synthesize mapViewReplacement=_mapViewReplacement - In the implementation block
+(Class)userLocationViewClass;
+(Class)chromeViewItemClass;
+(id)localizedLocationAuthorizationMessage;
+(id)localizedLocationAuthorizationTitle;
+(id)mapReplacementColor;
+(Class)containingViewClass;
+(char)canTransitionWithoutMap;
-(id<ChromeModeController>)topMode;
-(void)didUnsuppress;
-(void)mapViewInstanceDidChange;
-(id)enteredForegroundDate;
-(void)didLoadView;
-(char)_shouldRecordViewportChange;
-(id)newTraits;
-(void)mapView:(id)arg1 willChangeRotation:(double)arg2 ;
-(void)layoutForUnobscuredBoundsChange;
-(void)setSuppressed:(char)arg1 ;
-(void)setMapViewReplacement:(UIView *)arg1 ;
-(UIView *)mapViewReplacement;
-(CGRect)unobscuredBoundsInContainingViewWithOptions:(int)arg1 ;
-(void)addReplacementViewToViewHierarchy:(id)arg1 ;
-(void)pushMode:(id)arg1 animated:(char)arg2 ;
-(char)getPreferredUserInterfaceIdiom:(out int*)arg1 ;
-(char)supportsSuppression;
-(UIEdgeInsets)mapInsetsIncludingBarsWithNonopaqueParts:(char)arg1 ;
-(char)isCurrentMode:(id)arg1 ;
-(CGSize)attributionAnchorOffset;
-(void)currentModeWillChangeByMovingToItem:(id)arg1 fromItem:(id)arg2 animated:(char)arg3 ;
-(void)currentModeDidChangeByMovingToItem:(id)arg1 fromItem:(id)arg2 animated:(char)arg3 ;
-(void)invalidateMapInsetsAnimated:(char)arg1 duration:(double)arg2 ;
-(char)isWhenNextCurrentActionScheduledWithKey:(id)arg1 forMode:(id)arg2 ;
-(void)replaceTopModeWithMode:(id)arg1 animated:(char)arg2 ;
-(void)_scheduleAnimationForUpdatingEdgeInsetsForCurrentModeDuration:(double)arg1 ;
-(CGRect)unobscuredBoundsInContainingView;
-(id)chromeViewItemForMode:(id)arg1 ;
-(id)_whenNextCurrentBlocksDictionaryForMode:(id)arg1 creatingIfMissing:(char)arg2 ;
-(id)_lastViewportChangeDateLoadingFromDefaultsIfNeeded;
-(UserLocationView *)userLocationViewIfExists;
-(void)setMapEdgeInsets:(UIEdgeInsets)arg1 animated:(char)arg2 forMode:(id)arg3 ;
-(id)_lastViewportChangeDateDefaultsKey;
-(void)performInitialConfigurationOnMapView:(id)arg1 ;
-(NSArray *)itemsStack;
-(char)forceAccessoryAnimationForNextPush;
-(void)replaceMode:(id)arg1 withMode:(id)arg2 animated:(char)arg3 ;
-(char)isViewLoadedOrLoading;
-(void)popModeAnimated:(char)arg1 ;
-(void)_saveLastViewportChangeDate;
-(void)removeMode:(id)arg1 animated:(char)arg2 ;
-(void)popToMode:(id)arg1 animated:(char)arg2 ;
-(void)stackDidChangeByMovingToItem:(id)arg1 fromItem:(id)arg2 ;
-(void)_loadMapViewIfNeeded;
-(void)popToRootModeAnimated:(char)arg1 ;
-(void)willLoadView;
-(void)setMapEdgeInsets:(UIEdgeInsets)arg1 forMode:(id)arg2 ;
-(void)invalidateLabelEdgeInsetsWithAnimation:(id)arg1 ;
-(id)_newChromeItemForMode:(id)arg1 ;
-(void)pushTopItemOnTopOfStackAfterViewLoadIfNeeded;
-(void)insertMode:(id)arg1 aboveMode:(id)arg2 animated:(char)arg3 ;
-(void)invalidateMapInsets;
-(id)lastViewportChangedDate;
-(void)stackWillChangeByMovingToItem:(id)arg1 fromItem:(id)arg2 ;
-(id)mapViewDelegateForSelector:(SEL)arg1 ;
-(void)setModes:(NSArray *)arg1 ;
-(void)moveToAccessoryViewsForMode:(id)arg1 animation:(id)arg2 ;
-(void)prepareRemovingMapViewFromViewHierarchyWithReplacement:(id)arg1 ;
-(void)invalidateMapInsetsAnimated:(char)arg1 ;
-(void)_popToItem:(id)arg1 atIndex:(unsigned)arg2 animated:(char)arg3 ;
-(void)_performTransitionWithAnimation:(char)arg1 toItem:(id)arg2 fromItem:(id)arg3 itemsLeavingTheStack:(id)arg4 byChangingStackInBlock:(/*^block*/id)arg5 ;
-(void)cancelWhenNextCurrentActionWithKey:(id)arg1 forMode:(id)arg2 ;
-(NSString *)searchContextDefaultsKeysPrefix;
-(void)setModes:(id)arg1 animated:(char)arg2 ;
-(UIEdgeInsets)obscuredInsetsForBoundsOptions:(int)arg1 ;
-(void)_invokeWhenNextCurrentBlocksForMode:(id)arg1 animated:(char)arg2 ;
-(void)reinsertMapViewInViewHierarchy;
-(void)reinsertMapViewInViewHierarchy:(id)arg1 userLocationView:(id)arg2 ;
-(char)isTopMode:(id)arg1 ;
-(char)isChangingCurrentMode;
-(void)whenModeNextBecomesCurrent:(id)arg1 performActionWithKey:(id)arg2 block:(/*^block*/id)arg3 ;
-(void)_scheduleAnimationForUpdatingEdgeInsetsForCurrentMode;
-(void)performAllowingInsetsAnimation:(/*^block*/id)arg1 ;
-(void)invalidateLabelEdgeInsetsWithAnimation:(id)arg1 animationShouldHideLabelsAtStart:(char)arg2 ;
-(void)_removeWhenNextCurrentBlocksDictionaryFromMode:(id)arg1 ;
-(void)setForceAccessoryAnimationForNextPush:(char)arg1 ;
-(char)_shouldSaveLastViewportChangeDateInDefaults;
-(void)prepareRemovingMapViewFromViewHierarchyWithReplacement:(id)arg1 retainOwnershipOfMapView:(char)arg2 ;
-(void)setSearchContextDefaultsKeysPrefix:(NSString *)arg1 ;
-(void)mapView:(id)arg1 canZoomOutDidChange:(char)arg2 ;
-(void)mapView:(id)arg1 labelMarker:(id)arg2 calloutAccessoryControlTapped:(id)arg3 ;
-(void)_mapView:(id)arg1 willDeselectAnnotationView:(id)arg2 ;
-(void)mapViewDidStartUserInteraction:(id)arg1 ;
-(void)mapViewDidFinishInitialUserTrackingModeAnimation:(id)arg1 ;
-(void)mapView:(id)arg1 canZoomInDidChange:(char)arg2 ;
-(void)mapView:(id)arg1 didDeselectLabelMarker:(id)arg2 ;
-(id)mapViewCurrentRouteMatch:(id)arg1 ;
-(UIEdgeInsets)labelEdgeInsets;
-(void)mapView:(id)arg1 didStopFlyoverTourCompleted:(char)arg2 ;
-(void)_mapView:(id)arg1 willDeselectLabelMarker:(id)arg2 ;
-(void)mapViewDidAnimateInAnnotationViews:(id)arg1 ;
-(char)mapView:(id)arg1 shouldSelectLabelMarker:(id)arg2 ;
-(void)mapView:(id)arg1 didStopRespondingToGesture:(int)arg2 zoomDirection:(int)arg3 didDecelerate:(char)arg4 ;
-(void)mapViewWillStartFlyoverTour:(id)arg1 ;
-(void)mapView:(id)arg1 didChangeUserTrackingMode:(int)arg2 animated:(char)arg3 fromTrackingButton:(char)arg4 ;
-(void)_setLabelEdgeInsets:(UIEdgeInsets)arg1 ;
-(void)mapViewWillAnimateInAnnotationViews:(id)arg1 ;
-(void)mapView:(id)arg1 flyoverTourLabelDidChange:(id)arg2 ;
-(void)mapView:(id)arg1 willStartRespondingToGesture:(int)arg2 animated:(char)arg3 ;
-(void)mapView:(id)arg1 flyoverModeDidChange:(int)arg2 ;
-(void)_mapView:(id)arg1 calloutDidAppearForAnnotationView:(id)arg2 ;
-(char)mapView:(id)arg1 shouldReceiveTouch:(id)arg2 ;
-(void)mapView:(id)arg1 flyoverModeWillChange:(int)arg2 ;
-(void)mapView:(id)arg1 canEnter3DModeDidChange:(char)arg2 ;
-(id)mapView:(id)arg1 painterForVectorOverlay:(id)arg2 ;
-(double)mapView:(id)arg1 shouldDelayTapResponse:(id)arg2 onAnnotationView:(id)arg3 forDuration:(double)arg4 ;
-(void)mapViewDidFinishCalloutExpansion:(id)arg1 ;
-(void)mapView:(id)arg1 didBecomePitched:(char)arg2 ;
-(void)mapView:(id)arg1 canShowFlyoverDidChange:(char)arg2 ;
-(void)mapView:(id)arg1 didSelectLabelMarker:(id)arg2 ;
-(void)mapViewDidStopUserInteraction:(id)arg1 ;
-(void)mapView:(id)arg1 showingFlyoverDidChange:(char)arg2 ;
-(void)mapView:(id)arg1 didChangeMapType:(unsigned)arg2 ;
-(UserLocationView *)userLocationView;
-(void)setMapView:(MKMapView *)arg1 ;
-(void)mapView:(id)arg1 didAddAnnotationViews:(id)arg2 ;
-(void)mapView:(id)arg1 regionWillChangeAnimated:(char)arg2 ;
-(void)mapView:(id)arg1 regionDidChangeAnimated:(char)arg2 ;
-(void)mapViewWillStartLoadingMap:(id)arg1 ;
-(void)mapViewDidFinishLoadingMap:(id)arg1 ;
-(void)mapViewDidFailLoadingMap:(id)arg1 withError:(id)arg2 ;
-(void)mapViewWillStartRenderingMap:(id)arg1 ;
-(void)mapViewDidFinishRenderingMap:(id)arg1 fullyRendered:(char)arg2 ;
-(id)mapView:(id)arg1 viewForAnnotation:(id)arg2 ;
-(void)mapView:(id)arg1 annotationView:(id)arg2 calloutAccessoryControlTapped:(id)arg3 ;
-(void)mapView:(id)arg1 didSelectAnnotationView:(id)arg2 ;
-(void)mapView:(id)arg1 didDeselectAnnotationView:(id)arg2 ;
-(void)mapViewWillStartLocatingUser:(id)arg1 ;
-(void)mapViewDidStopLocatingUser:(id)arg1 ;
-(void)mapView:(id)arg1 didUpdateUserLocation:(id)arg2 ;
-(void)mapView:(id)arg1 didFailToLocateUserWithError:(id)arg2 ;
-(void)mapView:(id)arg1 annotationView:(id)arg2 didChangeDragState:(unsigned)arg3 fromOldState:(unsigned)arg4 ;
-(void)mapView:(id)arg1 didChangeUserTrackingMode:(int)arg2 animated:(char)arg3 ;
-(id)mapView:(id)arg1 rendererForOverlay:(id)arg2 ;
-(void)mapView:(id)arg1 didAddOverlayRenderers:(id)arg2 ;
-(MKMapView *)mapView;
-(void)dealloc;
-(id)init;
-(void)loadView;
-(void)viewDidLayoutSubviews;
-(MapsChromeViewItem *)topItem;
-(id<ChromeModeController>)currentMode;
-(void)viewWillAppear:(char)arg1 ;
-(void)viewDidAppear:(char)arg1 ;
-(void)viewWillDisappear:(char)arg1 ;
-(void)viewDidDisappear:(char)arg1 ;
-(void)setContainingView:(UIView *)arg1 ;
-(UIView *)containingView;
-(void)_updateInsets;
-(id)mapViewDelegate;
-(NSArray *)modes;
-(char)isSuppressed;
@end

