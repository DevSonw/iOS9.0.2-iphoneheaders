/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 6, 2015 at 5:12:26 PM Japan Standard Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /Applications/Maps.app/Maps
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <Maps/Maps-Structs.h>
#import <UIKit/UIGestureRecognizerDelegate.h>

@protocol MKLocationManagerOperation;
@class MapsMainModeController, MainChromeViewController, StarkDisplayController, UILongPressGestureRecognizer, NSString;

@interface MapsLaunchHandler : NSObject <UIGestureRecognizerDelegate> {

	MapsMainModeController* _mapController;
	MainChromeViewController* _mainChrome;
	StarkDisplayController* _starkMapController;
	id<MKLocationManagerOperation> _singleLocationUpdater;
	UILongPressGestureRecognizer* _locateOnLaunchMapGestureRecognizer;
	char _userHasInteractedWithMapSinceStartup;
	char _shouldLaunchIntoNav;
	char _didLaunchWithExplicitIntent;
	char _mapIsRendering;

}

@property (assign,nonatomic,__weak) MapsMainModeController * mapController;                   //@synthesize mapController=_mapController - In the implementation block
@property (assign,nonatomic,__weak) MainChromeViewController * mainChrome;                    //@synthesize mainChrome=_mainChrome - In the implementation block
@property (assign,nonatomic,__weak) StarkDisplayController * starkMapController;              //@synthesize starkMapController=_starkMapController - In the implementation block
@property (assign,nonatomic) char shouldLaunchIntoNav;                                        //@synthesize shouldLaunchIntoNav=_shouldLaunchIntoNav - In the implementation block
@property (assign,nonatomic) char didLaunchWithExplicitIntent;                                //@synthesize didLaunchWithExplicitIntent=_didLaunchWithExplicitIntent - In the implementation block
@property (nonatomic,readonly) char mapIsRendering;                                           //@synthesize mapIsRendering=_mapIsRendering - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(void)perform:(/*^block*/id)arg1 afterWaitingForLocationFix:(char)arg2 ;
+(void)waitForLocationWithTimeout:(double)arg1 maxLocationAge:(double)arg2 andPerform:(/*^block*/id)arg3 ;
+(void)waitForLocationWithTimeout:(double)arg1 andPerform:(/*^block*/id)arg2 ;
+(void)waitForLocationAndPeform:(/*^block*/id)arg1 ;
-(void)_cancelLocateOnLaunch;
-(void)_setCenterCoordinateToShowCoordinate:(SCD_Struct_RA7)arg1 presentingViewController:(id)arg2 ;
-(char)launchIntoDirectionsWithMapItems:(id)arg1 options:(id)arg2 originIsActiveWatch:(char)arg3 ;
-(char)launchIntoSearchWithSearchResults:(id)arg1 options:(id)arg2 ;
-(char)launchIntoDirectionsWithSearchResults:(id)arg1 options:(id)arg2 ;
-(char)launchWithOptions:(id)arg1 ;
-(void)setMainChrome:(MainChromeViewController *)arg1 ;
-(char)launchIntoDirectionsWithMapItems:(id)arg1 options:(id)arg2 ;
-(char)_determineValueForKey:(id)arg1 ;
-(char)launchIntoSearchWithMapItems:(id)arg1 options:(id)arg2 ;
-(char)launchIntoRAPForMapItem:(id)arg1 options:(id)arg2 ;
-(void)setShouldLaunchIntoNav:(char)arg1 ;
-(void)zoomWithOptions:(id)arg1 ;
-(char)didLaunchWithExplicitIntent;
-(void)_willHandleLaunch;
-(void)setDidLaunchWithExplicitIntent:(char)arg1 ;
-(MainChromeViewController *)mainChrome;
-(void)_resetApplicationState;
-(StarkDisplayController *)starkMapController;
-(char)launchWithProblemResolutionNotification:(id)arg1 withPrompt:(char)arg2 ;
-(void)setStarkMapController:(StarkDisplayController *)arg1 ;
-(SCD_Struct_RA13)regionForLaunchOptions:(id)arg1 andSearchResults:(id)arg2 ;
-(char)shouldLaunchIntoNav;
-(char)launchIntoTracePlayback:(id)arg1 ;
-(char)launchWithAnnouncement:(id)arg1 ;
-(char)launchIntoDirectionsWithSearchResults:(id)arg1 options:(id)arg2 originIsActiveWatch:(char)arg3 ;
-(char)launchWithSyncedBookmark:(id)arg1 withPrompt:(char)arg2 ;
-(char)launchWithCategory:(id)arg1 ;
-(char)mapIsRendering;
-(void)launchWithShortcutItem:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)_enterTrackingModeIfDistanceTraveledForLocation:(id)arg1 ;
-(void)launchToCurrentLocationWithOptions:(id)arg1 ;
-(void)_resetApplicationStateHidingSearch:(char)arg1 ;
-(void)mapViewWillStartRendering;
-(void)_enterTrackingModeForOffscreenLocation:(id)arg1 ;
-(void)mapViewDidFinishRendering;
-(void)_displayAdditionalUIForProblemStatusResponse:(id)arg1 ;
-(char)_getSingleServerSideAlertTitle:(out id*)arg1 message:(out id*)arg2 messageIsSameAsNotificationTitle:(out char*)arg3 forProblemStatusResponse:(id)arg4 ;
-(char)_canDisplayAdditionalUIForProblemStatusResponse:(id)arg1 ;
-(void)_getDefaultAlertTitle:(out id*)arg1 alertMessage:(out id*)arg2 forProblemStatusResponse:(id)arg3 ;
-(void)_displayDedicatedFixedProblemViewControllerForProblemStatusResponse:(id)arg1 ;
-(void)dealloc;
-(char)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2 ;
-(void)applicationDidBecomeActive;
-(void)applicationWillResignActive;
-(MapsMainModeController *)mapController;
-(void)setMapController:(MapsMainModeController *)arg1 ;
@end

