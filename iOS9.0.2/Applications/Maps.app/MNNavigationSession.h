/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 6, 2015 at 5:12:28 PM Japan Standard Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /Applications/Maps.app/Maps
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <Maps/Maps-Structs.h>
#import <Maps/MNLocationTrackerDelegate.h>
#import <Maps/MNNavigationAudioSessionDelegate.h>
#import <Maps/GEONavigationObserver.h>
#import <Maps/MNExternalGuidanceSource.h>
#import <libobjc.A.dylib/MKLocationManagerObserver.h>
#import <Maps/MNRouteManagerDelegate.h>

@class MNLocationTracker, MNRouteManager, MNThermalLogger, GEOMotionContext, MNNavigationAudioSession, MNLocation, MNNavigator, GEOComposedWaypoint, NSString;

@interface MNNavigationSession : NSObject <MNLocationTrackerDelegate, MNNavigationAudioSessionDelegate, GEONavigationObserver, MNExternalGuidanceSource, MKLocationManagerObserver, MNRouteManagerDelegate> {

	MNLocationTracker* _locationTracker;
	MNRouteManager* _routeManager;
	MNThermalLogger* _thermalLogger;
	GEOMotionContext* _motionContext;
	MNNavigationAudioSession* _audioSession;
	MNLocation* _lastMatchedLocation;
	char _guidanceEnabled;
	int _defaultTransportType;
	double _remainingDistance;
	double _remainingTime;
	char _started;
	char _isActiveSession;
	char _announcingArrival;

}

@property (nonatomic,readonly) MNNavigator * navigator; 
@property (nonatomic,readonly) MNRouteManager * routeManager;                                       //@synthesize routeManager=_routeManager - In the implementation block
@property (nonatomic,readonly) GEOMotionContext * motionContext;                                    //@synthesize motionContext=_motionContext - In the implementation block
@property (nonatomic,readonly) MNNavigationAudioSession * audioSession;                             //@synthesize audioSession=_audioSession - In the implementation block
@property (nonatomic,readonly) GEOComposedWaypoint * destination; 
@property (nonatomic,readonly) MNLocation * lastMatchedLocation;                                    //@synthesize lastMatchedLocation=_lastMatchedLocation - In the implementation block
@property (nonatomic,readonly) int navigationState; 
@property (nonatomic,readonly) int currentTransportType; 
@property (nonatomic,readonly) char isNavigating; 
@property (assign,getter=isGuidanceEnabled,nonatomic) char guidanceEnabled;                         //@synthesize guidanceEnabled=_guidanceEnabled - In the implementation block
@property (nonatomic,readonly) unsigned lastMatchedStepIndex; 
@property (nonatomic,readonly) unsigned lastMatchedLegIndex; 
@property (getter=isStarted,nonatomic,readonly) char started;                                       //@synthesize started=_started - In the implementation block
@property (nonatomic,readonly) id<MNNavigationSessionTestingDelegate> testingDelegate; 
@property (assign,nonatomic) char isActiveSession;                                                  //@synthesize isActiveSession=_isActiveSession - In the implementation block
@property (assign,nonatomic) char announcingArrival;                                                //@synthesize announcingArrival=_announcingArrival - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)setGuidanceEnabled:(char)arg1 ;
-(char)isGuidanceEnabled;
-(void)routeManager:(id)arg1 receivedTrafficIncidentAlert:(id)arg2 ;
-(void)routeManagerDidFailToRecordTrace:(id)arg1 ;
-(void)routeManagerDidChangeState:(id)arg1 newRouteState:(int)arg2 ;
-(void)routeManagerUpdatedTrafficIncidents:(id)arg1 ;
-(void)routeManagerUpdatedETA:(id)arg1 ;
-(void)routeManager:(id)arg1 willSendETARequest:(id)arg2 ;
-(void)routeManager:(id)arg1 failedWithError:(id)arg2 ;
-(void)routeManager:(id)arg1 didChangeRoutePreloadSession:(id)arg2 ;
-(void)routeManager:(id)arg1 didSwitchToNewRoute:(id)arg2 alreadyOnRoute:(char)arg3 ;
-(void)routeManagerDidChangeActiveRouteSet:(id)arg1 ;
-(void)switchToTransportType:(int)arg1 ;
-(void)locationTrackerHasArrived:(id)arg1 ;
-(char)_calculateGuidanceEnabled;
-(void)locationTracker:(id)arg1 didChangeState:(int)arg2 ;
-(id)routeRepresentation;
-(void)startSteppingSession;
-(void)audioSessionWillAnnounceArrival:(id)arg1 ;
-(void)resetForTracePlayerAtLocation:(id)arg1 ;
-(void)_switchToCorrectNavigatorForStep:(id)arg1 ;
-(void)_startSteppingLocationTracker;
-(void)locationTrackerHasReachedEndOfLeg:(id)arg1 ;
-(void)_endAudioSession;
-(void)locationTracker:(id)arg1 ignoredLocation:(id)arg2 ;
-(id)_newNavigatorForTransportType:(int)arg1 ;
-(void)locationTrackerDetectedNewTransportType:(id)arg1 newTransportType:(int)arg2 ;
-(void)locationTracker:(id)arg1 startingStepIndex:(unsigned)arg2 ;
-(id)_etaWithRemainingTime:(double)arg1 remainingDistance:(double)arg2 ;
-(void)locationTracker:(id)arg1 failedWithErrorCode:(int)arg2 ;
-(void)resumeNavigator;
-(unsigned)lastMatchedLegIndex;
-(void)startTurnByTurnSessionWithGuidancePromptsEnabled:(char)arg1 ;
-(void)_startNavigatorWithGuidance:(char)arg1 ;
-(void)locationTrackerHideSecondaryStep:(id)arg1 ;
-(void)setVoiceGuidanceEnabled:(char)arg1 ;
-(void)_startSessionForTurnByTurn:(char)arg1 guidancePromptsEnabled:(char)arg2 ;
-(void)_willStartSessionForRoute:(id)arg1 ;
-(void)_stopSteppingLocationTracker;
-(void)_startLocationTracking;
-(void)locationTracker:(id)arg1 displayManeuverAlertForAnnouncementStage:(unsigned)arg2 ;
-(void)locationTracker:(id)arg1 didEnableGuidance:(char)arg2 ;
-(void)locationTracker:(id)arg1 displaySecondaryStepManeuverType:(int)arg2 junctionType:(int)arg3 junctionElements:(SCD_Struct_Di20*)arg4 count:(unsigned long)arg5 instructions:(id)arg6 shorterAlternativeInstructions:(id)arg7 shieldType:(int)arg8 shieldText:(id)arg9 drivingSide:(int)arg10 ;
-(void)locationTrackerWillResumeFromPause:(id)arg1 ;
-(void)_didStartSession;
-(void)_didEndSession;
-(char)_currentRouteLegTypeOnRoute:(id)arg1 matchesNavigatorType:(id)arg2 ;
-(void)_stopNavigatorAfterArrivalAnnouncement:(char)arg1 ;
-(void)locationTracker:(id)arg1 updatedMatchedLocation:(id)arg2 ;
-(unsigned)lastMatchedStepIndex;
-(char)answerTrafficRerouteWithResponse:(char)arg1 ;
-(void)locationTracker:(id)arg1 displayPrimaryStepManeuverType:(int)arg2 junctionType:(int)arg3 junctionElements:(SCD_Struct_Di20*)arg4 count:(unsigned long)arg5 instructions:(id)arg6 shorterAlternativeInstructions:(id)arg7 shieldType:(int)arg8 shieldText:(id)arg9 drivingSide:(int)arg10 maneuverStepIndex:(unsigned)arg11 isSynthetic:(char)arg12 ;
-(void)_setupDefaultNavigator;
-(void)_willStopNavigator;
-(void)locationTracker:(id)arg1 currentStepIndex:(unsigned)arg2 distanceUntilManeuver:(double)arg3 timeUntilManeuver:(double)arg4 ;
-(void)_updateLocationManagerForTurnByTurn:(char)arg1 ;
-(void)_endActiveNavigationState;
-(void)_stopLocationTracking;
-(void)_willStartNavigatorForRoute:(id)arg1 ;
-(void)locationTracker:(id)arg1 remainingTime:(double)arg2 remainingDistance:(double)arg3 ;
-(void)setIsActiveSession:(char)arg1 ;
-(void)locationTracker:(id)arg1 updatedTrafficIncidentAlert:(id)arg2 ;
-(void)locationTrackerWillPause:(id)arg1 ;
-(int)currentTransportType;
-(char)repeatCurrentTrafficAlert;
-(MNNavigationAudioSession *)audioSession;
-(void)_transportTypeChanged:(int)arg1 ;
-(void)_systemTimeZoneDidChange:(id)arg1 ;
-(void)locationTracker:(id)arg1 receivedTrafficIncidentAlert:(id)arg2 responseCallback:(/*^block*/id)arg3 ;
-(void)locationTracker:(id)arg1 proceedToRouteDistance:(double)arg2 displayString:(id)arg3 remainingTime:(double)arg4 remainingDistance:(double)arg5 closestStepIndex:(unsigned)arg6 ;
-(void)locationTracker:(id)arg1 invalidatedTrafficIncidentAlert:(id)arg2 ;
-(void)_switchToCorrectNavigatorForRoute:(id)arg1 ;
-(char)announcingArrival;
-(void)audioSessionDidFinishAnnouncingArrival:(id)arg1 ;
-(void)_didStartNavigator;
-(char)repeatCurrentGuidance;
-(void)_sendETAUpdateToNavigatorUIObservers;
-(void)toggleTracePlaying:(char)arg1 ;
-(MNLocation *)lastMatchedLocation;
-(void)locationTracker:(id)arg1 matchedToStepIndex:(unsigned)arg2 legIndex:(unsigned)arg3 ;
-(id)initWithRouteManager:(id)arg1 transportType:(int)arg2 ;
-(MNRouteManager *)routeManager;
-(void)setAnnouncingArrival:(char)arg1 ;
-(void)locationTracker:(id)arg1 updatePointOfInterest:(SCD_Struct_RA7)arg2 focusStyle:(int)arg3 ;
-(void)locationManager:(id)arg1 didUpdateVehicleSpeed:(double)arg2 timestamp:(id)arg3 ;
-(void)locationManagerUpdatedLocation:(id)arg1 ;
-(char)locationManagerShouldPauseLocationUpdates:(id)arg1 ;
-(void)locationManagerDidReset:(id)arg1 ;
-(void)locationManagerFailedToUpdateLocation:(id)arg1 withError:(id)arg2 ;
-(void)locationManager:(id)arg1 didUpdateVehicleHeading:(double)arg2 timestamp:(id)arg3 ;
-(void)dealloc;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(GEOComposedWaypoint *)destination;
-(void)endSession;
-(char)isStarted;
-(id<MNNavigationSessionTestingDelegate>)testingDelegate;
-(void)_willEndSession;
-(char)isActiveSession;
-(void)navigation:(id)arg1 didUpdateDisplayETA:(id)arg2 displayRemainingTime:(double)arg3 ;
-(int)navigationState;
-(char)isNavigating;
-(void)routeManager:(id)arg1 recordRouteResponse:(id)arg2 ;
-(void)routeManagerFailedToRecalculateRoute:(id)arg1 previousRoute:(id)arg2 errorCode:(int)arg3 ;
-(void)routeManagerWillRequestRoute:(id)arg1 ;
-(void)routeManagerFailedToReceiveRoutes:(id)arg1 error:(id)arg2 ;
-(void)routeManager:(id)arg1 recordRouteRequest:(id)arg2 ;
-(void)routeManagerWillRecalculateRoute:(id)arg1 ;
-(void)routeManager:(id)arg1 addedRoutesToRouteSet:(id)arg2 ;
-(void)routeManagerCanceledRequest:(id)arg1 ;
-(void)routeManager:(id)arg1 recalculatedNewRoute:(id)arg2 ;
-(GEOMotionContext *)motionContext;
-(void)_currentLocaleDidChange:(id)arg1 ;
-(MNNavigator *)navigator;
-(void)locationManagerDidPauseLocationUpdates:(id)arg1 ;
-(void)locationManagerDidResumeLocationUpdates:(id)arg1 ;
@end

