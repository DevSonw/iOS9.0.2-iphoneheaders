/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 6, 2015 at 5:12:26 PM Japan Standard Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /Applications/Maps.app/Maps
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <Maps/Maps-Structs.h>
#import <UIKit/UIGestureRecognizerDelegate.h>
#import <Maps/TopBarAlertViewDelegate.h>
#import <Maps/MNNavigationDebugViewsControllerDelegate.h>
#import <Maps/MNNavigationOverviewBarDelegate.h>
#import <Maps/MNGuidanceCurrentRoadDisplayDelegate.h>
#import <Maps/MapsChromeModeController.h>
#import <Maps/MainChromeModeController.h>
#import <Maps/StarkChromeModeController.h>
#import <Maps/MNLockScreenLayerSource.h>
#import <Maps/DirectionsStepsTableViewControllerDelegate.h>
#import <UIKit/UIPopoverControllerDelegate.h>
#import <Maps/MNNavigationSessionUIDelegate.h>
#import <Maps/MNNavigationDisplayDelegate.h>
#import <Maps/MNGuidanceSignsDisplayDelegate.h>

@protocol MapsChromeViews, MNNavigationModeControllerDelegate;
@class MapsChromeViewController, MNNavigationSession, MNNavigationDisplay, VKCameraContext, MNNavigationDebugViewsController, MNGuidanceSignsDisplay, MNGuidanceCurrentRoadDisplay, UIAlertController, NSDate, NSArray, ControlBarView, DirectionsStepsTableViewController, UINavigationController, UIGestureRecognizer, NSTimer, ThreeDButton, MNGuidanceOverviewBar, NSMutableDictionary, Presenter, UIView, MNTrafficIncidentAlert, NSMutableArray, MKMapView, MNTracePlayer, NSString, ChromeViewController;

@interface MNNavigationModeController : NSObject <UIGestureRecognizerDelegate, TopBarAlertViewDelegate, MNNavigationDebugViewsControllerDelegate, MNNavigationOverviewBarDelegate, MNGuidanceCurrentRoadDisplayDelegate, MapsChromeModeController, MainChromeModeController, StarkChromeModeController, MNLockScreenLayerSource, DirectionsStepsTableViewControllerDelegate, UIPopoverControllerDelegate, MNNavigationSessionUIDelegate, MNNavigationDisplayDelegate, MNGuidanceSignsDisplayDelegate> {

	id<MapsChromeViews> _views;
	MNNavigationSession* _navigationSession;
	char _isNavigating;
	char _cameraShouldAnimateToRoute;
	MNNavigationDisplay* _navigationDisplay;
	VKCameraContext* _cameraContext;
	char _topBarHidden;
	id<MNNavigationModeControllerDelegate> _delegate;
	MapsChromeViewController* _chromeViewController;
	MNNavigationDebugViewsController* _debugViewsController;
	MNGuidanceSignsDisplay* _guidanceDisplay;
	MNGuidanceCurrentRoadDisplay* _currentRoadDisplay;
	UIAlertController* _failRequestRouteAlert;
	unsigned _currentStepIndex;
	NSDate* _savedAutoHideDate;
	unsigned _autoHideSuspendCount;
	char _supressTopBarHidingTimerOnNextViewAppear;
	char _topBarWasLastShownForMessageDisplay;
	NSArray* _controlBarItems;
	ControlBarView* _controlBar;
	char _isHoldingPortraitToReturnFromLockScreen;
	DirectionsStepsTableViewController* _directionsStepsTableViewController;
	UINavigationController* _directionsStepsNavController;
	UIGestureRecognizer* _topBarDisplayGesture;
	char _hidingBarsSuppressed;
	char _appActiveWithOurViewVisible;
	char _zoomWasEnabled;
	char _scrollWasEnabled;
	char _rotationWasEnabled;
	char _tiltWasEnabled;
	NSTimer* _topBarHidingTimer;
	char _shouldStartTopBarHidingTimerOnPopoverDismissal;
	NSTimer* _repeatedPeriodicAudioTimer;
	char _playRepeatedPeriodicAudio;
	NSTimer* _arrivalInBackgroundTimer;
	char _isAnimatingSignsDisplay;
	char _needsShowTopBarAnimated;
	char _needsHideTopBarIfAppropriateAnimated;
	/*^block*/id _dismissHandler;
	ThreeDButton* _threeDButton;
	MNGuidanceOverviewBar* _overviewBar;
	NSMutableDictionary* _guidanceUpdates;
	char _isPendingReinsertionInViewHierarchy;
	Presenter* _directionsStepsListPresenter;
	UIView* _emptyButtonPlaceHolder;
	MNTrafficIncidentAlert* _trafficIncidentAlert;
	/*^block*/id _trafficIncidentAlertResponse;
	NSMutableArray* _dismissAlertViewCompletionHandlers;
	char _isSpeakingTrafficIncidentAlert;
	/*^block*/id _returnLayerToSelfBlock;

}

@property (nonatomic,readonly) MNNavigationSession * navigationSession;                           //@synthesize navigationSession=_navigationSession - In the implementation block
@property (nonatomic,retain) id<MapsChromeViews> views;                                           //@synthesize views=_views - In the implementation block
@property (assign,nonatomic,__weak) id<MNNavigationModeControllerDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,readonly) MKMapView * mapView; 
@property (nonatomic,retain) MNGuidanceSignsDisplay * guidanceDisplay;                            //@synthesize guidanceDisplay=_guidanceDisplay - In the implementation block
@property (assign,nonatomic) double zoomScale; 
@property (nonatomic,retain) UIAlertController * failRequestRouteAlert;                           //@synthesize failRequestRouteAlert=_failRequestRouteAlert - In the implementation block
@property (nonatomic,copy) id _returnLayerToSelfBlock;                                            //@synthesize returnLayerToSelfBlock=_returnLayerToSelfBlock - In the implementation block
@property (nonatomic,retain) NSTimer * _arrivalInBackgroundTimer;                                 //@synthesize arrivalInBackgroundTimer=_arrivalInBackgroundTimer - In the implementation block
@property (nonatomic,readonly) MNTracePlayer * tracePlayer; 
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (assign,nonatomic) ChromeViewController * chromeViewController; 
@property (nonatomic,__weak,readonly) UIView * preferredFocusedView; 
-(MNTracePlayer *)tracePlayer;
-(char)shouldTimeoutAfterDisconnect;
-(ChromeViewController *)chromeViewController;
-(void)setChromeViewController:(ChromeViewController *)arg1 ;
-(void)navigationSession:(id)arg1 displayPrimaryStepManeuverType:(int)arg2 junctionType:(int)arg3 junctionElements:(SCD_Struct_Di20*)arg4 count:(unsigned long)arg5 instructions:(id)arg6 shorterAlternativeInstructions:(id)arg7 shieldType:(int)arg8 shieldText:(id)arg9 drivingSide:(int)arg10 maneuverStepIndex:(unsigned)arg11 isSynthetic:(char)arg12 ;
-(void)navigationSession:(id)arg1 currentStepIndex:(unsigned)arg2 distanceUntilManeuver:(double)arg3 timeUntilManeuver:(double)arg4 ;
-(void)navigationSession:(id)arg1 updateETA:(id)arg2 ;
-(void)directionsSessionUpdatedTrafficIncidents:(id)arg1 ;
-(void)navigationSession:(id)arg1 proceedToRouteDistance:(double)arg2 displayString:(id)arg3 eta:(id)arg4 closestStepIndex:(unsigned)arg5 ;
-(void)navigationSession:(id)arg1 startingStepIndex:(unsigned)arg2 ;
-(void)directionsSessionUpdatedETA:(id)arg1 ;
-(void)directionsSession:(id)arg1 didChangeRoutePreloadSession:(id)arg2 ;
-(void)navigationSession:(id)arg1 updatePointOfInterest:(SCD_Struct_RA7)arg2 focusStyle:(int)arg3 ;
-(void)directionsSessionDidCancelRoute:(id)arg1 ;
-(void)navigationSession:(id)arg1 ignoredLocation:(id)arg2 ;
-(void)directionsSession:(id)arg1 didSwitchToNewRoute:(id)arg2 ;
-(void)navigationSession:(id)arg1 didChangeState:(int)arg2 ;
-(void)directionsSessionDidCancelRecalculate:(id)arg1 ;
-(void)directionsSession:(id)arg1 didRecalculateNewRoute:(id)arg2 ;
-(void)navigationSession:(id)arg1 updatedMatchedLocation:(id)arg2 ;
-(void)directionsSessionWillRecalculateRoute:(id)arg1 ;
-(void)navigationSession:(id)arg1 failedWithErrorCode:(int)arg2 ;
-(void)directionsSessionDidFailToReceiveRoute:(id)arg1 error:(id)arg2 ;
-(void)directionsSessionWillRequestRoute:(id)arg1 ;
-(void)directionsSession:(id)arg1 didReceiveRouteSet:(id)arg2 ;
-(void)navigationSession:(id)arg1 didEnableGuidance:(char)arg2 ;
-(void)directionsSession:(id)arg1 didAppendRoutesInRouteSet:(id)arg2 ;
-(void)navigationSession:(id)arg1 willStartForRoute:(id)arg2 ;
-(void)navigationSession:(id)arg1 updatedTrafficIncidentAlert:(id)arg2 ;
-(void)navigationSessionWillEnd:(id)arg1 ;
-(void)directionsSessionDidFailToRecordTrace:(id)arg1 ;
-(void)navigationSessionDidStart:(id)arg1 ;
-(void)navigationSession:(id)arg1 invalidatedTrafficIncidentAlert:(id)arg2 ;
-(void)navigationSessionWillResumeNavigatorFromPause:(id)arg1 ;
-(void)directionsSession:(id)arg1 failedWithError:(id)arg2 ;
-(void)navigationSession:(id)arg1 receivedTrafficIncidentAlert:(id)arg2 responseCallback:(/*^block*/id)arg3 ;
-(void)navigationSessionWillStopNavigator:(id)arg1 ;
-(void)navigationSession:(id)arg1 matchedToStepIndex:(unsigned)arg2 andLegIndex:(unsigned)arg3 ;
-(void)navigationSessionWillPauseNavigator:(id)arg1 ;
-(void)navigationSession:(id)arg1 willStartNavigatorForRoute:(id)arg2 ;
-(void)navigationSessionHasReachedEndOfLeg:(id)arg1 willContinueGuidance:(char)arg2 ;
-(void)navigationSessionHasArrived:(id)arg1 ;
-(void)navigationSessionTransportTypeChanged:(id)arg1 newTransportType:(int)arg2 ;
-(void)navigationSessionDetectedNewTransportType:(id)arg1 newTransportType:(int)arg2 ;
-(void)navigationSessionHideSecondaryStep:(id)arg1 ;
-(void)navigationSession:(id)arg1 displayManeuverAlertForAnnouncementStage:(unsigned)arg2 ;
-(void)navigationSession:(id)arg1 displaySecondaryStepManeuverType:(int)arg2 junctionType:(int)arg3 junctionElements:(SCD_Struct_Di20*)arg4 count:(unsigned long)arg5 instructions:(id)arg6 shorterAlternativeInstructions:(id)arg7 shieldType:(int)arg8 shieldText:(id)arg9 drivingSide:(int)arg10 ;
-(id)currentRouteMatch;
-(void)didReleaseViewForLockScreenDisplay;
-(void)_dismissTrafficAlertWithTimer:(id)arg1 ;
-(void)_showTrafficAlertViewForAlert:(id)arg1 responseCallback:(/*^block*/id)arg2 ;
-(char)canDisplayTraffic;
-(void)_threeDButtonTapped:(id)arg1 ;
-(void)navigationOverviewBarSizeWillChange:(id)arg1 ;
-(id)directionsStepsNavController;
-(MNGuidanceSignsDisplay *)guidanceDisplay;
-(id)_newGuidanceSignsDisplayInView:(id)arg1 ;
-(void)directionsStepsTableViewController:(id)arg1 didTapRowForSearchResult:(id)arg2 ;
-(void)_dismissNavWithDestination:(int)arg1 animated:(char)arg2 ;
-(void)topBarAlertViewWasSwiped:(id)arg1 ;
-(void)topBarAlertViewWasTapped:(id)arg1 ;
-(void)_pauseNavigationCameraMotion;
-(void)topBarAlertViewButtonWasTapped:(id)arg1 ;
-(void)_deviceOrientationDidChange:(id)arg1 ;
-(void)directionsSessionDidFailToRequestRoute:(id)arg1 problemDetails:(SCD_Struct_MN31*)arg2 ;
-(void)navigationDebugViewsTracePlaybackDidSeek:(id)arg1 ;
-(char)directionsStepsTableViewControllerShouldAllowInfoCardsForEndpoints:(id)arg1 ;
-(void)_dismissListView:(id)arg1 ;
-(id)starkChromeViewController;
-(void)directionsStepsTableViewController:(id)arg1 didTapDisclosureForSearchResult:(id)arg2 ;
-(void)navigationDebugViewsTracePlaybackSpeedDidChange:(id)arg1 speedMultiplier:(double)arg2 ;
-(UIEdgeInsets)_minimumEdgeInsets;
-(void)directionsStepsTableViewController:(id)arg1 didTapRowForRouteStep:(id)arg2 ;
-(id)mainChromeViewController;
-(void)_removeRepeatableUpdateForKey:(id)arg1 ;
-(void)_hideTopBarIfAppropriate:(id)arg1 ;
-(void)viewNeedsLayoutInLockScreenDisplay;
-(char)_canBecomeLockScreenLayerSource;
-(void)didEndDisplayingViewInLockScreenDisplay;
-(void)navigationDebugViewsTracePlaybackDidSeekToGuideMePortionOfTransitLeg:(id)arg1 ;
-(void)willBeginDisplayingViewInLockScreenDisplay;
-(id)viewForLockScreenDisplayWithReleaseRequestBlock:(/*^block*/id)arg1 ;
-(void)prepareToRunNavigationAnimated:(char)arg1 startCamera:(char)arg2 ;
-(void)_dismissTopBarAlertViewOnlyIfTrafficAlertView:(char)arg1 completion:(/*^block*/id)arg2 ;
-(void)modeWasSelected;
-(void)_setTopBarHidden:(char)arg1 animated:(char)arg2 ;
-(void)_toggleTopBar:(id)arg1 ;
-(void)endNavModeAnimated:(char)arg1 isNavigationEnding:(char)arg2 ;
-(void)_appResigningActiveWithOurViewVisible:(id)arg1 ;
-(id)overlayItemsForState:(id)arg1 ;
-(void)_removeAllRepeatableUpdatesForKeys:(id)arg1 ;
-(id)_signRepeatableUpdateKeys;
-(void)_prepareViewForLockScreen:(id)arg1 ;
-(void)_handleDefaultsChange:(id)arg1 ;
-(void)_startNavigationCameraMotionAnimated:(char)arg1 ;
-(void)chromeDidBecomeSuppressed;
-(double)autohideIdlenessInterval;
-(id)destinationTimeZone;
-(void)hideAutohidingContentWithAnimation:(id)arg1 ;
-(void)_performRepeatableUpdateForKey:(id)arg1 onEachGuidanceOutput:(/*^block*/id)arg2 ;
-(void)_discardArrivalInBackgroundTimer;
-(void)setCameraShouldAnimateToRoute;
-(void)sizeClassDidChangeToSizeClass:(SCD_Struct_Mo14)arg1 ;
-(void)willRotateWithDuration:(double)arg1 ;
-(void)willAnimateRotationWithDuration:(double)arg1 ;
-(void)_startRepeatedPeriodicAudio;
-(void)prepareToRunNavigationAnimated:(char)arg1 ;
-(void)_presentDirectionsStepsList;
-(void)_appDidBecomeActiveWithOurViewVisible;
-(void)_discardTopBarHidingTimer;
-(void)modeWillAppear:(char)arg1 ;
-(void)setFailRequestRouteAlert:(UIAlertController *)arg1 ;
-(id)parentFocusEnvironment;
-(void)modeDidAppear:(char)arg1 ;
-(void)modeDidDisappear:(char)arg1 ;
-(void)modeWillDisappear:(char)arg1 ;
-(void)willRemoveFromChromeViewController;
-(void)resignCurrentModeAnimated:(char)arg1 toMode:(id)arg2 ;
-(void)set_returnLayerToSelfBlock:(id)arg1 ;
-(void)_updateTopBarAlertView;
-(int)_cameraDisplayMode;
-(id)_overviewBar;
-(char)_isDismissingTrafficAlertView;
-(void)_suspendTopBarHidingTimer;
-(NSTimer *)_arrivalInBackgroundTimer;
-(void)_showTraceControls;
-(void)_resumeTopBarHidingTimerWithDuration:(double)arg1 ;
-(void)_updateRoutePreloadSession;
-(void)_dismissTrafficAlertWithTimer:(id)arg1 acceptedNewRoute:(char)arg2 timedOut:(char)arg3 completion:(/*^block*/id)arg4 ;
-(void)_clearNavigationRoute;
-(void)_startArrivalInBackgroundTimer;
-(float)hiddenTopMargin;
-(void)showAutohidingContentWithAnimation:(id)arg1 ;
-(void)_audioNotificationForNewTransportType:(int)arg1 navigationSession:(id)arg2 ;
-(void)_directionsListViewButtonTapped:(id)arg1 ;
-(char)presentMenu;
-(void)_showTopBarAnimated:(char)arg1 ;
-(id)_directionsListViewControl;
-(void)endNavModeAnimated:(char)arg1 ;
-(id)directionsController;
-(void)_endNavModeAnimated:(char)arg1 isNavigationEnding:(char)arg2 destination:(int)arg3 ;
-(void)_setCameraDisplayMode:(int)arg1 ;
-(void)_startTopBarHidingTimerWithDuration:(double)arg1 ;
-(char)needsAudioControl;
-(id)_threeDButton;
-(void)_alertTraceRecorderFailed;
-(void)_repeatUpdatesForKey:(id)arg1 ;
-(void)_speakRepeatedPeriodicAudio:(id)arg1 ;
-(void)didRemoveFromChromeViewController;
-(void)didHideAudioSettings;
-(void)didShowAudioSettings;
-(UIAlertController *)failRequestRouteAlert;
-(void)_hideTopBarIfAppropriateAnimated:(char)arg1 ;
-(void)didPickRouteForAudioSetting;
-(id)initWithNavigationSession:(id)arg1 dismissHandler:(/*^block*/id)arg2 ;
-(void)setGuidanceDisplay:(MNGuidanceSignsDisplay *)arg1 ;
-(id)_chromeViewControllerOfClass:(Class)arg1 ;
-(char)shouldSlideTopBar;
-(MNNavigationSession *)navigationSession;
-(void)didUpdateHFPPreferenceForAudioSetting:(char)arg1 ;
-(void)_performRepeatableUpdatesAgainIfNeeded;
-(void)guidanceSignsDisplayWillAnimateSign:(id)arg1 ;
-(id)_mainChromeViewControllerFromMapsDelegateIfNeeded:(char)arg1 ;
-(void)guidanceSignsDisplayDidAnimateSign:(id)arg1 ;
-(void)guidanceSignsDisplayChoseZoomOut:(id)arg1 ;
-(void)_navigationUpdatedPointOfInterest:(SCD_Struct_RA7)arg1 focusStyle:(int)arg2 ;
-(void)updateBlurDisabledBackgroundColor:(id)arg1 blurViewStyle:(int)arg2 transitionToBackdropStyle:(int)arg3 ;
-(void)guidanceSignsDisplayDidInvalidateMinimumEdgeInsets:(id)arg1 ;
-(void)guidanceSignsDisplayChoseEndNavigation:(id)arg1 ;
-(void)guidanceCurrentRoadDisplayDidInvalidateMinimumEdgeInsets:(id)arg1 ;
-(void)guidanceSignsDisplayChoseOverview:(id)arg1 ;
-(void)_sendTrafficRerouteFeedbackForAlert:(id)arg1 actionType:(int)arg2 ;
-(id)directionsStepsTableViewController;
-(void)_stopTopBarHidingTimer;
-(void)navigationOverviewBarOverviewTapped:(id)arg1 ;
-(void)_refreshCameraPosition;
-(id)_controlBarItems;
-(void)navigationOverviewBarEndTapped:(id)arg1 ;
-(void)goToOverviewAnimated:(char)arg1 ;
-(id)_emptyButton;
-(void)_updateWithMatchedLocation:(id)arg1 ;
-(id)currentExpandedTravelTimeForNavigationOverviewBar:(id)arg1 forTimeInterval:(double)arg2 ;
-(void)goToOverview;
-(void)guidanceSignsDisplayChoseZoomIn:(id)arg1 ;
-(char)overridesChromeViewDidAppearStatusBarHiddenUpdates;
-(void)guidanceSignsDisplayChoseToggleGuidance:(id)arg1 ;
-(void)layoutForUnobscuredBoundsChange;
-(char)_is3D;
-(id)_returnLayerToSelfBlock;
-(void)_updateGuidanceRoadDescription:(id)arg1 locationIsUnreliable:(char)arg2 ;
-(void)_clearAllAnnotations;
-(void)_removeAllRepeatableUpdates;
-(void)navigationDisplay:(id)arg1 didChangeUserTrackingMode:(int)arg2 ;
-(void)_eachGuidanceOutput:(/*^block*/id)arg1 ;
-(char)pressesBegan:(id)arg1 ;
-(void)becomeCurrentModeWithViews:(id)arg1 animated:(char)arg2 state:(id)arg3 fromMode:(id)arg4 ;
-(void)_displayFailureAlertWithTitle:(id)arg1 ;
-(void)guidanceSignsDisplayUpdateBlur:(id)arg1 frame:(CGRect)arg2 ;
-(void)set_arrivalInBackgroundTimer:(NSTimer *)arg1 ;
-(void)_endDisplayingMessageInTopBar;
-(void)resetNavigationMode;
-(void)_stopRepeatedPeriodicAudio;
-(void)guidanceSignsDisplayRepeatGuidance:(id)arg1 ;
-(char)_supportsCameraDisplayModeChanges;
-(void)_setRoute:(id)arg1 ;
-(void)willChangeToLightLevel:(int)arg1 animation:(id)arg2 ;
-(void)_stopNavigationCameraMotion;
-(char)_isTopBarSupposedToBeHidden;
-(void)_didEndApplicationResumeAnimation:(id)arg1 ;
-(void)_endNavigationAfterArrivalInBackground;
-(void)_didSetNavigationBarsHidden:(char)arg1 ;
-(void)guidanceSignsDisplayToggleNavigationBar:(id)arg1 ;
-(void)mapView:(id)arg1 canZoomOutDidChange:(char)arg2 ;
-(void)mapView:(id)arg1 canZoomInDidChange:(char)arg2 ;
-(void)mapView:(id)arg1 didBecomePitched:(char)arg2 ;
-(void)mapView:(id)arg1 regionDidChangeAnimated:(char)arg2 ;
-(MKMapView *)mapView;
-(void)setDelegate:(id<MNNavigationModeControllerDelegate>)arg1 ;
-(void)dealloc;
-(id<MNNavigationModeControllerDelegate>)delegate;
-(char)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2 ;
-(id)navigationItem;
-(unsigned)supportedInterfaceOrientations;
-(char)shouldAutorotate;
-(void)setNeedsFocusUpdate;
-(UIView *)preferredFocusedView;
-(void)updateFocusIfNeeded;
-(char)shouldUpdateFocusInContext:(id)arg1 ;
-(void)didUpdateFocusInContext:(id)arg1 withAnimationCoordinator:(id)arg2 ;
-(double)zoomScale;
-(void)setZoomScale:(double)arg1 ;
-(void)didRotate;
-(void)_updateInsets;
-(id)mapViewDelegate;
-(void)setViews:(id<MapsChromeViews>)arg1 ;
-(id<MapsChromeViews>)views;
-(void)_cleanUp;
@end

