/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 6, 2015 at 5:12:31 PM Japan Standard Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /Applications/Maps.app/Maps
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <Maps/Maps-Structs.h>
#import <Maps/RoutePickingBarDelegate.h>
#import <Maps/MKMapViewDelegatePrivate.h>
#import <Maps/TransitAppSelectionControllerDelegate.h>
#import <Maps/MainChromeModeController.h>
#import <Maps/MapsActivityViewControllerDelegate.h>

@protocol RoutePickingSessionBasics, RoutePickingSession, RoutePickingDisplayableRoutes, MKAnnotation, RoutePickingProvider, RoutePickingSelectionDelegate;
@class RoutePickingBarProvider, NSArray, MNRoute, PlacePresentationSelectionManagerContext, NSMutableArray, UIButton, MapsActivityViewController, NSError, UIView, GradientShadowView, RoutePickingModeSelector, MapsChromeViewController, ScrollableContentBarsController, NSString, ChromeViewController;

@interface RoutePickingModeController : NSObject <RoutePickingBarDelegate, MKMapViewDelegatePrivate, TransitAppSelectionControllerDelegate, MainChromeModeController, MapsActivityViewControllerDelegate> {

	RoutePickingBarProvider* _bar;
	NSArray* _routes;
	/*^block*/id _presentDirectionsSearchUI;
	/*^block*/id _presentDirectionsStepsListUI;
	/*^block*/id _completion;
	MNRoute* _selectedRoute;
	PlacePresentationSelectionManagerContext* _placePresentationSelectionManagerContext;
	char _hasEverShownInitialRouteRegion;
	char _hasEverSetUpSessionDisplay;
	id<RoutePickingSessionBasics> _session;
	id<RoutePickingSession> _sessionWithRoutes;
	char _isSessionCurrent;
	char _canSessionBecomeCurrent;
	char _isSessionResigning;
	char _hasSetUpInitialState;
	id<RoutePickingDisplayableRoutes> _currentRoutes;
	int _currentEffectiveSelectedVariant;
	int _previousEffectiveSelectedVariant;
	int _lastSuccessfullyDisplayedEffectiveSelectedVariant;
	char _isMovingToNewVariant;
	char _isIgnoringProviderAfterError;
	char _isLoading;
	NSMutableArray* _lastViewModes;
	char _showingApps;
	unsigned _numberOfCameraPositioningOperationsInFlight;
	char _isCameraCenteredOnAllRoutes;
	char _isRotating;
	char _isInvokingCompletion;
	UIButton* _mainActionButton;
	UIButton* _defaultMainActionButton;
	MapsActivityViewController* _activityViewController;
	NSError* _error;
	id<MKAnnotation> _previousAnnotationSelection;
	UIView* _containerView;
	GradientShadowView* _sidebarSeparator;
	RoutePickingModeSelector* _sidebarModeSelector;
	int _currentPresentationStyle;
	MapsChromeViewController* _chromeViewController;
	id<RoutePickingProvider> _provider;
	id<RoutePickingSelectionDelegate> _selectionDelegate;
	ScrollableContentBarsController* _scrollableContentBarsController;
	UIView* _sidebarHeaderModeSelectionView;

}

@property (nonatomic,readonly) id<RoutePickingProvider> provider;                                              //@synthesize provider=_provider - In the implementation block
@property (assign,nonatomic,__weak) id<RoutePickingSelectionDelegate> selectionDelegate;                       //@synthesize selectionDelegate=_selectionDelegate - In the implementation block
@property (nonatomic,readonly) int presentationStyle; 
@property (nonatomic,readonly) UIView * sidebarHeaderModeSelectionView;                                        //@synthesize sidebarHeaderModeSelectionView=_sidebarHeaderModeSelectionView - In the implementation block
@property (nonatomic,readonly) ScrollableContentBarsController * scrollableContentBarsController;              //@synthesize scrollableContentBarsController=_scrollableContentBarsController - In the implementation block
@property (nonatomic,readonly) char isPresentingShareSheet; 
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (assign,nonatomic) ChromeViewController * chromeViewController; 
+(CGSize)_routeDisplayPaddingSizeForRoutes:(id)arg1 inMapView:(id)arg2 ;
+(SCD_Struct_RA13)mapRectForRoutes:(id)arg1 withOriginWaypoint:(id)arg2 destinationWaypoint:(id)arg3 inMapView:(id)arg4 ;
+(int)_defaultViewModeForVariant:(int)arg1 ;
+(int)_variantForTransportType:(unsigned)arg1 ;
-(id)placePresentationSelectionManagerContext;
-(ChromeViewController *)chromeViewController;
-(void)setChromeViewController:(ChromeViewController *)arg1 ;
-(id)_mainChrome;
-(char)canDisplayTraffic;
-(void)sizeClassDidChangeToPair:(SCD_Struct_Mo14)arg1 ;
-(void)fillReportAProblemContext:(id)arg1 ;
-(void)viewModeDidChange;
-(void)willRotateWithDuration:(double)arg1 ;
-(void)willAnimateRotationWithDuration:(double)arg1 ;
-(void)resignCurrentModeAnimated:(char)arg1 toMode:(id)arg2 ;
-(char)placePresentationSelectionManager:(id)arg1 requiresMapsSelectionForPresentingPlacecardInContext:(id)arg2 ;
-(char)placePresentationSelectionManager:(id)arg1 shouldUseDefaultPlaceCardPresentationForViewController:(id)arg2 ;
-(void)updateBlurDisabledBackgroundColor:(id)arg1 blurViewStyle:(int)arg2 transitionToBackdropStyle:(int)arg3 ;
-(id)_controlBarItems;
-(void)layoutForUnobscuredBoundsChange;
-(void)becomeCurrentModeWithViews:(id)arg1 animated:(char)arg2 state:(id)arg3 fromMode:(id)arg4 ;
-(char)shouldShowPlacePresentationOptionInCalloutForLabelMarker:(id)arg1 ;
-(char)shouldShowPlacePresentationOptionInCalloutForAnnotationView:(id)arg1 ;
-(UIEdgeInsets)_mapEdgeInsetsWithChromeInsets:(UIEdgeInsets)arg1 ;
-(CGRect)sidebarFrameInView:(id)arg1 ;
-(float)_sidebarWidth;
-(void)mapsActivityViewControllerPresentRoutingApps:(id)arg1 ;
-(void)mapsActivityViewControllerPrint:(id)arg1 ;
-(void)presentationController:(id)arg1 addBookmarkForSearchResult:(id)arg2 title:(id)arg3 ;
-(void)presentationController:(id)arg1 hasFavoriteForMapItem:(id)arg2 result:(/*^block*/id)arg3 ;
-(void)presentationController:(id)arg1 addFavoriteForMapItem:(id)arg2 title:(id)arg3 result:(/*^block*/id)arg4 ;
-(id)mapsActivityMapView;
-(void)mapsActivityViewController:(id)arg1 addBookmarkWithSearchResult:(id)arg2 title:(id)arg3 ;
-(void)presentationController:(id)arg1 removeFavoriteForMapItem:(id)arg2 result:(/*^block*/id)arg3 ;
-(ScrollableContentBarsController *)scrollableContentBarsController;
-(void)transitAppSelectionControllerDidCancel:(id)arg1 ;
-(void)transitAppSelectionControllerDidSelectApp:(id)arg1 ;
-(void)goToRoutes:(id)arg1 forSession:(id)arg2 animated:(char)arg3 completion:(/*^block*/id)arg4 ;
-(void)_detailsBarDefaultHeightDidChange;
-(void)_hideContainerView;
-(void)_resetMainButton;
-(void)routePickingSuperseded;
-(void)_handleSelectionChange;
-(void)_setRoutesOnDirectionsAnnotationManagerIfNeededWithSelectedIndex:(unsigned)arg1 ;
-(void)_updateLastViewMode:(int)arg1 ;
-(void)_goToRoutes:(id)arg1 animated:(char)arg2 completion:(/*^block*/id)arg3 ;
-(void)_setSelectedRouteByDirectReference:(id)arg1 orByIndex:(unsigned)arg2 ;
-(void)startSelectedRoute;
-(void)_updateRouteAdvisoryDisplayAnimated:(char)arg1 ;
-(void)updateControlBarItemsAnimated:(char)arg1 resetMainButton:(char)arg2 ;
-(void)enableMainActionButtonIfPossible;
-(void)_makeSessionResignCurrentIfNeededWithAnimation:(id)arg1 toMoveToNewSession:(char)arg2 withDetailsBarContent:(id)arg3 ;
-(void)_makeSessionBecomeCurrentIfNeededWithAnimation:(id)arg1 ;
-(id)detailsBarContentForCurrentSession;
-(void)_moveToSession:(id)arg1 withAnimation:(id)arg2 ;
-(void)_refreshContainerViewForSidebarLayout:(char)arg1 ;
-(void)updateControlBarItemsAnimated:(char)arg1 ;
-(id)_routesForDisplayInTopBarField;
-(void)_updateVisibleMapRegionAnimated:(char)arg1 ;
-(unsigned)_directionTransportTypeForVariant:(int)arg1 ;
-(void)_moveToEditingRouteWithAnimation:(id)arg1 ;
-(void)_hideContainerViewWithAnimation:(id)arg1 ;
-(UIView *)sidebarHeaderModeSelectionView;
-(char)_canHandleError:(id)arg1 ;
-(void)_updateRoutesDisplayOnMapAnimated:(char)arg1 ;
-(char)_moveToShowingAppsIfPossible;
-(void)_updateMapViewEdgeInsets;
-(void)_hideSelectionAnimated:(char)arg1 ;
-(void)clearCurrentRoutes;
-(char)_shouldEnableMainActionButton;
-(void)noteProviderDataDidChange;
-(void)_updateRouteSelectionIfNeeded;
-(void)routePickingBarChoseShare:(id)arg1 ;
-(id)initWithProvider:(id)arg1 presentDirectionsSearchUI:(/*^block*/id)arg2 presentDirectionsStepsListUI:(/*^block*/id)arg3 completion:(/*^block*/id)arg4 ;
-(void)_showRoutesForProviderChange;
-(void)_showInitialRouteRegionIfNeededAnimated:(char)arg1 ;
-(void)_moveToVariant:(int)arg1 ;
-(void)routePickingBarChoseClear:(id)arg1 ;
-(void)cancelRoutingApps;
-(void)routingAppsRequestedBySession:(id)arg1 ;
-(void)_userDidSelectVariant:(int)arg1 ;
-(void)_clearLastViewModes;
-(void)_restoreHiddenSelectionAnimated:(char)arg1 ;
-(CGSize)_routeDisplayPaddingSizeForRoutes:(id)arg1 ;
-(void)routePickingBar:(id)arg1 changedToVariant:(int)arg2 ;
-(id)_bar;
-(void)_updateViewModeForSelectedVariant;
-(void)_updateSelectedAndSelectableVariantsForAllModeSelectors;
-(void)updateContainerFrameIfNeeded;
-(int)_appearanceForSearchResultIfAvailable:(id)arg1 ;
-(id)routePickingBarTextForDepartureLocation:(id)arg1 ;
-(void)routePickingBarChoseToShowDirectionsSheet:(id)arg1 ;
-(id)_selectableVariantsForTransportTypes:(id)arg1 ;
-(void)_showDirectionsStepsListWithPositioning:(/*^block*/id)arg1 ;
-(Class)_classForSessionForCurrentState;
-(void)updateSidebarModeSelectorIfNeeded;
-(int)routePickingBarAppearanceForDepartureLocation:(id)arg1 ;
-(id)sidebarSeparator;
-(id)routePickingBarTextForArrivalLocation:(id)arg1 ;
-(void)session:(id)arg1 didSelectRoute:(id)arg2 ;
-(void)_invokeCompletionWithOutcome:(int)arg1 ;
-(char)routePickingBar:(id)arg1 canShowDirectionsStepsListControlForVariant:(int)arg2 ;
-(void)_handleTapToSwitchRoutes:(id)arg1 ;
-(char)_isVariant:(int)arg1 compatibleWithViewMode:(int)arg2 ;
-(void)showDirectionsStepsListWithPositioning:(/*^block*/id)arg1 forSession:(id)arg2 ;
-(void)_mainActionButtonTapped:(id)arg1 ;
-(void)routePickingSessionDidSelectShare:(id)arg1 ;
-(void)beginLoadingRoutesAfterSession:(id)arg1 fromWaypoint:(id)arg2 toWaypoint:(id)arg3 mode:(unsigned)arg4 timepoint:(SCD_Struct_Ro12)arg5 sortOption:(int)arg6 routeHandle:(id)arg7 ;
-(int)routePickingBarAppearanceForArrivalLocation:(id)arg1 ;
-(int)_lastViewModeCompatibleWithVariant:(int)arg1 ;
-(int)_preferredVariantForViewMode:(int)arg1 ;
-(void)setDisallowedViewModes:(id)arg1 preferredViewMode:(int)arg2 forSession:(id)arg3 ;
-(void)_moveToSession:(id)arg1 loading:(char)arg2 withAnimation:(id)arg3 ;
-(void)updatePresentationStyleIfNeeded;
-(void)setOverriddenViewMode:(int)arg1 forSession:(id)arg2 ;
-(char)isPresentingShareSheet;
-(void)_moveToLoadingWithAnimation:(id)arg1 ;
-(void)_restoreMapTypeMovingToNewSession:(char)arg1 ;
-(id)initWithProvider:(id)arg1 variant:(int)arg2 presentDirectionsSearchUI:(/*^block*/id)arg3 presentDirectionsStepsListUI:(/*^block*/id)arg4 completion:(/*^block*/id)arg5 ;
-(void)dismissShareSheet:(char)arg1 ;
-(void)goToAllRoutesAnimated:(char)arg1 forSession:(id)arg2 completion:(/*^block*/id)arg3 ;
-(CGRect)fullScreenFrameInView:(id)arg1 ;
-(void)_goToAllRoutesAnimated:(char)arg1 completion:(/*^block*/id)arg2 ;
-(char)mapView:(id)arg1 shouldReceiveTouch:(id)arg2 ;
-(void)mapView:(id)arg1 canEnter3DModeDidChange:(char)arg2 ;
-(void)mapView:(id)arg1 didSelectLabelMarker:(id)arg2 ;
-(void)mapView:(id)arg1 regionWillChangeAnimated:(char)arg2 ;
-(void)mapView:(id)arg1 regionDidChangeAnimated:(char)arg2 ;
-(void)mapView:(id)arg1 didSelectAnnotationView:(id)arg2 ;
-(id)mainActionButton;
-(id<RoutePickingSelectionDelegate>)selectionDelegate;
-(void)setSelectionDelegate:(id<RoutePickingSelectionDelegate>)arg1 ;
-(void)dealloc;
-(id)init;
-(id)containerView;
-(unsigned)supportedInterfaceOrientations;
-(char)shouldAutorotate;
-(int)presentationStyle;
-(void)didRotate;
-(id)currentSession;
-(id<RoutePickingProvider>)provider;
-(char)canDisplayError:(id)arg1 ;
@end

