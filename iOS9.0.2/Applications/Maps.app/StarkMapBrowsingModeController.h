/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 6, 2015 at 5:12:33 PM Japan Standard Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /Applications/Maps.app/Maps
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <Maps/MKMapViewDelegatePrivate.h>
#import <Maps/StarkIndirectPanControllerDelegate.h>
#import <Maps/StarkMapBrowsingTrackingDelegate.h>
#import <Maps/StarkRouteGeniusModeDelegate.h>
#import <Maps/StarkChromeModeController.h>

@protocol MapsChromeViews, StarkMapBrowsingMode;
@class UINavigationItem, StarkUserTrackingButton, StarkIndirectPanController, UITapGestureRecognizer, UIBarButtonItem, UILongPressGestureRecognizer, UIView, MapsChromeViewController, StarkMapBrowsingTrackingController, NSString, ChromeViewController;

@interface StarkMapBrowsingModeController : NSObject <MKMapViewDelegatePrivate, StarkIndirectPanControllerDelegate, StarkMapBrowsingTrackingDelegate, StarkRouteGeniusModeDelegate, StarkChromeModeController> {

	char _didSetInitialTracking;
	id<MapsChromeViews> _views;
	UINavigationItem* _navigationItem;
	StarkUserTrackingButton* _trackingButton;
	StarkIndirectPanController* _panController;
	UITapGestureRecognizer* _exitPanRecognizer;
	char _inPanMode;
	char _freezeOverlayForNavigationStartup;
	UIBarButtonItem* _threeDItem;
	UIBarButtonItem* _zoomInItem;
	UIBarButtonItem* _zoomOutItem;
	UIBarButtonItem* _destinationsItem;
	UIBarButtonItem* _panItem;
	UITapGestureRecognizer* _leftTapRecognizer;
	UILongPressGestureRecognizer* _leftLongPressRecognizer;
	UITapGestureRecognizer* _rightTapRecognizer;
	UILongPressGestureRecognizer* _rightLongPressRecognizer;
	UITapGestureRecognizer* _upTapRecognizer;
	UILongPressGestureRecognizer* _upLongPressRecognizer;
	UITapGestureRecognizer* _downTapRecognizer;
	UILongPressGestureRecognizer* _downLongPressRecognizer;
	id<StarkMapBrowsingMode> _currentMode;
	UIView* _gestureRecognizerView;
	MapsChromeViewController* _chromeViewController;
	StarkMapBrowsingTrackingController* _trackingController;

}

@property (nonatomic,retain) StarkMapBrowsingTrackingController * trackingController;              //@synthesize trackingController=_trackingController - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (assign,nonatomic) ChromeViewController * chromeViewController; 
@property (nonatomic,__weak,readonly) UIView * preferredFocusedView; 
-(id)_searchPinsManager;
-(char)shouldTimeoutAfterDisconnect;
-(ChromeViewController *)chromeViewController;
-(void)setChromeViewController:(ChromeViewController *)arg1 ;
-(id)starkChromeViewController;
-(void)layoutForInteractionModelChange;
-(void)modeWasSelected;
-(id)overlayItemsForState:(id)arg1 ;
-(char)starkTopBarModifiesInsets;
-(id)parentFocusEnvironment;
-(void)modeDidAppear:(char)arg1 ;
-(void)resignCurrentModeAnimated:(char)arg1 toMode:(id)arg2 ;
-(void)willProvideAnnotationView:(id)arg1 forAnnotation:(id)arg2 ;
-(void)layoutForUnobscuredBoundsChange;
-(void)becomeCurrentModeWithViews:(id)arg1 animated:(char)arg2 state:(id)arg3 fromMode:(id)arg4 ;
-(void)_handleBack:(id)arg1 ;
-(void)_updateAutohideBehavior;
-(void)_updateZoomButtons;
-(void)routeGeniusModeExpandedSign:(id)arg1 ;
-(void)_zoomByFactor:(float)arg1 onUserLocation:(char)arg2 ;
-(void)_update3DButtonAnimated:(char)arg1 ;
-(void)_startPan;
-(void)routeGeniusLoadingDidFinish:(id)arg1 withError:(id)arg2 ;
-(void)_presentDestinations;
-(void)trackingController:(id)arg1 changedToForcedTrackingMode:(int)arg2 ;
-(void)setCurrentMode:(id)arg1 animated:(char)arg2 ;
-(void)_setInitialTrackingIfNeededAndPossible;
-(void)_endPan;
-(void)_addPanRecognizers;
-(void)_idleTimeoutWithNotification:(id)arg1 ;
-(void)panControllerWillBeginAnimating:(id)arg1 ;
-(void)_toggle3D;
-(void)startRouteGeniusAnimated:(char)arg1 withProvider:(id)arg2 ;
-(void)panControllerDidEndAnimating:(id)arg1 ;
-(void)startRouteGeniusAnimated:(char)arg1 withTracePlayer:(id)arg2 ;
-(void)_startNavigationToLikelyRouteUpdater:(id)arg1 WithGuidance:(char)arg2 ;
-(char)_inRouteGenius;
-(void)stopRouteGeniusAnimated:(char)arg1 forNavigation:(char)arg2 ;
-(void)_mapViewGestured;
-(StarkMapBrowsingTrackingController *)trackingController;
-(void)willEnterPanModeWithAnimation:(id)arg1 ;
-(void)setTrackingController:(StarkMapBrowsingTrackingController *)arg1 ;
-(char)handlesPress:(id)arg1 ;
-(id)_currentRouteGeniusMode;
-(int)_eventDirectionForButtonType:(int)arg1 ;
-(void)_removePanRecognizers;
-(void)mapView:(id)arg1 canZoomOutDidChange:(char)arg2 ;
-(void)mapView:(id)arg1 canZoomInDidChange:(char)arg2 ;
-(void)_zoomOut;
-(void)_zoomIn;
-(void)mapView:(id)arg1 didStopRespondingToGesture:(int)arg2 zoomDirection:(int)arg3 didDecelerate:(char)arg4 ;
-(void)mapView:(id)arg1 didChangeUserTrackingMode:(int)arg2 animated:(char)arg3 fromTrackingButton:(char)arg4 ;
-(void)mapView:(id)arg1 willStartRespondingToGesture:(int)arg2 animated:(char)arg3 ;
-(void)mapView:(id)arg1 canEnter3DModeDidChange:(char)arg2 ;
-(void)mapView:(id)arg1 didBecomePitched:(char)arg2 ;
-(void)mapView:(id)arg1 regionDidChangeAnimated:(char)arg2 ;
-(id)mapView:(id)arg1 viewForAnnotation:(id)arg2 ;
-(void)mapView:(id)arg1 didUpdateUserLocation:(id)arg2 ;
-(void)_updateNavigationItemAnimated:(char)arg1 ;
-(void)dealloc;
-(id)init;
-(id)navigationItem;
-(char)pressesBegan:(id)arg1 withEvent:(id)arg2 ;
-(char)pressesEnded:(id)arg1 withEvent:(id)arg2 ;
-(char)pressesCancelled:(id)arg1 withEvent:(id)arg2 ;
-(void)setNeedsFocusUpdate;
-(char)pressesChanged:(id)arg1 withEvent:(id)arg2 ;
-(UIView *)preferredFocusedView;
-(void)updateFocusIfNeeded;
-(char)shouldUpdateFocusInContext:(id)arg1 ;
-(void)didUpdateFocusInContext:(id)arg1 withAnimationCoordinator:(id)arg2 ;
-(void)handleLongPress:(id)arg1 ;
-(void)handleTap:(id)arg1 ;
-(id)viewState;
@end

