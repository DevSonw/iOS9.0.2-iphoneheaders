/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 6, 2015 at 5:12:32 PM Japan Standard Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /Applications/Maps.app/Maps
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <Maps/Presenter.h>

@protocol TraitsChangeObserving;
@class AdaptivePresenterChoice, NSMutableArray, Presenter;

@interface AdaptivePresenter : Presenter {

	AdaptivePresenterChoice* _defaultChoice;
	NSMutableArray* _overrides;
	id<TraitsChangeObserving> _traitsObservingSource;
	AdaptivePresenterChoice* _currentChoice;
	char _mustRepresentForTraitsChange;
	/*^block*/id _pendingPresentationCompletion;
	Presenter* _currentChildPresenter;
	/*^block*/id _willMoveToNewPresenterHandler;

}

@property (nonatomic,copy) id willMoveToNewPresenterHandler;                   //@synthesize willMoveToNewPresenterHandler=_willMoveToNewPresenterHandler - In the implementation block
@property (nonatomic,readonly) Presenter * currentChildPresenter;              //@synthesize currentChildPresenter=_currentChildPresenter - In the implementation block
+(id)navigationPresenterForContentViewController:(id)arg1 rootViewControllerNotificationName:(id)arg2 willAdaptToNewPresentation:(/*^block*/id)arg3 ;
+(id)navigationPresenterForContentViewController:(id)arg1 rootViewControllerNotificationName:(id)arg2 willAdaptToNewPresentation:(/*^block*/id)arg3 didDismissViewController:(/*^block*/id)arg4 ;
+(id)placeCardPresenterForContentViewController:(id)arg1 withPresentionChangeHandler:(/*^block*/id)arg2 ;
+(id)modalOrPopoverPresenterForViewController:(id)arg1 dismissalBlock:(/*^block*/id)arg2 ;
+(id)modalOrPopoverPresenterForViewController:(id)arg1 modalPresentationStyle:(int)arg2 dismissalBlock:(/*^block*/id)arg3 ;
+(id)modalFormSheetWhenPossibleForViewController:(id)arg1 dismissalBlock:(/*^block*/id)arg2 ;
+(id)modalOrPopoverPresenterForViewController:(id)arg1 modalPresentationStyle:(int)arg2 adaptivePresentationStyle:(int)arg3 dismissalBlock:(/*^block*/id)arg4 ;
-(void)_performPresentationOfViewController:(id)arg1 fromViewController:(id)arg2 animated:(char)arg3 completion:(/*^block*/id)arg4 ;
-(void)_didDismiss;
-(void)_performDismissalAnimated:(char)arg1 ;
-(char)isPresentingUsingPresenterOfClass:(Class)arg1 ;
-(id)_choiceMatchingCurrentTraits;
-(id)when:(id)arg1 usePresenterCreatedFromBlock:(/*^block*/id)arg2 ;
-(id)initWithPresentedViewController:(id)arg1 defaultPresenterClass:(Class)arg2 dismissalBlock:(/*^block*/id)arg3 ;
-(id)initWithPresentedViewController:(id)arg1 defaultPresenterCreationBlock:(/*^block*/id)arg2 dismissalBlock:(/*^block*/id)arg3 ;
-(id)willMoveToNewPresenterHandler;
-(id)_choiceMatchingTraitsForSource:(id)arg1 ;
-(id)defaultChoice;
-(void)removeOverrideForCondition:(id)arg1 ;
-(id)when:(id)arg1 usePresenterCreatedFromBlock:(/*^block*/id)arg2 opaque:(char)arg3 ;
-(char)_traitsConditionIsMatching:(id)arg1 fromTraitsSource:(id)arg2 ;
-(void)_representIfNeededAnimated:(char)arg1 completion:(/*^block*/id)arg2 ;
-(char)presentationFromViewController:(id)arg1 matchesOrWillMatchChoice:(id)arg2 ;
-(void)_didDismissChildPresenter:(id)arg1 ;
-(id)_newChildPresenterFromChoice:(id)arg1 ;
-(id)currentChildPresenterIfOfClass:(Class)arg1 ;
-(char)presentationMatchesChoice:(id)arg1 ;
-(id)initWithPresentedViewController:(id)arg1 defaultPresenterCreationBlock:(/*^block*/id)arg2 opaque:(char)arg3 dismissalBlock:(/*^block*/id)arg4 ;
-(Presenter *)currentChildPresenter;
-(void)setWillMoveToNewPresenterHandler:(id)arg1 ;
-(id)when:(id)arg1 usePresenterOfClass:(Class)arg2 ;
-(id)choiceForPresentingFromViewController:(id)arg1 ;
@end

