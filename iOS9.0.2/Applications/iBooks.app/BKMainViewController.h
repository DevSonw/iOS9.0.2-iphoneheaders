/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 6, 2015 at 5:12:12 PM Japan Standard Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /Applications/iBooks.app/iBooks
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <iBooks/iBooks-Structs.h>
#import <iBooks/BKViewController.h>
#import <iBooks/AEAssetAppearanceDelegate.h>
#import <UIKit/UIViewControllerTransitioningDelegate.h>
#import <UIKit/UIGestureRecognizerDelegate.h>
#import <iBooks/BKSKUIApplicationDelegate.h>
#import <libobjc.A.dylib/SKUILibraryInterface.h>
#import <iBooks/IMFlowControllerHosting.h>
#import <iBooks/BKMainFlowControllerDelegate.h>
#import <iBooks/IMRenderingCacheCallback.h>
#import <libobjc.A.dylib/MCProfileConnectionObserver.h>
#import <libobjc.A.dylib/SKStoreProductViewControllerDelegate.h>
#import <UIKit/UIPopoverPresentationControllerDelegate.h>

@class BKLibraryController, UIView, UIViewController, NSManagedObjectContext, NSString, BKIKJSIBooksTheme, IMPerformSelectorProxy, BKLibraryViewController, BKSKUIApplicationController, BKSKTabBarQuery, BKMainFlowController, BKBookFlowController, BKStoreFlowController, UINavigationController, IMInfoHUD, BKStoreController;

@interface BKMainViewController : BKViewController <AEAssetAppearanceDelegate, UIViewControllerTransitioningDelegate, UIGestureRecognizerDelegate, BKSKUIApplicationDelegate, SKUILibraryInterface, IMFlowControllerHosting, BKMainFlowControllerDelegate, IMRenderingCacheCallback, MCProfileConnectionObserver, SKStoreProductViewControllerDelegate, UIPopoverPresentationControllerDelegate> {

	BKLibraryController* _libraryController;
	UIView* _loadingView;
	UIViewController* _topViewController;
	NSManagedObjectContext* _moc;
	UIViewController* _targetViewController;
	NSString* _transitionToStoreItemID;
	CGRect _transitionToStoreRect;
	CGSize _lastKnownSize;
	char _onActiveShouldResumeApplication;
	BKIKJSIBooksTheme* _jsiBooksTheme;
	char _pushLargeCoverForNextHandleURLBookOpen;
	char _pushLargeCoverForInitialHandleURLBookOpen;
	char _lightLevelControllerObserving;
	NSString* _openedBookCollectionIdentifier;
	CGSize _openedBookCoverImageSize;
	char _userInitiatedBookOpen;
	char _showingHUD;
	char _hasShownHUDInLibrary;
	IMPerformSelectorProxy* _performSelectorProxy;
	BKLibraryViewController* _libraryViewController;
	BKSKUIApplicationController* _skApplicationController;
	BKSKTabBarQuery* _tabBarQuery;
	BKMainFlowController* _mainFlowController;
	BKBookFlowController* _bookFlowController;
	BKStoreFlowController* _storeFlowController;
	UIViewController* _lockedStatusBarViewController;
	UINavigationController* _libraryNavigationController;
	IMInfoHUD* _storeRequiresFullScreenHUD;

}

@property (nonatomic,readonly) NSManagedObjectContext * moc;                                     //@synthesize moc=_moc - In the implementation block
@property (nonatomic,readonly) BKLibraryController * libraryController;                          //@synthesize libraryController=_libraryController - In the implementation block
@property (nonatomic,readonly) BKStoreController * storeController; 
@property (assign,nonatomic) char userInitiatedBookOpen;                                         //@synthesize userInitiatedBookOpen=_userInitiatedBookOpen - In the implementation block
@property (nonatomic,retain) BKLibraryViewController * libraryViewController;                    //@synthesize libraryViewController=_libraryViewController - In the implementation block
@property (nonatomic,retain) BKSKUIApplicationController * skApplicationController;              //@synthesize skApplicationController=_skApplicationController - In the implementation block
@property (nonatomic,retain) BKSKTabBarQuery * tabBarQuery;                                      //@synthesize tabBarQuery=_tabBarQuery - In the implementation block
@property (nonatomic,readonly) IMPerformSelectorProxy * performSelectorProxy;                    //@synthesize performSelectorProxy=_performSelectorProxy - In the implementation block
@property (nonatomic,retain) BKMainFlowController * mainFlowController;                          //@synthesize mainFlowController=_mainFlowController - In the implementation block
@property (nonatomic,retain) BKBookFlowController * bookFlowController;                          //@synthesize bookFlowController=_bookFlowController - In the implementation block
@property (nonatomic,retain) BKStoreFlowController * storeFlowController;                        //@synthesize storeFlowController=_storeFlowController - In the implementation block
@property (nonatomic,readonly) id<BKStorePresenting> storePresenter; 
@property (nonatomic,readonly) id<BKBookPresenting> bookPresenter; 
@property (nonatomic,readonly) id<BKMainPresenting> mainPresenter; 
@property (nonatomic,retain) UIViewController * lockedStatusBarViewController;                   //@synthesize lockedStatusBarViewController=_lockedStatusBarViewController - In the implementation block
@property (nonatomic,retain) UINavigationController * libraryNavigationController;               //@synthesize libraryNavigationController=_libraryNavigationController - In the implementation block
@property (nonatomic,retain) IMInfoHUD * storeRequiresFullScreenHUD;                             //@synthesize storeRequiresFullScreenHUD=_storeRequiresFullScreenHUD - In the implementation block
@property (assign,nonatomic) char showingHUD;                                                    //@synthesize showingHUD=_showingHUD - In the implementation block
@property (assign,nonatomic) char hasShownHUDInLibrary;                                          //@synthesize hasShownHUDInLibrary=_hasShownHUDInLibrary - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(id<BKBookPresenting>)bookPresenter;
-(id)mainViewController;
-(BKSKTabBarQuery *)tabBarQuery;
-(char)_isTabWithIdentifierCurrent:(id)arg1 ;
-(BKStoreController *)storeController;
-(void)_enableAutoNightModeMonitoringAnimated:(char)arg1 ;
-(void)_storeAvailableUpdatesChangedNotification:(id)arg1 ;
-(void)_libraryDidLoad:(id)arg1 ;
-(BKSKUIApplicationController *)skApplicationController;
-(void)setTabBarQuery:(BKSKTabBarQuery *)arg1 ;
-(void)_populateStoreTabBarWithTabBarInfos:(id)arg1 animated:(char)arg2 ;
-(void)setMainFlowController:(BKMainFlowController *)arg1 ;
-(BKMainFlowController *)mainFlowController;
-(void)setBookFlowController:(BKBookFlowController *)arg1 ;
-(BKBookFlowController *)bookFlowController;
-(void)setStoreFlowController:(BKStoreFlowController *)arg1 ;
-(BKStoreFlowController *)storeFlowController;
-(id<BKStorePresenting>)storePresenter;
-(void)_disableAutoNightModeMonitoringAnimated:(char)arg1 ;
-(void)releaseViews;
-(void)_updateCurrentUpdatesCount;
-(void)_updateCurrentThemeAnimated:(char)arg1 ;
-(void)_hideTabBarAnimated:(char)arg1 ;
-(void)assetAppearanceDidChange:(id)arg1 ;
-(void)_ensureLibraryTabIsSelected;
-(void)adjustStoreAndTabBarVisibility:(char)arg1 ;
-(UINavigationController *)libraryNavigationController;
-(void)_updateOrientationBasedOnTargetViewController;
-(void)setAnimationSpeedForView:(id)arg1 speed:(float)arg2 ;
-(void)setAnimationSpeedForSubViews:(id)arg1 speed:(float)arg2 ;
-(void)resumeAnimationsForView:(id)arg1 speed:(float)arg2 ;
-(void)updateAnimationTimeOffsetForView:(id)arg1 offset:(float)arg2 ;
-(void)p_viewWillTransitionToSize:(CGSize)arg1 ;
-(void)p_didTransitionToSize:(CGSize)arg1 ;
-(char)isBookCurrentlyOpen;
-(id<BKMainPresenting>)mainPresenter;
-(BKLibraryController *)libraryController;
-(void)setLibraryViewController:(BKLibraryViewController *)arg1 ;
-(void)setLibraryNavigationController:(UINavigationController *)arg1 ;
-(id)bookCollectible;
-(void)_showTabBarAnimated:(char)arg1 ;
-(IMInfoHUD *)storeRequiresFullScreenHUD;
-(void)setLockedStatusBarViewController:(UIViewController *)arg1 ;
-(void)_refreshStatusBar;
-(id)locationFromURLFragment:(id)arg1 ;
-(id)bookInfoFromIbooksSchemeURL:(id)arg1 remainingPath:(id*)arg2 canScheduleOperations:(char)arg3 ;
-(char)handleURL:(id)arg1 sourceApplication:(id)arg2 annotation:(id)arg3 isLaunch:(char)arg4 ;
-(id)_bookWithAssetURL:(id)arg1 ;
-(id)_themedBookViewController;
-(id)_themeFromBookViewController;
-(id)_familyIDTupleForBook:(id)arg1 ;
-(id)_reviseStateForFamilyStatus:(id)arg1 book:(id)arg2 rejectedTuplesCache:(id)arg3 ;
-(id)_libraryItemStateForBook:(id)arg1 rejectedTuplesCache:(id)arg2 ;
-(id)currentThemeNameForSender:(id)arg1 ;
-(id)currentTextColorForSender:(id)arg1 ;
-(id)currentBackgroundColorForSender:(id)arg1 ;
-(void)applicationDidChangeSelectedViewController:(id)arg1 ;
-(void)applicationDidChangeNavigationStack:(id)arg1 ;
-(id)flowControllers;
-(void)mainFlowController:(id)arg1 setLightLevelObservingEnabled:(char)arg2 animated:(char)arg3 ;
-(id)initWithLibraryController:(id)arg1 moc:(id)arg2 ;
-(IMPerformSelectorProxy *)performSelectorProxy;
-(void)populateTabBarItems;
-(void)pauseAnimationsForView:(id)arg1 ;
-(void)pauseAnimationsForSubViews:(id)arg1 ;
-(void)resumeAnimationsForSubViews:(id)arg1 speed:(float)arg2 ;
-(void)updateAnimationTimeOffsetForSubViews:(id)arg1 offset:(float)arg2 ;
-(void)showLibrary;
-(id)_bookInfoForAssetViewController:(id)arg1 ;
-(void)_lockStatusBarHiddenWithController:(id)arg1 ;
-(void)_unlockStatusBarHidden;
-(id)bookWithPluginAssetID:(id)arg1 ;
-(char)userInitiatedBookOpen;
-(void)setUserInitiatedBookOpen:(char)arg1 ;
-(void)setSkApplicationController:(BKSKUIApplicationController *)arg1 ;
-(UIViewController *)lockedStatusBarViewController;
-(void)setStoreRequiresFullScreenHUD:(IMInfoHUD *)arg1 ;
-(char)showingHUD;
-(void)setShowingHUD:(char)arg1 ;
-(char)hasShownHUDInLibrary;
-(void)setHasShownHUDInLibrary:(char)arg1 ;
-(void)_applicationDidBecomeActiveNotification:(id)arg1 ;
-(void)profileConnectionDidReceiveEffectiveSettingsChangedNotification:(id)arg1 userInfo:(id)arg2 ;
-(void)saveState;
-(void)dealloc;
-(void)traitCollectionDidChange:(id)arg1 ;
-(void)applicationDidBecomeActive:(id)arg1 ;
-(void)applicationWillResignActive:(id)arg1 ;
-(unsigned)supportedInterfaceOrientations;
-(char)shouldAutorotate;
-(void)loadView;
-(char)window:(id)arg1 shouldAutorotateToInterfaceOrientation:(int)arg2 ;
-(void)viewWillTransitionToSize:(CGSize)arg1 withTransitionCoordinator:(id)arg2 ;
-(void)viewWillAppear:(char)arg1 ;
-(void)viewDidLoad;
-(void)viewDidAppear:(char)arg1 ;
-(id)animationControllerForPresentedController:(id)arg1 presentingController:(id)arg2 sourceController:(id)arg3 ;
-(id)interactionControllerForPresentation:(id)arg1 ;
-(id)animationControllerForDismissedController:(id)arg1 ;
-(id)interactionControllerForDismissal:(id)arg1 ;
-(void)_getRotationContentSettings:(SCD_Struct_BK4*)arg1 ;
-(id)childViewControllerForStatusBarStyle;
-(id)childViewControllerForStatusBarHidden;
-(BKLibraryViewController *)libraryViewController;
-(NSManagedObjectContext *)moc;
-(void)_applicationWillResignActiveNotification:(id)arg1 ;
-(id)stateForLibraryItem:(id)arg1 ;
-(char)performActionForLibraryItem:(id)arg1 ;
-(id)exposedPlatformItemKinds;
-(void)enumerateStatesForLibraryItems:(id)arg1 usingBlock:(/*^block*/id)arg2 ;
-(void)application:(id)arg1 didCompletePurchase:(id)arg2 ;
-(void)application:(id)arg1 evaluateAppJavaScriptInContext:(id)arg2 JSContext:(id)arg3 ;
-(void)application:(id)arg1 didFailToLoadWithError:(id)arg2 ;
-(id)application:(id)arg1 navigationControllerWithTabBarItem:(id)arg2 ;
-(void)applicationDidChangeClientContext:(id)arg1 ;
-(id)legacyScriptInterfaceForApplication:(id)arg1 ;
@end

