/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 6, 2015 at 5:12:22 PM Japan Standard Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /Applications/iBooks.app/iBooks
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <iBooks/KNAnimationPluginContext.h>
@class NSArray, KNAnimatedBuild, NSDictionary;


@protocol KNAnimationPluginContext <NSObject>
@property (nonatomic,readonly) NSArray * textures; 
@property (nonatomic,readonly) unsigned direction; 
@property (nonatomic,readonly) double duration; 
@property (nonatomic,readonly) double percent; 
@property (nonatomic,readonly) KNAnimatedBuild * animatedBuild; 
@property (nonatomic,readonly) NSDictionary * transitionAttributes; 
@property (nonatomic,readonly) NSArray * magicMoveMatches; 
@property (nonatomic,readonly) char isBuild; 
@property (nonatomic,readonly) char isTransition; 
@property (nonatomic,readonly) char isMagicMove; 
@property (nonatomic,readonly) char isFrameRenderer; 
@property (nonatomic,readonly) char isWarmingUp; 
@required
-(NSDictionary *)transitionAttributes;
-(char)isBuild;
-(NSArray *)magicMoveMatches;
-(char)isFrameRenderer;
-(KNAnimatedBuild *)animatedBuild;
-(char)isTransition;
-(char)isWarmingUp;
-(char)isMagicMove;
-(double)duration;
-(unsigned)direction;
-(NSArray *)textures;
-(double)percent;

@end


@class NSArray, KNAnimatedBuild, NSDictionary, NSString;

@interface KNAnimationPluginContext : NSObject <KNAnimationPluginContext> {

	char _isWarmingUp;
	KNAnimatedBuild* _animatedBuild;
	NSArray* _magicMoveMatches;
	NSArray* _textures;
	NSDictionary* _transitionAttributes;
	unsigned _direction;
	int _rendererType;
	double _percent;
	double _duration;

}

@property (assign,nonatomic) NSArray * textures;                               //@synthesize textures=_textures - In the implementation block
@property (assign,nonatomic) unsigned direction;                               //@synthesize direction=_direction - In the implementation block
@property (assign,nonatomic) double duration;                                  //@synthesize duration=_duration - In the implementation block
@property (assign,nonatomic) double percent;                                   //@synthesize percent=_percent - In the implementation block
@property (assign,nonatomic) KNAnimatedBuild * animatedBuild;                  //@synthesize animatedBuild=_animatedBuild - In the implementation block
@property (assign,nonatomic) NSDictionary * transitionAttributes;              //@synthesize transitionAttributes=_transitionAttributes - In the implementation block
@property (assign,nonatomic) NSArray * magicMoveMatches;                       //@synthesize magicMoveMatches=_magicMoveMatches - In the implementation block
@property (assign,nonatomic) char isWarmingUp;                                 //@synthesize isWarmingUp=_isWarmingUp - In the implementation block
@property (assign,nonatomic) int rendererType;                                 //@synthesize rendererType=_rendererType - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) char isBuild; 
@property (nonatomic,readonly) char isTransition; 
@property (nonatomic,readonly) char isMagicMove; 
@property (nonatomic,readonly) char isFrameRenderer; 
-(void)setAnimatedBuild:(KNAnimatedBuild *)arg1 ;
-(NSDictionary *)transitionAttributes;
-(int)rendererType;
-(char)isBuild;
-(NSArray *)magicMoveMatches;
-(char)isFrameRenderer;
-(KNAnimatedBuild *)animatedBuild;
-(char)isTransition;
-(char)isWarmingUp;
-(void)setMagicMoveMatches:(NSArray *)arg1 ;
-(void)setTransitionAttributes:(NSDictionary *)arg1 ;
-(void)setIsWarmingUp:(char)arg1 ;
-(void)setRendererType:(int)arg1 ;
-(char)isMagicMove;
-(NSString *)description;
-(double)duration;
-(void)setDuration:(double)arg1 ;
-(void)setDirection:(unsigned)arg1 ;
-(unsigned)direction;
-(void)setTextures:(NSArray *)arg1 ;
-(NSArray *)textures;
-(double)percent;
-(void)setPercent:(double)arg1 ;
@end

