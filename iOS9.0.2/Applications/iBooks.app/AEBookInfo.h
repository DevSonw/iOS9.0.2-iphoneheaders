/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 6, 2015 at 5:12:20 PM Japan Standard Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /Applications/iBooks.app/iBooks
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <iBooks/iBooks-Structs.h>
#import <CoreData/NSManagedObject.h>
#import <iBooks/AEAsset.h>

@class NSURL, NSString, NSArray, NSDictionary, NSNumber, NSOperationQueue, NSManagedObjectContext, AEAnnotationProvider, NSDate, NSSet, NSOrthography, BKLocation;

@interface AEBookInfo : NSManagedObject <AEAsset> {

	NSURL* _baseUrl;
	NSURL* _url;
	NSString* _basePlusContentPath;
	NSString* _password;
	unsigned _readingDocumentCount;
	NSArray* _sortedDocuments;
	NSArray* _linearDocuments;
	int _linearDocumentCount;
	char _mediaOverlayElementCountValid;
	int _mediaOverlayElementCount;
	NSDictionary* _linearOrdinalMap;
	NSNumber* _shouldDisableOptimizeSpeed;
	char _annotationsManagedObjectContextLoaded;
	char _shouldKeepAnnotationsFresh;
	NSNumber* isPreorder;
	NSOperationQueue* _queue;
	NSManagedObjectContext* _annotationsManagedObjectContext;
	AEAnnotationProvider* _annotationProvider;

}

@property (nonatomic,retain) NSString * aeAssetType; 
@property (nonatomic,retain) NSString * databaseKey; 
@property (nonatomic,retain) NSString * bookUniqueId; 
@property (nonatomic,retain) NSString * bookEpubId; 
@property (nonatomic,retain) NSString * bookBundlePath; 
@property (nonatomic,retain) NSString * bookContentSubpath; 
@property (nonatomic,retain) NSString * bookAuthor; 
@property (nonatomic,retain) NSString * bookTitle; 
@property (nonatomic,retain) NSString * coverWritingModeString; 
@property (nonatomic,retain) NSString * sortAuthor; 
@property (nonatomic,retain) NSString * sortTitle; 
@property (nonatomic,retain) NSString * bookLanguage; 
@property (nonatomic,retain) NSString * genre; 
@property (nonatomic,readonly) NSString * shortBookTitle; 
@property (nonatomic,retain) NSDate * dateAdded; 
@property (nonatomic,retain) NSDate * dateLastOpened; 
@property (nonatomic,retain) NSString * dcTermsContributor; 
@property (nonatomic,retain) NSString * dcTermsModified; 
@property (nonatomic,retain) NSString * embeddedArtHref; 
@property (nonatomic,retain) NSNumber * embeddedArtHrefRejected; 
@property (nonatomic,retain) NSString * genericCoverTemplate; 
@property (nonatomic,retain) NSString * iTunesArtHref; 
@property (nonatomic,retain) NSString * iTunesArtChecksum; 
@property (nonatomic,retain) NSString * tocPageHref; 
@property (nonatomic,retain) NSString * tocIdCssRules; 
@property (nonatomic,retain) NSNumber * tocIsVertical; 
@property (nonatomic,retain) NSString * firstDocumentHref; 
@property (nonatomic,retain) NSNumber * sortKey; 
@property (nonatomic,retain) NSNumber * fileSize; 
@property (nonatomic,retain) NSNumber * useGlobalContentStyle; 
@property (nonatomic,retain) NSNumber * appleDisplayOptions; 
@property (nonatomic,retain) NSNumber * fixedLayoutWidth; 
@property (nonatomic,retain) NSNumber * fixedLayoutHeight; 
@property (nonatomic,retain) NSString * fixedLayoutSpread; 
@property (nonatomic,retain) NSString * pageProgressionDirection; 
@property (nonatomic,retain) NSString * scrollDirection; 
@property (nonatomic,retain) NSString * temporaryItemIdentifier; 
@property (nonatomic,retain) NSNumber * isPreorder; 
@property (nonatomic,retain) NSNumber * explicitContent; 
@property (nonatomic,retain) NSNumber * sampleContent; 
@property (nonatomic,retain) NSString * storeId; 
@property (nonatomic,retain) NSNumber * storeFrontId; 
@property (nonatomic,retain) NSNumber * isNew; 
@property (nonatomic,retain) NSNumber * isPasswordRequired; 
@property (nonatomic,retain) NSNumber * isDownloading; 
@property (nonatomic,retain) NSNumber * isPromisedAsset; 
@property (nonatomic,retain) NSNumber * isProofingAsset; 
@property (nonatomic,retain) NSNumber * deletedFlag; 
@property (nonatomic,readonly) char shouldDisableOptimizeSpeed; 
@property (nonatomic,retain) NSString * mediaActiveClass; 
@property (nonatomic,retain) NSString * respectImageSizeClass; 
@property (assign,nonatomic) char respectImageSizeClassIsPrefix; 
@property (nonatomic,retain) NSString * persistentCachePath; 
@property (nonatomic,retain) NSString * publisherName; 
@property (nonatomic,retain) NSString * publisherLocation; 
@property (nonatomic,retain) NSString * publisherYear; 
@property (nonatomic,retain) NSString * readingDirection; 
@property (nonatomic,retain) NSNumber * spineIndexInPackage; 
@property (nonatomic,retain) NSString * parserVersion; 
@property (nonatomic,retain) NSString * parserOPFPath; 
@property (nonatomic,retain) NSString * parserNCXPath; 
@property (nonatomic,retain,readonly) NSSet * sinfInfo; 
@property (nonatomic,retain,readonly) NSSet * chapters; 
@property (nonatomic,retain,readonly) NSSet * landmarks; 
@property (nonatomic,retain,readonly) NSSet * physicalPages; 
@property (nonatomic,readonly) char hasPhysicalPages; 
@property (nonatomic,retain) NSNumber * downloadProgress; 
@property (assign,nonatomic) int contentType; 
@property (nonatomic,retain) NSOrthography * orthography; 
@property (assign,nonatomic) char currentlyDownloading; 
@property (nonatomic,retain) AEAnnotationProvider * annotationProvider;                                                                //@synthesize annotationProvider=_annotationProvider - In the implementation block
@property (nonatomic,retain,readonly) NSManagedObjectContext * annotationsManagedObjectContext;                                        //@synthesize annotationsManagedObjectContext=_annotationsManagedObjectContext - In the implementation block
@property (getter=isAnnotationsManagedObjectContextLoaded,nonatomic,readonly) char annotationsManagedObjectContextLoaded;              //@synthesize annotationsManagedObjectContextLoaded=_annotationsManagedObjectContextLoaded - In the implementation block
@property (nonatomic,copy) NSString * password;                                                                                        //@synthesize password=_password - In the implementation block
@property (nonatomic,retain) BKLocation * readingLocation; 
@property (nonatomic,retain,readonly) BKLocation * firstDocumentLocation; 
@property (retain) NSOperationQueue * queue;                                                                                           //@synthesize queue=_queue - In the implementation block
@property (assign) char shouldKeepAnnotationsFresh;                                                                                    //@synthesize shouldKeepAnnotationsFresh=_shouldKeepAnnotationsFresh - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)excludeDeletedBooksPredicate;
+(id)bookFromDatabaseKey:(id)arg1 withMOC:(id)arg2 ;
+(id)databaseKeyFromStoreId:(id)arg1 andUniqueId:(id)arg2 ;
+(id)newBlankBook:(id)arg1 ;
+(int)bookFormatByFilePath:(id)arg1 ;
+(int)bookFormatByExtension:(id)arg1 ;
+(id)linearDocumentPredicateForDatabaseKey:(id)arg1 ;
+(char)isUndesirableImageData:(id)arg1 ;
+(id)defaultAnnotationCreatorIdentifier;
+(id)booksWithPredicate:(id)arg1 sortBy:(id)arg2 ascending:(char)arg3 fetchLimit:(int)arg4 inMoc:(id)arg5 ;
+(id)booksWithPredicate:(id)arg1 sortDescriptors:(id)arg2 inMoc:(id)arg3 ;
+(id)booksWithPredicate:(id)arg1 inMoc:(id)arg2 ;
+(id)bookObjectIDsWithPredicate:(id)arg1 inMoc:(id)arg2 ;
-(char)isFixedLayout;
-(char)isStoreBook;
-(char)currentlyDownloading;
-(id)assetID;
-(NSString *)shortBookTitle;
-(char)isManagedBook;
-(void)setBookTitle:(NSString *)arg1 ;
-(void)setBookAuthor:(NSString *)arg1 ;
-(void)setSortAuthor:(NSString *)arg1 ;
-(void)setupFileSizeContentType;
-(void)setTemporaryItemIdentifier:(NSString *)arg1 ;
-(void)setAnnotationProvider:(AEAnnotationProvider *)arg1 ;
-(AEAnnotationProvider *)annotationProvider;
-(void)_clearTransient;
-(void)setPublisherName:(NSString *)arg1 ;
-(void)setPublisherLocation:(NSString *)arg1 ;
-(void)setPublisherYear:(NSString *)arg1 ;
-(char)needsGenericCoverArt;
-(char)isReadyToOpen;
-(char)hasMediaOverlayElements;
-(void)deleteAnnotation:(id)arg1 ;
-(BKLocation *)readingLocation;
-(CGSize)fixedLayoutSize;
-(char)shouldDisableOptimizeSpeed;
-(int)openToSpread;
-(void)setOpenToSpread:(int)arg1 ;
-(char)hidesSpine;
-(void)resetPersistentCache;
-(id)linearDocuments;
-(void)setHidesSpine:(char)arg1 ;
-(char)hasPhysicalPages;
-(id)documentWithOrdinal:(unsigned)arg1 ;
-(id)physicalPageMapForDocument:(id)arg1 ;
-(unsigned)readingDocumentCount;
-(BKLocation *)firstDocumentLocation;
-(id)urlForHref:(id)arg1 ;
-(id)documentAtPath:(id)arg1 ;
-(id)navigationInfosForDocument:(id)arg1 ;
-(void)expandAnnotation:(id)arg1 location:(id)arg2 selectedText:(id)arg3 representativeText:(id)arg4 ;
-(id)addAnnotation:(int)arg1 location:(id)arg2 selectedText:(id)arg3 representativeText:(id)arg4 ;
-(id)urlForDocument:(id)arg1 ;
-(char)shouldAllowRemoteInspection;
-(NSManagedObjectContext *)annotationsManagedObjectContext;
-(char)obeyPageBreaks;
-(char)isScrollModeDisabled;
-(unsigned)linearIndexForOrdinal:(unsigned)arg1 ;
-(int)scrollModeOrientation;
-(char)showOriginalFontOption;
-(char)wantsJumpBackHistory;
-(void)setIsPreorder:(NSNumber *)arg1 ;
-(char)isPasswordDialogNeeded;
-(char)isCorrectPassword:(id)arg1 ;
-(id)confirmBagContents;
-(NSString *)embeddedArtHref;
-(id)sortedDocuments;
-(id)basePlusContentPath;
-(char)isLandscapeProhibited;
-(char)isPortraitProhibited;
-(void)stopKeepingAnnotationsFresh;
-(void)keepAnnotationsFresh;
-(char)isBookVersioned;
-(char)bumpReadingLocationAnnotationVersionToMinimumVersion:(id)arg1 ;
-(id)documentsWithPath:(id)arg1 sortBy:(id)arg2 limit:(int)arg3 ;
-(id)readingLocationAnnotation:(char)arg1 ;
-(void)setReadingLocation:(BKLocation *)arg1 ;
-(int)bkPageProgressionDirection;
-(id)embeddedArtHrefMinusSubpath;
-(id)embeddedArtSinf;
-(id)mimeFromHref:(id)arg1 ;
-(id)embeddedArtURL;
-(unsigned)linearDocumentCount;
-(id)physicalPageMap;
-(char)suppressTOC;
-(void)resetAsNewlyDownloaded;
-(char)wasParsed;
-(void)addSinfInfoObject:(id)arg1 ;
-(void)addChapters:(id)arg1 ;
-(void)addLandmarks:(id)arg1 ;
-(void)addPhysicalPages:(id)arg1 ;
-(void)setFixedLayout:(char)arg1 ;
-(void)setHasBuiltInFonts:(char)arg1 ;
-(void)setLandscapeProhibited:(char)arg1 ;
-(void)setPortraitProhibited:(char)arg1 ;
-(void)setObeyPageBreaks:(char)arg1 ;
-(void)addChaptersObject:(id)arg1 ;
-(void)setCurrentlyDownloading:(char)arg1 ;
-(void)setBookBundlePath:(NSString *)arg1 ;
-(char)shouldKeepAnnotationsFresh;
-(void)removeChapters:(id)arg1 ;
-(void)removeLandmarks:(id)arg1 ;
-(void)removePhysicalPages:(id)arg1 ;
-(void)removeSinfInfo:(id)arg1 ;
-(void)deleteSelfMaintainedRelationships;
-(void)deleteParsedRelationships;
-(char)isEncryptionLegal;
-(void)calculatePasswordRequired;
-(void)saveAnnotationsManagedObjectContext;
-(id)newestAnnotationWithPredicate:(id)arg1 rangeCheck:(char)arg2 ;
-(char)hasDuplicatedDocument;
-(void)_adjustAnnotation:(id)arg1 withLocation:(id)arg2 selectedText:(id)arg3 representativeText:(id)arg4 updateStyle:(char)arg5 ;
-(void)setSingletonAnnotationType:(int)arg1 location:(id)arg2 ;
-(id)_nonUpdatedAnnotationsForDocumentOrdinal:(id)arg1 ;
-(char)hasBuiltInFonts;
-(void)_setBitMask:(unsigned long long)arg1 enabled:(char)arg2 ;
-(void)_setValidMediaOverlayElementCount:(int)arg1 ;
-(char)isAnnotationsManagedObjectContextLoaded;
-(void)checkAnnotationsForDuplicatedDocuments;
-(void)addAnnotationsManagedObjectContextChangeObservers;
-(void)setShouldKeepAnnotationsFresh:(char)arg1 ;
-(void)removeAnnotationsManagedObjectContextChangeObservers;
-(id)_makeFileUrlIfPossible:(id)arg1 ;
-(char)hasReadingLocationAnnotation;
-(id)annotations:(char)arg1 ;
-(void)addLandmarksObject:(id)arg1 ;
-(void)addPhysicalPagesObject:(id)arg1 ;
-(int)orientationLock;
-(char)visibleSpine;
-(void)managedObjectContextDidSave:(id)arg1 ;
-(NSString *)password;
-(void)setPassword:(NSString *)arg1 ;
-(void)setContentType:(int)arg1 ;
-(NSNumber *)isPreorder;
-(id)annotations;
-(char)exists;
-(NSOperationQueue *)queue;
-(void)setQueue:(NSOperationQueue *)arg1 ;
-(void)dealloc;
-(char)isInteractive;
-(id)url;
-(int)contentType;
-(id)dictionaryRepresentation;
-(id)baseURL;
-(void)setInteractive:(char)arg1 ;
-(void)setupBaseURL;
-(void)setStoreId:(NSString *)arg1 ;
-(NSNumber *)storeFrontId;
-(void)didSave;
-(void)didTurnIntoFault;
-(void)setSortTitle:(NSString *)arg1 ;
-(void)setGenre:(NSString *)arg1 ;
-(id)assetType;
-(char)isProtected;
@end

