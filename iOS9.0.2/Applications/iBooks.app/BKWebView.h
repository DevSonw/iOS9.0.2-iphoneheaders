/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 6, 2015 at 5:12:20 PM Japan Standard Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /Applications/iBooks.app/iBooks
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <iBooks/iBooks-Structs.h>
#import <UIKit/UIWebView.h>
#import <UIKit/UITextInputDelegate.h>
#import <UIKit/UIGestureRecognizerDelegate.h>

@protocol BKWebViewDelegate;
@class BKWebViewMainThreadEventListener, NSURLRequest, NSURL, DOMMouseEvent, UIWebDocumentView, UITapGestureRecognizer, NSString, BKWebViewIndirector, NSBlockOperation, IMPerformSelectorProxy, IMTheme;

@interface BKWebView : UIWebView <UITextInputDelegate, UIGestureRecognizerDelegate> {

	id<BKWebViewDelegate> _bkWebViewDelegate;
	BKWebViewMainThreadEventListener* _eventListener;
	BKWebViewMainThreadEventListener* _readAloudEventListener;
	BKWebViewMainThreadEventListener* _footnoteEventListener;
	NSURLRequest* _pendingRequest;
	NSURL* _originalURL;
	char _didFinishLoading;
	char _inSelectionDidChange;
	char _isForNonDisplayPurposesOnly;
	char _respectPageBreaks;
	char _loadsImagesAutomatically;
	DOMMouseEvent* _capturedClickEvent;
	UIWebDocumentView* _capturedClickEventWebView;
	UITapGestureRecognizer* _selectionGestureRecognizer;
	char _hadSelection;
	char _ignoreCapturedClick;
	CGPoint _cachedClickPoint;
	NSString* _soundTrack;
	int _queuePriority;
	char _didRewriteCSS;
	BKWebViewIndirector* _indirector;
	char _webkitFinishedLoad;
	NSBlockOperation* _deferredCompleteOp;
	NSString* _mediaActiveClass;
	IMPerformSelectorProxy* _performSelectorProxy;
	int _remoteResourcesPolicy;
	IMTheme* _theme;
	tuple<objc_ptr<AEMinimalTemplate *>, objc_ptr<id>, objc_ptr<NSURL *> >* _pendingTemplate;

}

@property (assign,nonatomic) id<BKWebViewDelegate> bkWebViewDelegate;                          //@synthesize bkWebViewDelegate=_bkWebViewDelegate - In the implementation block
@property (retain) NSURL * originalURL;                                                        //@synthesize originalURL=_originalURL - In the implementation block
@property (assign) char forNonDisplayPurposesOnly;                                             //@synthesize isForNonDisplayPurposesOnly=_isForNonDisplayPurposesOnly - In the implementation block
@property (assign) char didFinishLoading;                                                      //@synthesize didFinishLoading=_didFinishLoading - In the implementation block
@property (assign) char respectPageBreaks;                                                     //@synthesize respectPageBreaks=_respectPageBreaks - In the implementation block
@property (assign,nonatomic) int remoteResourcesPolicy;                                        //@synthesize remoteResourcesPolicy=_remoteResourcesPolicy - In the implementation block
@property (nonatomic,retain) IMTheme * theme;                                                  //@synthesize theme=_theme - In the implementation block
@property (nonatomic,copy) NSString * mediaActiveClass;                                        //@synthesize mediaActiveClass=_mediaActiveClass - In the implementation block
@property (assign,nonatomic) int queuePriority;                                                //@synthesize queuePriority=_queuePriority - In the implementation block
@property (nonatomic,readonly) char shouldScrollContent; 
@property (assign,nonatomic) char allowsRemoteInspection; 
@property (assign,nonatomic) char loadsImagesAutomatically;                                    //@synthesize loadsImagesAutomatically=_loadsImagesAutomatically - In the implementation block
@property (nonatomic,retain) NSString * soundTrack;                                            //@synthesize soundTrack=_soundTrack - In the implementation block
@property (nonatomic,retain) NSURLRequest * pendingRequest;                                    //@synthesize pendingRequest=_pendingRequest - In the implementation block
@property (assign,nonatomic) tuple<objc_ptr<AEMinimalTemplate *> pendingTemplate;              //@synthesize pendingTemplate=_pendingTemplate - In the implementation block
@property (nonatomic,readonly) IMPerformSelectorProxy * performSelectorProxy;                  //@synthesize performSelectorProxy=_performSelectorProxy - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(void)bk_purgeCaches;
+(char)gestureRecognizerIsWebViewLongPress:(id)arg1 ;
+(void)emptyWebCache;
+(id)iBooksImgURLForiBooksURL:(id)arg1 ;
+(void)emptyInMemoryWebCache;
+(id)_requestQueue;
+(id)fakeTemplateURL;
+(id)requestForURL:(id)arg1 ;
-(IMPerformSelectorProxy *)performSelectorProxy;
-(id)initWithFrame:(CGRect)arg1 forNonDisplayPurposesOnly:(char)arg2 ;
-(void)stopPlayingMedia:(char)arg1 ;
-(void)setBkWebViewDelegate:(id<BKWebViewDelegate>)arg1 ;
-(NSString *)mediaActiveClass;
-(void)setMediaActiveClass:(NSString *)arg1 ;
-(void)playFirstAutoplayMediaObjectInRange:(id)arg1 ;
-(void)installClickEventOnElement:(id)arg1 ;
-(void)removeClickEventOnElement:(id)arg1 ;
-(void)loadUrl:(id)arg1 ;
-(void)doPostDOMContentLoadedModifications;
-(char)_shouldDoStyleChangesOnCurrentThread;
-(char)shouldInstallDocumentClickHandler;
-(char)shouldInstallWebkitSwizzles;
-(char)forNonDisplayPurposesOnly;
-(id)chapterTitleForDOMNode:(id)arg1 nagivationInfoMap:(id)arg2 ;
-(void)stopPlayingMediaIfNoLongerVisible;
-(void)setRemoteResourcesPolicy:(int)arg1 ;
-(NSString *)soundTrack;
-(void)setRespectPageBreaks:(char)arg1 ;
-(void)setForNonDisplayPurposesOnly:(char)arg1 ;
-(id)pageTitleForDOMNode:(id)arg1 physicalPageMap:(id)arg2 ;
-(void)loadTemplate:(id)arg1 withData:(id)arg2 andBaseURL:(id)arg3 ;
-(id<BKWebViewDelegate>)bkWebViewDelegate;
-(char)respectPageBreaks;
-(void)_clearSavedStateForNewLoad;
-(void)_modifyScrollingBehaviors;
-(char)didFinishLoading;
-(void)_doPostLoadDOMModifications;
-(void)_dispatchDidFinishLoading;
-(char)_showImage:(id)arg1 inDocument:(id)arg2 ;
-(char)_hideImage:(id)arg1 ;
-(void)_doStyleChanges;
-(void)setWebPreferences;
-(void)setDidFinishLoading:(char)arg1 ;
-(void)_dequeueSelf;
-(void)setOriginalURL:(NSURL *)arg1 ;
-(void)setSoundTrack:(NSString *)arg1 ;
-(char)shouldScrollContent;
-(NSURLRequest *)pendingRequest;
-(tuple<objc_ptr<AEMinimalTemplate *>)pendingTemplate;
-(void)setPendingRequest:(NSURLRequest *)arg1 ;
-(void)setPendingTemplate:(tuple<objc_ptr<AEMinimalTemplate *>)arg1 ;
-(void)_loadPendingTemplate;
-(void)_loadTemplate:(id)arg1 withData:(id)arg2 andBaseURL:(id)arg3 ;
-(void)_queueRequest:(id)arg1 ;
-(void)_queueTemplate:(id)arg1 withData:(id)arg2 andBaseURL:(id)arg3 ;
-(void)rewriteCSSInStyleRules:(id)arg1 ;
-(void)rewriteCSSInStyleDeclaration:(id)arg1 forSelector:(id)arg2 andOwningNode:(id)arg3 ;
-(void)rewriteCSSInStyleRule:(id)arg1 ;
-(id)__determineURLForRelativeHref:(id)arg1 andDocumentURL:(id)arg2 ;
-(void)rewriteCSSInDocument:(id)arg1 ;
-(int)smilControlActionForString:(id)arg1 ;
-(id)readAloudDomEventListener;
-(void)_rewriteCSS;
-(void)_replaceReadaloudAttribute;
-(void)_disableTextFields;
-(id)_evaluateEmbeddedScript:(id)arg1 arguments:(id)arg2 ;
-(void)_modifyAutoplayNodes;
-(void)_replaceAudioPlayer;
-(void)_hookFootnoteLinks;
-(id)footnoteEventListener;
-(void)_callPauseOnMediaElementSet:(char)arg1 invisibleOnly:(char)arg2 ;
-(void)navigateToURL:(id)arg1 actionInformation:(id)arg2 ;
-(void)navigateToURL:(id)arg1 ;
-(int)remoteResourcesPolicy;
-(char)bk_dataSourceBelongsToMainFrame:(id)arg1 ;
-(int)bk_inFlightRequestCountForDataSource:(id)arg1 ;
-(void)bk_setInFlightRequestCount:(int)arg1 forDataSource:(id)arg2 ;
-(void)deferredCompleteLoadIfAppropriate;
-(void)_doAnyStyleChangesAndDidFinishNotificationInternal;
-(void)sendDidDrawNotification;
-(void)_finishedLoad;
-(void)_finishUpStyleChanges;
-(char)_shouldHandleErrorForFrame:(id)arg1 ;
-(void)handleDOMEvent:(id)arg1 ;
-(void)handleReadAloudDOMEvent:(id)arg1 ;
-(void)handleFootnoteDOMEvent:(id)arg1 ;
-(id)domEventListener;
-(char)_shouldProvideScriptObjectForFrame:(id)arg1 ;
-(void)processCapturedClickEvent;
-(id)_determineURLForRelativeHref:(id)arg1 andDocumentURL:(id)arg2 ;
-(char)_showHTMLImage:(id)arg1 ;
-(char)_showPosterImage:(id)arg1 inDocument:(id)arg2 ;
-(char)_showSVGImage:(id)arg1 inDocument:(id)arg2 ;
-(char)_hideHTMLImage:(id)arg1 ;
-(char)_hidePosterImage:(id)arg1 ;
-(char)_hideSVGImage:(id)arg1 ;
-(void)_applyPageColor;
-(char)requestIsFont:(id)arg1 ;
-(unsigned)indexOfPathPrecedingDOMNode:(id)arg1 inPaths:(id)arg2 ;
-(void)_webthread_webView:(id)arg1 tileDidDraw:(id)arg2 ;
-(void)setLoadsImagesAutomatically:(char)arg1 ;
-(id)initWithFrame:(CGRect)arg1 ;
-(void)setDelegate:(id)arg1 ;
-(void)dealloc;
-(void)reload;
-(char)gestureRecognizerShouldBegin:(id)arg1 ;
-(char)canPerformAction:(SEL)arg1 withSender:(id)arg2 ;
-(id)scrollView;
-(void)textWillChange:(id)arg1 ;
-(void)textDidChange:(id)arg1 ;
-(void)layoutHasChanged;
-(void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 request:(id)arg3 frame:(id)arg4 decisionListener:(id)arg5 ;
-(void)webView:(id)arg1 decidePolicyForNewWindowAction:(id)arg2 request:(id)arg3 newFrameName:(id)arg4 decisionListener:(id)arg5 ;
-(NSURL *)originalURL;
-(void)selectionWillChange:(id)arg1 ;
-(void)selectionDidChange:(id)arg1 ;
-(void)webView:(id)arg1 didFailProvisionalLoadWithError:(id)arg2 forFrame:(id)arg3 ;
-(void)webView:(id)arg1 didCommitLoadForFrame:(id)arg2 ;
-(void)webView:(id)arg1 didFinishLoadForFrame:(id)arg2 ;
-(void)webView:(id)arg1 didFailLoadWithError:(id)arg2 forFrame:(id)arg3 ;
-(void)webView:(id)arg1 didClearWindowObject:(id)arg2 forFrame:(id)arg3 ;
-(char)playsNicelyWithGestures;
-(void)webView:(id)arg1 willClickElement:(id)arg2 ;
-(void)webViewDidClick:(id)arg1 ;
-(void)webViewDidNotClick:(id)arg1 ;
-(id)webThreadWebView:(id)arg1 resource:(id)arg2 willSendRequest:(id)arg3 redirectResponse:(id)arg4 fromDataSource:(id)arg5 ;
-(id)webView:(id)arg1 identifierForInitialRequest:(id)arg2 fromDataSource:(id)arg3 ;
-(void)webView:(id)arg1 resource:(id)arg2 didFinishLoadingFromDataSource:(id)arg3 ;
-(void)webView:(id)arg1 resource:(id)arg2 didFailLoadingWithError:(id)arg3 fromDataSource:(id)arg4 ;
-(void)_handleError:(id)arg1 ;
-(IMTheme *)theme;
-(void)setTheme:(IMTheme *)arg1 ;
-(id)textContent;
-(void)setQueuePriority:(int)arg1 ;
-(int)queuePriority;
-(void)reloadFromOrigin;
-(char)loadsImagesAutomatically;
-(char)allowsRemoteInspection;
-(void)setAllowsRemoteInspection:(char)arg1 ;
@end

