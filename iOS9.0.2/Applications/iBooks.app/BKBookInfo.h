/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 6, 2015 at 5:12:14 PM Japan Standard Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /Applications/iBooks.app/iBooks
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <CoreData/NSManagedObject.h>

@class NSNumber, NSString, NSDate, NSData, NSSet;

@interface BKBookInfo : NSManagedObject {

	char _inDealloc;
	NSNumber* _cachedDownloadProgress;

}

@property (nonatomic,retain) NSString * bookBundlePath; 
@property (nonatomic,retain) NSString * databaseKey; 
@property (nonatomic,retain) NSString * dataSourceRootPath; 
@property (nonatomic,retain) NSString * bookUniqueId; 
@property (nonatomic,retain) NSString * bookEpubId; 
@property (nonatomic,retain) NSString * assetUrl; 
@property (nonatomic,retain) NSString * assetCacheUrl; 
@property (nonatomic,retain) NSString * bookAuthor; 
@property (nonatomic,retain) NSString * bookTitle; 
@property (nonatomic,retain) NSString * collectionServerSyncUniqueId; 
@property (nonatomic,retain) NSString * coverWritingModeString; 
@property (nonatomic,retain) NSString * sortAuthor; 
@property (nonatomic,readonly) NSString * sortAuthorWithFallback; 
@property (nonatomic,retain) NSString * sortTitle; 
@property (nonatomic,readonly) NSString * sortTitleWithFallback; 
@property (nonatomic,retain) NSString * genre; 
@property (nonatomic,readonly) NSString * shortBookTitle; 
@property (nonatomic,retain) NSDate * dateAdded; 
@property (nonatomic,retain) NSDate * dateLastOpened; 
@property (nonatomic,retain) NSString * genericCoverTemplate; 
@property (nonatomic,retain) NSString * iTunesArtHref; 
@property (nonatomic,retain) NSString * iTunesArtChecksum; 
@property (nonatomic,retain) NSNumber * sortKey; 
@property (nonatomic,retain) NSNumber * isThinned; 
@property (nonatomic,retain) NSString * temporaryItemIdentifier; 
@property (nonatomic,retain) NSString * language; 
@property (nonatomic,retain) NSDate * expectedDate; 
@property (nonatomic,retain) NSNumber * explicitContent; 
@property (nonatomic,retain) NSNumber * sampleContent; 
@property (nonatomic,retain) NSString * storeId; 
@property (nonatomic,retain) NSNumber * isNew; 
@property (nonatomic,retain) NSNumber * isNewlyUpgraded; 
@property (nonatomic,retain) NSNumber * isUbiquitous; 
@property (nonatomic,retain) NSNumber * isUploaded; 
@property (nonatomic,retain) NSNumber * ubiquityPreparationComplete; 
@property (nonatomic,retain) NSNumber * hasUploadError; 
@property (nonatomic,retain) NSNumber * isDownloaded; 
@property (nonatomic,retain) NSNumber * isDownloadingPaused; 
@property (nonatomic,retain) NSNumber * isProofingAsset; 
@property (nonatomic,retain) NSNumber * deletedFlag; 
@property (nonatomic,retain) NSNumber * seriesFlag; 
@property (nonatomic,retain) NSString * seriesId; 
@property (nonatomic,retain) NSNumber * seriesSortKey; 
@property (nonatomic,retain) NSNumber * bookHightWaterMark; 
@property (nonatomic,retain) NSDate * bookmarksServerMaxModificationDate; 
@property (nonatomic,retain) NSString * bookmarksServerVersion; 
@property (nonatomic,retain) NSDate * locationServerMaxModificationDate; 
@property (nonatomic,retain) NSString * locationServerVersion; 
@property (nonatomic,retain) NSNumber * downloadProgress; 
@property (nonatomic,retain) NSNumber * uploadProgress; 
@property (assign,nonatomic) int contentType; 
@property (nonatomic,retain) NSData * plistEntry; 
@property (nonatomic,retain) NSString * publicationVersion; 
@property (nonatomic,retain) NSString * publicationVersionHumanReadable; 
@property (nonatomic,retain) NSString * pluginAssetID; 
@property (nonatomic,retain) NSString * pageProgressionDirection; 
@property (nonatomic,readonly) char isRTL; 
@property (nonatomic,retain) NSString * purchasedDSID; 
@property (nonatomic,retain) NSString * downloadedDSID; 
@property (nonatomic,retain) NSString * familyID; 
@property (nonatomic,retain) NSSet * localItems; 
@property (nonatomic,retain) BKBookInfo * localSeriesContainer; 
@property (nonatomic,retain) BKBookInfo * purchasedSeriesContainer; 
@property (nonatomic,retain) NSSet * localOrPurchasedItems; 
@property (nonatomic,readonly) char currentlyDownloading; 
@property (nonatomic,readonly) char currentlyUploading; 
@property (nonatomic,retain) NSNumber * isDownloading; 
@property (nonatomic,retain) NSNumber * isUploading; 
@property (nonatomic,retain) NSNumber * cachedDownloadProgress;                        //@synthesize cachedDownloadProgress=_cachedDownloadProgress - In the implementation block
+(id)copyBookFromAdamId:(id)arg1 withMOC:(id)arg2 ;
+(id)excludeDeletedBooksPredicate;
+(id)predicateForThinBooksEligibleForUpdate;
+(id)predicateForDownloadingBooks;
+(id)bookFromDatabaseKey:(id)arg1 withMOC:(id)arg2 ;
+(id)booksWithPredicate:(id)arg1 inMOC:(id)arg2 ;
+(id)bookFromPluginAssetID:(id)arg1 withMOC:(id)arg2 ;
+(id)bookFromEpubIdentifier:(id)arg1 withMOC:(id)arg2 ;
+(id)bookMatchingFileName:(id)arg1 withMOC:(id)arg2 ;
+(id)predicateForBooksWithStoreIdInList:(id)arg1 ;
+(id)predicateForBookWithURL:(id)arg1 ;
+(id)copyBookFromUniqueIdentifier:(id)arg1 withMOC:(id)arg2 ;
+(id)databaseKeyFromStoreId:(id)arg1 andUniqueId:(id)arg2 ;
+(id)newBlankBook:(id)arg1 ;
+(id)predicateForNonDownloadingBooks;
+(int)bookFormatByFilePath:(id)arg1 ;
+(int)bookFormatByExtension:(id)arg1 ;
+(id)bookFromTemporaryItemIdentifier:(id)arg1 withMOC:(id)arg2 ;
+(id)predicateForIsNewBook;
+(id)newestBookWithSeriesID:(id)arg1 withMOC:(id)arg2 ;
+(id)mostRecentlyOpenedBookWithSeriesID:(id)arg1 withMOC:(id)arg2 ;
+(id)bookFromURL:(id)arg1 withMOC:(id)arg2 ;
-(char)isPartOfSeries;
-(char)currentlyDownloading;
-(char)isSeriesContainer;
-(char)isJalisco;
-(char)isSeriesItem;
-(char)isPreorderBook;
-(char)isAudiobook;
-(char)isLocalBook;
-(NSString *)shortBookTitle;
-(char)canAcceptDownloadProgressFromSource:(int)arg1 ;
-(void)clearIsDownloading;
-(void)setDownloadStarted;
-(char)isManagedBook;
-(void)setBookTitle:(NSString *)arg1 ;
-(void)setBookAuthor:(NSString *)arg1 ;
-(void)setSortAuthor:(NSString *)arg1 ;
-(void)setupFileSizeContentType;
-(void)setTemporaryItemIdentifier:(NSString *)arg1 ;
-(id)seriesStackBooks;
-(char)currentlyUploading;
-(void)resetTransientState;
-(void)_postCreation;
-(void)_clearTransient;
-(unsigned)countOfPurchasedBooksInSeriesRelativeToBook:(id)arg1 relation:(int)arg2 ;
-(unsigned)countOfBooksWithPredicate:(id)arg1 relativeToBook:(id)arg2 relation:(int)arg3 ;
-(id)adjacentSeriesBooksWithPredicate:(id)arg1 maxCount:(unsigned)arg2 relation:(int)arg3 ;
-(char)hasAnySeriesStackBooks;
-(id)adjacentSeriesBooksWithMaxCount:(unsigned)arg1 relation:(int)arg2 ;
-(void)setCachedDownloadProgress:(NSNumber *)arg1 ;
-(NSNumber *)cachedDownloadProgress;
-(void)setPublisherName:(id)arg1 ;
-(void)setPublisherLocation:(id)arg1 ;
-(void)setPublisherYear:(id)arg1 ;
-(char)needsGenericCoverArt;
-(NSString *)sortAuthorWithFallback;
-(NSString *)sortTitleWithFallback;
-(char)isReadyToOpen;
-(unsigned)countOfPurchasedBooksInSeries;
-(id)plistEntryDictionary:(char)arg1 ;
-(void)setDownloadRequested;
-(void)setUploadRequested;
-(void)setUploadStarted;
-(void)clearIsUploading;
-(int)compareSortKey:(id)arg1 ;
-(int)inverseCompareSortKey:(id)arg1 ;
-(void)setContentType:(int)arg1 ;
-(char)exists;
-(void)dealloc;
-(int)contentType;
-(id)filePath;
-(char)isRTL;
-(void)setStoreId:(NSString *)arg1 ;
-(void)willSave;
-(void)didSave;
-(void)awakeFromFetch;
-(void)willTurnIntoFault;
-(void)didTurnIntoFault;
-(void)willAccessValueForKey:(id)arg1 ;
-(char)isDeletable;
-(void)setSortTitle:(NSString *)arg1 ;
-(void)setGenre:(NSString *)arg1 ;
@end

